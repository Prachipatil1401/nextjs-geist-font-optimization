exports.id=24,exports.ids=[24],exports.modules={302:(e,t,a)=>{"use strict";var n=a(1997),r=a(7896),i={TRANSITIONAL:0,NONTRANSITIONAL:1};function s(e){return e.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function l(e){for(var t=0,a=r.length-1;t<=a;){var n=Math.floor((t+a)/2),i=r[n];if(i[0][0]<=e&&i[0][1]>=e)return i;i[0][0]>e?a=n-1:t=n+1}return null}var o=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function p(e){return e.replace(o,"_").length}var d=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function u(e,t,a){var r=function(e,t,a){for(var n=!1,r="",s=p(e),o=0;o<s;++o){var d=e.codePointAt(o),u=l(d);switch(u[1]){case"disallowed":n=!0,r+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":r+=String.fromCodePoint.apply(String,u[2]);break;case"deviation":a===i.TRANSITIONAL?r+=String.fromCodePoint.apply(String,u[2]):r+=String.fromCodePoint(d);break;case"valid":r+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":t?(n=!0,r+=String.fromCodePoint(d)):r+=String.fromCodePoint.apply(String,u[2]);break;case"disallowed_STD3_valid":t&&(n=!0),r+=String.fromCodePoint(d)}}return{string:r,error:n}}(e,t,a);r.string=s(r.string);for(var o=r.string.split("."),h=0;h<o.length;++h)try{var m=function(e,t){"xn--"===e.substr(0,4)&&(e=n.toUnicode(e),i.NONTRANSITIONAL);var a=!1;(s(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(d))&&(a=!0);for(var r=p(e),o=0;o<r;++o){var h=l(e.codePointAt(o));if(u===i.TRANSITIONAL&&"valid"!==h[1]||u===i.NONTRANSITIONAL&&"valid"!==h[1]&&"deviation"!==h[1]){a=!0;break}}return{label:e,error:a}}(o[h]);o[h]=m.label,r.error=r.error||m.error}catch(e){r.error=!0}return{string:o.join("."),error:r.error}}e.exports.toASCII=function(e,t,a,r){var i=u(e,t,a),s=i.string.split(".");if(s=s.map(function(e){try{return n.toASCII(e)}catch(t){return i.error=!0,e}}),r){var l=s.slice(0,s.length-1).join(".").length;(l.length>253||0===l.length)&&(i.error=!0);for(var o=0;o<s.length;++o)if(s.length>63||0===s.length){i.error=!0;break}}return i.error?null:s.join(".")},e.exports.toUnicode=function(e,t){var a=u(e,t,i.NONTRANSITIONAL);return{domain:a.string,error:a.error}},e.exports.PROCESSING_OPTIONS=i},1021:function(e,t,a){var n;!function(e,r,i){function s(e){var t,a=this,n=(t=0xefc8249d,function(e){e=String(e);for(var a=0;a<e.length;a++){var n=.02519603282416938*(t+=e.charCodeAt(a));t=n>>>0,n-=t,n*=t,t=n>>>0,n-=t,t+=0x100000000*n}return(t>>>0)*23283064365386963e-26});a.next=function(){var e=2091639*a.s0+23283064365386963e-26*a.c;return a.s0=a.s1,a.s1=a.s2,a.s2=e-(a.c=0|e)},a.c=1,a.s0=n(" "),a.s1=n(" "),a.s2=n(" "),a.s0-=n(e),a.s0<0&&(a.s0+=1),a.s1-=n(e),a.s1<0&&(a.s1+=1),a.s2-=n(e),a.s2<0&&(a.s2+=1)}function l(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var a=new s(e),n=t&&t.state,r=a.next;return r.int32=function(){return 0x100000000*a.next()|0},r.double=function(){return r()+(2097152*r()|0)*11102230246251565e-32},r.quick=r,n&&("object"==typeof n&&l(n,a),r.state=function(){return l(a,{})}),r}r&&r.exports?r.exports=o:a.amdD&&a.amdO?void 0===(n=(function(){return o}).call(t,a,t,r))||(r.exports=n):this.alea=o}(0,e=a.nmd(e),a.amdD)},1042:(e,t,a)=>{"use strict";let n=a(7403);t.implementation=class{constructor(e){let t=e[0],a=e[1],r=null;if(void 0!==a&&"failure"===(r=n.basicURLParse(a)))throw TypeError("Invalid base URL");let i=n.basicURLParse(t,{baseURL:r});if("failure"===i)throw TypeError("Invalid URL");this._url=i}get href(){return n.serializeURL(this._url)}set href(e){let t=n.basicURLParse(e);if("failure"===t)throw TypeError("Invalid URL");this._url=t}get origin(){return n.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){n.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){n.cannotHaveAUsernamePasswordPort(this._url)||n.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){n.cannotHaveAUsernamePasswordPort(this._url)||n.setThePassword(this._url,e)}get host(){let e=this._url;return null===e.host?"":null===e.port?n.serializeHost(e.host):n.serializeHost(e.host)+":"+n.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||n.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":n.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||n.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":n.serializeInteger(this._url.port)}set port(e){n.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:n.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],n.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){let t=this._url;if(""===e){t.query=null;return}let a="?"===e[0]?e.substring(1):e;t.query="",n.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e){this._url.fragment=null;return}let t="#"===e[0]?e.substring(1):e;this._url.fragment="",n.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},1852:e=>{"use strict";e.exports.mixin=function(e,t){let a=Object.getOwnPropertyNames(t);for(let n=0;n<a.length;++n)Object.defineProperty(e,a[n],Object.getOwnPropertyDescriptor(t,a[n]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},2024:(e,t,a)=>{"use strict";let n,r,i,s,l,o,p,d;a.d(t,{TaL:()=>T,Slp:()=>lJ,ZFI:()=>_,O0W:()=>hb,ilg:()=>hx,DZQ:()=>nj});var u,h,m,c,f,g,v,b,y,w,x,k,N,I,S,T={};a.r(T),a.d(T,{draw:()=>r8,fromPixels:()=>r7,fromPixelsAsync:()=>r3,toPixels:()=>r5});var C={};a.r(C),a.d(C,{assertParamsValid:()=>ie,computeFlatOffset:()=>ic,computeOutShape:()=>ia,getNormalizedAxes:()=>il,isSliceContinous:()=>im,maskToAxes:()=>it,parseSliceParams:()=>ig,sliceInfo:()=>iv,startForAxis:()=>iu,startIndicesWithElidedDims:()=>io,stopForAxis:()=>ih,stopIndicesWithElidedDims:()=>ip,stridesForAxis:()=>id,stridesWithElidedDims:()=>ir});var $={};a.r($),a.d($,{collectGatherOpShapeInfo:()=>oq,computeOutShape:()=>oj,segOpComputeOptimalWindowSize:()=>oH});var E={};a.r(E),a.d(E,{ERF_A1:()=>om,ERF_A2:()=>oc,ERF_A3:()=>of,ERF_A4:()=>og,ERF_A5:()=>ov,ERF_P:()=>oh,PARALLELIZE_THRESHOLD:()=>l8,RowPartitionType:()=>v,SELU_SCALE:()=>ou,SELU_SCALEALPHA:()=>od,applyActivation:()=>lc,assertAndGetBroadcastShape:()=>rG,assertAxesAreInnerMostDims:()=>sv,assertParamsConsistent:()=>l2,assignToTypedArray:()=>oN,axesAreInnerMostDims:()=>sm,calculateShapes:()=>op,checkEinsumDimSizes:()=>oE,checkPadOnDimRoundingMode:()=>iL,combineLocations:()=>sc,combineRaggedTensorToTensorShapes:()=>l6,complexWithEvenIndex:()=>ow,complexWithOddIndex:()=>ox,computeConv2DInfo:()=>iS,computeConv3DInfo:()=>iT,computeDefaultPad:()=>iC,computeDilation2DInfo:()=>ik,computeOptimalWindowSize:()=>l7,computeOutAndReduceShapes:()=>sf,computeOutShape:()=>l4,computePool2DInfo:()=>iN,computePool3DInfo:()=>iI,convertConv2DDataFormat:()=>iO,decodeEinsumEquation:()=>oC,eitherStridesOrDilationsAreOne:()=>iD,expandShapeToKeepDim:()=>sg,exponent:()=>oS,exponents:()=>oI,fromStringArrayToUint8:()=>oX,fromUint8ToStringArray:()=>oK,getAxesPermutation:()=>sb,getBroadcastDims:()=>rU,getComplexWithIndex:()=>ok,getEinsumComputePath:()=>o_,getEinsumPermutation:()=>o$,getFusedBiasGradient:()=>lm,getFusedDyActivation:()=>lh,getImageCenter:()=>oe,getInnerMostAxes:()=>sw,getPermuted:()=>oa,getRaggedRank:()=>l9,getReductionAxes:()=>rW,getReshaped:()=>ot,getReshapedPermuted:()=>on,getRowPartitionTypesHelper:()=>l3,getSliceBeginCoords:()=>or,getSliceSize:()=>oi,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>oD,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>oF,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>oO,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>oV,getSparseReshapeInputOutputMismatchErrorMessage:()=>oz,getSparseReshapeInputOutputMultipleErrorMessage:()=>oB,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>oL,getSparseReshapeNegativeOutputDimErrorMessage:()=>oM,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>oG,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>oP,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>oU,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>oW,getUndoAxesPermutation:()=>sy,isIdentityPermutation:()=>oR,log:()=>aG,mergeRealAndImagArrays:()=>ob,prepareAndValidate:()=>os,prepareSplitSize:()=>oA,segment_util:()=>$,shouldFuse:()=>lf,slice_util:()=>C,splitRealAndImagArrays:()=>oy,stridesOrDilationsArePositive:()=>iF,tupleValuesAreOne:()=>iA,upcastType:()=>ny,validateDefaultValueShape:()=>l5,validateInput:()=>oo,validateUpdateShape:()=>ol,warn:()=>aW});var _={};a.r(_),a.d(_,{Layer:()=>uh,RNN:()=>md,RNNCell:()=>mu,activation:()=>cD,add:()=>cU,alphaDropout:()=>fk,average:()=>cW,averagePooling1d:()=>cZ,averagePooling2d:()=>c0,averagePooling3d:()=>c6,avgPool1d:()=>cQ,avgPool2d:()=>c2,avgPool3d:()=>c3,avgPooling1d:()=>c1,avgPooling2d:()=>c4,avgPooling3d:()=>c9,batchNormalization:()=>cX,bidirectional:()=>fc,categoryEncoding:()=>fC,centerCrop:()=>fS,concatenate:()=>cG,conv1d:()=>cI,conv2d:()=>cS,conv2dTranspose:()=>cT,conv3d:()=>cC,conv3dTranspose:()=>c$,convLstm2d:()=>fd,convLstm2dCell:()=>fu,cropping2D:()=>c_,dense:()=>cF,depthwiseConv2d:()=>cA,dot:()=>cK,dropout:()=>cO,elu:()=>cb,embedding:()=>cP,flatten:()=>cM,gaussianDropout:()=>fx,gaussianNoise:()=>fw,globalAveragePooling1d:()=>c5,globalAveragePooling2d:()=>c8,globalMaxPool1d:()=>fg,globalMaxPool2d:()=>fv,globalMaxPooling1d:()=>c7,globalMaxPooling2d:()=>fe,gru:()=>fr,gruCell:()=>fi,input:()=>hk,inputLayer:()=>cv,layerNormalization:()=>cY,leakyReLU:()=>cw,lstm:()=>fs,lstmCell:()=>fl,masking:()=>fN,maxPool1d:()=>fb,maxPool2d:()=>fy,maxPooling1d:()=>ft,maxPooling2d:()=>fa,maxPooling3d:()=>fn,maximum:()=>cH,minimum:()=>cj,multiply:()=>cq,permute:()=>cz,prelu:()=>cx,randomWidth:()=>f$,reLU:()=>cy,repeatVector:()=>cV,rescaling:()=>fI,reshape:()=>cB,resizing:()=>fT,rnn:()=>fh,separableConv2d:()=>cE,simpleRNN:()=>fo,simpleRNNCell:()=>fp,softmax:()=>ck,spatialDropout1d:()=>cL,stackedRNNCells:()=>fm,thresholdedReLU:()=>cN,timeDistributed:()=>ff,upSampling2d:()=>cR,zeroPadding2d:()=>cJ});var R={};a.r(R),a.d(R,{mx:()=>gC,XI:()=>gj,Nk:()=>gq,f6:()=>gK,ct:()=>gN,YG:()=>gY,hH:()=>gQ,z3:()=>g7,sG:()=>va,uM:()=>vi,vS:()=>vm,qB:()=>vg,GG:()=>vv,lg:()=>vw,rq:()=>vb,cu:()=>vC,WR:()=>vS,GE:()=>vE,px:()=>v_,jC:()=>vL,He:()=>vV,hE:()=>vz,BF:()=>g9,Dk:()=>vG,cl:()=>vH,_B:()=>vJ,ub:()=>vQ,_f:()=>v1,Ku:()=>v3,qy:()=>v9,Zy:()=>v7,bu:()=>bt,zv:()=>gv,dH:()=>gR,HS:()=>gG,yH:()=>bo,l3:()=>bp,z9:()=>bd,x6:()=>bu,_m:()=>bc,eW:()=>bv,GK:()=>by,SP:()=>bw,yr:()=>bx,dl:()=>vp,Dw:()=>bI,xT:()=>bT,_X:()=>gF,wz:()=>bE});class A{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class D{refCount(e){return F("refCount")}incRef(e){return F("incRef")}timerAvailable(){return!0}time(e){return F("time")}read(e){return F("read")}readSync(e){return F("readSync")}readToGPU(e,t){return F("readToGPU")}numDataIds(){return F("numDataIds")}disposeData(e,t){return F("disposeData")}write(e,t,a){return F("write")}move(e,t,a,n,r){return F("move")}createTensorFromGPUData(e,t,a){return F("createTensorFromGPUData")}memory(){return F("memory")}floatPrecision(){return F("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return F("dispose")}}function F(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function O(e,t,a){return Math.max(e,Math.min(t,a))}function L(e){return e%2==0?e:e+1}function M(e,t,a){let n=e[t];e[t]=e[a],e[a]=n}function V(e,t){if(!e)throw Error("string"==typeof t?t:t())}function B(e,t,a=""){V(U(e,t),()=>a+` Shapes ${e} and ${t} must match`)}function z(e){V(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function P(e){if(0===e.length)return 1;let t=e[0];for(let a=1;a<e.length;a++)t*=e[a];return t}function U(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}function W(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function G(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function H(e,t=e=>0,a,n){return new Promise((r,i)=>{let s=0,l=()=>{if(e())return void r();let o=t(++s);if(null!=a&&s>=a)return void i();null!=n?n(l,o):setTimeout(l,o)};l()})}function j(e,t){let a=1,n=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)a*=e[t];else if(-1===e[t]){if(-1!==n)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${t}`);n=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===n){if(t>0&&t!==a)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===a)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%a!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${a}`);let r=e.slice();return r[n]=t/a,r}function q(e,t){let a=t.length;return V((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-a&&e<a),()=>`All values in axis param must be in range [-${a}, ${a}) but got axis ${e}`),V(e.every(e=>e%1==0),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?a+e:e)}function K(e,t){let a=[],n=[],r=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||r?null:q(t,e).sort(),s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(a.push(e[t]),n.push(t)),i[s]<=t&&s++}1!==e[t]&&(a.push(e[t]),n.push(t))}return{newShape:a,keptDims:n}}function X(e,t){let a=null;if(null==e||"float32"===e)a=new Float32Array(t);else if("int32"===e)a=new Int32Array(t);else if("bool"===e)a=new Uint8Array(t);else if("string"===e)a=Array(t);else throw Error(`Unknown data type ${e}`);return a}function Y(e,t){return"complex64"!==t&&("float32"!==t||"complex64"===e)&&("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)}function J(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function Z(e){return"string"==typeof e||e instanceof String}function Q(e){return"number"==typeof e}function ee(e){if(Array.isArray(e))return ee(e[0]);if(e instanceof Float32Array);else if(e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray)return"int32";else if(Q(e));else if(Z(e))return"string";else if("boolean"==typeof e)return"bool";return"float32"}function et(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ea(e,t){for(let a=t;a<e;++a)if(e%a==0)return a;return e}function en(e){let t=e.length;if(t<2)return[];let a=Array(t-1);a[t-2]=e[t-1];for(let n=t-3;n>=0;--n)a[n]=a[n+1]*e[n+1];return a}function er(e,t,a=!1){if(0===e.length)return t[0];let n=e.reduce((e,t)=>e*t)*(a?2:1);if(0===n)return[];if(n!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${a?" for a complex tensor":""}.`);return function e(t,a,n,r=!1){let i=[];if(1===a.length){let e=a[0]*(r?2:1);for(let a=0;a<e;a++)i[a]=n[t+a]}else{let s=a[0],l=a.slice(1),o=l.reduce((e,t)=>e*t)*(r?2:1);for(let a=0;a<s;a++)i[a]=e(t+a*o,l,n,r)}return i}(0,e,t,a)}function ei(e,t){let a=es(e,t);for(let e=0;e<a.length;e++)a[e]=1;return a}function es(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function el(e,t){let a=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return er(e,new Float32Array(a));if("int32"===t)return er(e,new Int32Array(a));if("bool"===t)return er(e,new Uint8Array(a));throw Error(`Unknown data type ${t}`)}function eo(e){e.forEach(t=>{V(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function ep(e,t,a){if(0===t)return 0;if(1===t)return e[0];let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=a[t]*e[t];return n}function ed(e,t,a){if(0===t)return[];if(1===t)return[e];let n=Array(t);for(let t=0;t<n.length-1;++t)n[t]=Math.floor(e/a[t]),e-=n[t]*a[t];return n[n.length-1]=e,n}function eu(e){return e&&e.then&&"function"==typeof e.then}let eh="tfjsflags";class em{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ec,this.populateURLFlags()}setPlatform(e,t){null==this.platform||ef.getBool("IS_TEST")||ef.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=e,this.platform=t}registerFlag(e,t,a){if(this.flagRegistry[e]={evaluationFn:t,setHook:a},null!=this.urlFlags[e]){let t=this.urlFlags[e];ef.getBool("IS_TEST")||ef.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(eu(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);eh in e&&e[eh].split(",").forEach(e=>{let[t,a]=e.split(":");this.urlFlags[t]=function(e,t){let a=t.toLowerCase();return"true"===a||"false"===a?"true"===a:`${+a}`===a?+a:t}(0,a)})}}function ec(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...a)=>{var n,r,i;return n=t,r=a[0],i=a[1],n[decodeURIComponent(r)]=decodeURIComponent(i||""),a.join("=")}),t}let ef=null;function eg(){if(null==n){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else if("undefined"!=typeof self)e=self;else throw Error("Could not find a global object");n=e}return n}function ev(e,t){let a=function(){let e=eg();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(a.has(e))return a.get(e);{let n=t();return a.set(e,n),a.get(e)}}let eb="Acos",ey="Acosh",ew="AddN",ex="ArgMax",ek="ArgMin",eN="Asin",eI="Asinh",eS="Atan",eT="Atanh",eC="Atan2",e$="AvgPool",eE="AvgPoolGrad",e_="AvgPool3D",eR="AvgPool3DGrad",eA="BatchMatMul",eD="BatchToSpaceND",eF="Bincount",eO="BitwiseAnd",eL="BroadcastArgs",eM="Cast",eV="Ceil",eB="ClipByValue",ez="Complex",eP="ComplexAbs",eU="Concat",eW="Conv2D",eG="Conv2DBackpropFilter",eH="Conv2DBackpropInput",ej="Conv3D",eq="Conv3DBackpropFilterV2",eK="Conv3DBackpropInputV2",eX="Cosh",eY="Cumprod",eJ="Cumsum",eZ="CropAndResize",eQ="DenseBincount",e1="DepthToSpace",e0="DepthwiseConv2dNative",e2="DepthwiseConv2dNativeBackpropFilter",e4="DepthwiseConv2dNativeBackpropInput",e6="Diag",e3="Dilation2D",e9="Dilation2DBackpropInput",e5="Dilation2DBackpropFilter",e8="Draw",e7="RealDiv",te="Einsum",tt="EluGrad",ta="Equal",tn="ExpandDims",tr="Expm1",ti="Fill",ts="FlipLeftRight",tl="Floor",to="FloorDiv",tp="FusedBatchNorm",td="GatherV2",tu="GatherNd",th="Greater",tm="GreaterEqual",tc="Identity",tf="IFFT",tg="Imag",tv="IsFinite",tb="IsInf",ty="IsNan",tw="LeakyRelu",tx="Less",tk="LessEqual",tN="LinSpace",tI="Log1p",tS="LogicalAnd",tT="LogicalNot",tC="LogicalOr",t$="LRNGrad",tE="Maximum",t_="MaxPool",tR="MaxPoolGrad",tA="MaxPool3D",tD="MaxPool3DGrad",tF="MaxPoolWithArgmax",tO="Mean",tL="Minimum",tM="MirrorPad",tV="Multinomial",tB="Multiply",tz="NotEqual",tP="NonMaxSuppressionV3",tU="NonMaxSuppressionV4",tW="NonMaxSuppressionV5",tG="OnesLike",tH="OneHot",tj="Pack",tq="PadV2",tK="Prelu",tX="Prod",tY="RaggedGather",tJ="RaggedRange",tZ="RaggedTensorToTensor",tQ="Range",t1="Real",t0="Reciprocal",t2="Relu",t4="Reshape",t6="ResizeNearestNeighbor",t3="ResizeNearestNeighborGrad",t9="ResizeBilinear",t5="ResizeBilinearGrad",t8="Relu6",t7="Reverse",ae="Round",at="Rsqrt",aa="ScatterNd",an="TensorScatterUpdate",ar="SearchSorted",ai="Select",as="Selu",al="Slice",ao="Sinh",ap="Sign",ad="Sigmoid",au="Softplus",ah="Sqrt",am="SpaceToBatchND",ac="SplitV",af="Softmax",ag="SparseFillEmptyRows",av="SparseReshape",ab="SparseSegmentMean",ay="SparseSegmentSum",aw="SparseToDense",ax="SquaredDifference",ak="Square",aN="StaticRegexReplace",aI="StridedSlice",aS="StringNGrams",aT="StringSplit",aC="StringToHashBucketFast",a$="Tanh",aE="Tile",a_="TopK",aR="Transform",aA="Transpose",aD="Unique",aF="Unpack",aO="UnsortedSegmentSum",aL="ZerosLike",aM="Step",aV="FromPixels",aB="RotateWithOffset",az="_FusedMatMul",aP="FusedConv2D",aU="FusedDepthwiseConv2D";function aW(...e){ef.getBool("IS_TEST")||ef.getBool("PROD")||console.warn(...e)}function aG(...e){ef.getBool("IS_TEST")||ef.getBool("PROD")||console.log(...e)}let aH=ev("kernelRegistry",()=>new Map),aj=ev("gradRegistry",()=>new Map);function aq(e,t){let a=function(e,t){return`${t}_${e}`}(e,t);return aH.get(a)}function aK(e){let t=aH.entries(),a=[];for(;;){let{done:n,value:r}=t.next();if(n)break;let[i,s]=r,[l]=i.split("_");l===e&&a.push(s)}return a}function aX(e){let{kernelName:t,backendName:a}=e,n=function(e,t){return`${t}_${e}`}(t,a);aH.has(n)&&aW(`The kernel '${t}' for backend '${a}' is already registered`),aH.set(n,e)}function aY(e,t){return`${t}_${e}`}function aJ(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var aZ=a(6243);let aQ=a.n(aZ)()||aZ;function a1(e){return aQ.fromString(e,!0,16)}let a0=a1("c3a5c85c97cb3127"),a2=a1("b492b66fbe98f273"),a4=a1("9ae16a3b2f90404f");function a6(e){return e.xor(e.shru(47))}function a3(e,t,a){let n=e.slice(t,t+a);return aQ.fromBytes(Array.from(n),!0,!0)}function a9(e,t){return a3(e,t,8)}function a5(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function a8(e,t,a=a1("9ddfea08eb382d69")){let n=e.xor(t).mul(a);n=n.xor(n.shru(47));let r=t.xor(n).mul(a);return(r=r.xor(r.shru(47))).mul(a)}function a7(e,t,a,n){return function(e,t,a,n,r,i){r=r.add(e),i=a5(i.add(r).add(n),21);let s=r;return r=(r=r.add(t)).add(a),i=i.add(a5(r,44)),[r.add(n),i.add(s)]}(a9(e,t),a9(e,t+8),a9(e,t+16),a9(e,t+24),a,n)}function ne(e,t){return"string"===t?nn(e):nt([e],t)}function nt(e,t){var a;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ns(e)),ef.getBool("DEBUG")&&function(e,t){for(let a=0;a<e.length;a++){let n=e[a];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}(e,t),(a=e)instanceof Float32Array&&"float32"===t||a instanceof Int32Array&&"int32"===t||a instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let a=0;a<t.length;++a)0!==Math.round(e[a])&&(t[a]=1);return t}throw Error(`Unknown data type ${t}`)}function na(){return ef.platform.now()}function nn(e,t="utf-8"){return t=t||"utf-8",ef.platform.encode(e,t)}function nr(e,t="utf-8"){return t=t||"utf-8",ef.platform.decode(e,t)}function ni(e){return null!=ef.platform.isTypedArray?ef.platform.isTypedArray(e):aJ(e)}function ns(e,t=[],a=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||eu(e)||null==e||ni(e)&&a)t.push(e);else if(Array.isArray(e)||ni(e))for(let n=0;n<e.length;++n)ns(e[n],t,a);else{let n=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(n=Math.max(n,Number(t)));for(let r=0;r<=n;r++)ns(e[r],t,a)}return t}class nl{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new no)}profileKernel(e,t,a){let n,r,i=()=>{n=a()},s=na();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(i);else{for(let e of(i(),n))e.dataSync();r=Promise.resolve({kernelMs:na()-s})}if(ef.getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<n.length;t++){let a=n[t];a.data().then(t=>{!function(e,t,a){if("float32"===t)for(let t=0;t<e.length;t++){let n=e[t];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${a}'`),!0}}(t,a.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:r.then(e=>e.kernelMs),extraInfo:r.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:a,timeMs:n,inputs:r,extraInfo:i}=e;a.forEach(e=>{Promise.all([e.data(),n,i]).then(a=>{this.logger.logKernelProfile(t,e,a[0],a[1],r,a[2])})})}}class no{logKernelProfile(e,t,a,n,r,i){let s="number"==typeof n?G(`${n}ms`,9):n.error,l=G(e,25),o=t.rank,p=t.size,d=G(t.shape.toString(),14),u="";for(let e in r){let a=r[e];if(null!=a){let n=a.shape||t.shape,r=n.length;u+=`${e}: ${r}D ${r>0?n:""} `}}console.log(`%c${l}	%c${s}	%c${o}D ${d}	%c${p}	%c${u}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function np(e,t,a){let n;return G(Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Z(e)?`'${e}'`:"bool"===a?nd(e):parseFloat(e.toFixed(7)).toString(),t)}function nd(e){return 0===e?"false":"true"}function nu(e){let t=[];for(let a=0;a<e.length;a+=2)t.push([e[a],e[a+1]]);return t}class nh{constructor(e,t,a){if(this.dtype=t,this.shape=e.slice(),this.size=P(e),null!=a){let e=a.length;V(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||X(t,this.size),this.strides=en(e)}set(e,...t){0===t.length&&(t=[0]),V(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let a=this.locToIndex(t);this.values[a]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let a of e){if(a<0||a>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=this.strides[t]*e[t];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let a=0;a<e.length-1;++a)t+=this.strides[a]*e[a];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let a=0;a<t.length-1;++a)t[a]=Math.floor(e/this.strides[a]),e-=t[a]*this.strides[a];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return nm().makeTensor(this.values,this.shape,this.dtype)}}let nm=null,nc=null;class nf{constructor(e,t,a,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=P(e),this.strides=en(e),this.dataId=a,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return nc.buffer(this.shape,this.dtype,e)}bufferSync(){return nc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return er(this.shape,e,"complex64"===this.dtype)}arraySync(){return er(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=nm().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>nr(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),nm().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=nm().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>nr(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await nm().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),nm().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return nc.print(this,e)}clone(){return this.throwIfDisposed(),nc.clone(this)}toString(e=!1){return function(e,t,a,n){let r=en(t),i=function(e,t,a,n){let r=P(t),i=n[n.length-1],s=Array(i).fill(0),l=t.length,o="complex64"===a?nu(e):e;if(l>1)for(let e=0;e<r/i;e++){let t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],np(o[t+e],0,a).length)}return s}(e,t,a,r),s=t.length,l=function e(t,a,n,r,i,s=!0){let l="complex64"===n?2:1,o=a[0],p=a.length;if(0===p)return"complex64"===n?[np(nu(t)[0],0,n)]:"bool"===n?[nd(t[0])]:[t[0].toString()];if(1===p){if(o>20){let e=Array.from(t.slice(0,3*l)),a=Array.from(t.slice((o-3)*l,o*l));return"complex64"===n&&(e=nu(e),a=nu(a)),["["+e.map((e,t)=>np(e,i[t],n)).join(", ")+", ..., "+a.map((e,t)=>np(e,i[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?nu(t):Array.from(t)).map((e,t)=>np(e,i[t],n)).join(", ")+"]"]}let d=a.slice(1),u=r.slice(1),h=r[0]*l,m=[];if(o>20){for(let a=0;a<3;a++){let r=a*h,s=r+h;m.push(...e(t.slice(r,s),d,n,u,i,!1))}m.push("...");for(let a=o-3;a<o;a++){let r=a*h,s=r+h;m.push(...e(t.slice(r,s),d,n,u,i,a===o-1))}}else for(let a=0;a<o;a++){let r=a*h,s=r+h;m.push(...e(t.slice(r,s),d,n,u,i,a===o-1))}let c=2===p?",":"";m[0]="["+(o>0?m[0]+c:"");for(let e=1;e<m.length-1;e++)m[e]=" "+m[e]+c;let f=",\n";for(let e=2;e<p;e++)f+="\n";return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":f),m}(e,t,a,r,i),o=["Tensor"];return n&&(o.push(`  dtype: ${a}`),o.push(`  rank: ${s}`),o.push(`  shape: [${t}]`),o.push("  values:")),o.push(l.map(e=>"    "+e).join("\n")),o.join("\n")}(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),nc.cast(this,e)}variable(e=!0,t,a){return this.throwIfDisposed(),nm().makeVariable(this,e,t,a)}}function ng(){return ev("Tensor",()=>nf)}Object.defineProperty(nf,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ng();class nv extends nf{constructor(e,t,a,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=a}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!U(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);nm().disposeTensor(this),this.dataId=e.dataId,nm().incRef(this,null)}dispose(){nm().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(nv,Symbol.hasInstance,{value:e=>e instanceof nf&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(u||(u={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(h||(h={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(m||(m={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(c||(c={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(f||(f={}));let nb={float32:c,int32:h,bool:m,complex64:f};function ny(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return nb[e][t]}function nw(e){return ny(e,"int32")}function nx(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function nk(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function nN(e,t){if(e.dtype===t.dtype)return[e,t];let a=ny(e.dtype,t.dtype);return[e.cast(a),t.cast(a)]}function nI(e,t){return t.some(t=>t.id===e.id)}function nS(e){let t=[];return function e(t,a,n){var r;if(null!=t){if(t instanceof nf)return void a.push(t);if(Array.isArray(r=t)||"object"==typeof r)for(let r in t){let i=t[r];n.has(i)||(n.add(i),e(i,a,n))}}}(e,t,new Set),t}function nT(e){return null!=e.kernelName}class nC{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}}class n${constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new nC}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t];if(await this.initializeBackend(a).success)return void await this.setBackend(a)}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(!(e in this.registryFactory))return null;else{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,a=1){return e in this.registryFactory?(aW(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:a},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:a}=this.initializeBackend(e);if(!(a?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new nl(this.backendInstance),!0}setupRegisteredKernels(){aK(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){aK(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let a=t.factory();if(!a||a instanceof D||"function"!=typeof a.then)return this.registry[e]=a,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,n=a.then(a=>!(t<this.pendingBackendInitId)&&(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>!(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,aW(`Initialization of backend ${e} failed`),aW(a.stack||a.message),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return aW(`Initialization of backend ${e} failed`),aW(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t],{success:n,asyncInit:r}=this.initializeBackend(a);if(r||n)return{name:a,asyncInit:r}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let a=this.state.tensorInfo.get(t),n=a.backend,r=this.readSync(t),i=n.refCount(t);n.disposeData(t,!0),a.backend=e,e.move(t,r,a.shape,a.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let a,n=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}return this.scopedRun(()=>this.startScope(n),()=>this.endScope(a),()=>((a=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(e,t,a){e();try{let e=a();return t(),e}catch(e){throw t(),e}}nextTensorId(){return n$.nextTensorId++}nextVariableId(){return n$.nextVariableId++}clone(e){let t=n_.runKernel(tc,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>n_.runKernel(eM,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,a){if(null==this.backendName&&this.backend,null==aq(e,this.backendName))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:a})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,a){let n=this.backend.numDataIds(),r=0;a.forEach(e=>{r+="complex64"===e.dtype?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=n-t-r-i;if(s>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,a,n,r,i=[],s=this.isTapeOn(),l=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let p=nT(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(nT(e)){let{kernelName:t,inputs:r,attrs:l}=e;null==this.backendName&&this.backend;let o=aq(t,this.backendName);V(null!=o,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),a=()=>{let e=this.backend.numDataIds(),a=Array.isArray(n=o.kernelFunc({inputs:r,attrs:l,backend:this.backend}))?n:[n];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);let p=a.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(s){let e=this.getTensorsForGradient(t,r,p);i=this.saveTensorsForBackwardMode(e)}return p}}else{let{forwardFunc:t}=e,r=e=>{s&&(i=e.map(e=>this.keep(this.clone(e))))};a=()=>{let e=this.backend.numDataIds(),a=Array.isArray(n=this.tidy(()=>t(this.backend,r)))?n:[n];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,e,a),a}}let{inputs:d,attrs:u}=e,h=nT(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(r=this.profiler.profileKernel(p,d,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(r),t=r.outputs):t=a()}),s&&this.addTapeNode(p,d,t,h,i,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:p,bytesAdded:this.state.numBytes-l,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:r.timeMs,extraInfo:r.extraInfo}),Array.isArray(n)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,a){let n=aj.get(e);if(null!=n){let e,r=n.inputsToSave||[],i=n.outputsToSave||[];n.saveAllInputs?(V(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=r.map(e=>t[e]);let s=a.filter((e,t)=>i[t]);return e.concat(s)}return[]}makeTensor(e,t,a,n){if(null==e)throw Error("Values passed to engine.makeTensor() are null");a=a||"float32",n=n||this.backend;let r=e;"string"===a&&Z(e[0])&&(r=e.map(e=>nn(e)));let i=n.write(r,t,a),s=new nf(t,a,i,this.nextTensorId());if(this.trackTensor(s,n),"string"===a){let e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,a,n){let r={dataId:e,shape:t,dtype:a=a||"float32"};return this.makeTensorFromTensorInfo(r,n)}makeTensorFromTensorInfo(e,t){let{dataId:a,shape:n,dtype:r}=e,i=new nf(n,r,a,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,a,n){a=a||this.nextVariableId().toString(),null!=n&&n!==e.dtype&&(e=e.cast(n));let r=new nv(e,t,a,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let a=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(a=e.size*J(e.dtype)),this.state.numBytes+=a,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:a})),e instanceof nv||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*J(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,a=this.state.numTensors;for(let n of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-a,this.state.activeProfile.kernels))n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,a,n,r,i){let s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:a,saved:r},l=aj.get(e);null!=l&&(n=l.gradFunc),null!=n&&(s.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=a[t],n=es(e.size,e.dtype);return this.makeTensor(n,e.shape,e.dtype)}return e}),n(e.length>1?e:e[0],r,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=nS(e),a=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||a.has(t.id)||t.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==n.id||this.track(e)})}gradients(e,t,a,n=!1){if(V(t.length>0,()=>"gradients() received an empty list of xs."),null!=a&&"float32"!==a.dtype)throw Error(`dy must have 'float32' dtype, but has '${a.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));V(r instanceof nf,()=>"The result y returned by f() must be a tensor.");let i=function(e,t,a){let n={},r={};for(let e=0;e<t.length;e++)n[t[e].id]=!0;for(let a=0;a<e.length;a++){let i=e[a],s=i.inputs;for(let e in s){let a=s[e],l=!1;for(let e=0;e<t.length;e++)if(n[a.id]){i.outputs.forEach(e=>n[e.id]=!0),l=!0,r[i.id]=!0;break}if(l)break}}let i={};i[a.id]=!0;let s={};for(let t=e.length-1;t>=0;t--){let a=e[t],n=a.inputs;for(let e=0;e<a.outputs.length;e++)if(i[a.outputs[e].id]){for(let e in n)i[n[e].id]=!0,s[a.id]=!0;break}}let l=[];for(let t=0;t<e.length;t++){let a=e[t];if(r[a.id]&&s[a.id]){let e={};for(let t in a.inputs){let r=a.inputs[t];n[r.id]&&(e[t]=r)}let t=Object.assign({},a);t.inputs=e,t.outputs=a.outputs,l.push(t)}}return l}(this.state.activeTape,t,r);if(!n&&0===i.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[r.id]=null==a?function(e){let t=ei(P(e),"float32");return n_.makeTensor(t,e,"float32")}(r.shape):a,function(e,t,a,n){for(let r=t.length-1;r>=0;r--){let i=t[r],s=[];if(i.outputs.forEach(t=>{let a=e[t.id];null!=a?s.push(a):s.push(null)}),null==i.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let l=i.gradient(s);for(let t in i.inputs){if(!(t in l))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(l)}.`);let r=a(()=>l[t]());if("float32"!==r.dtype)throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);let s=i.inputs[t];if(!U(r.shape,s.shape))throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=r;else{let t=e[s.id];e[s.id]=n(t,r),t.dispose()}}}}(e,i,e=>this.tidy(e),nR);let n=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:r,grads:n}})}customGrad(e){return V(et(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let a;V(t.every(e=>e instanceof nf),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n={};return t.forEach((e,t)=>{n[t]=e}),this.runKernelFunc({forwardFunc:(n,r)=>(V((a=e(...t,r)).value instanceof nf,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),V(et(a.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),a.value),backwardsFunc:(e,n)=>{let r=a.gradFunc(e,n),i=Array.isArray(r)?r:[r];V(i.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),V(i.every(e=>e instanceof nf),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let s={};return i.forEach((e,t)=>{s[t]=()=>e}),s},inputs:n})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=na(),a=await this.backend.time(e);return a.wallMs=na()-t,a}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new nC,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function nE(){let e=eg();if(null==e._tfengine){let t=new em(e);e._tfengine=new n$(t)}return ef=e._tfengine.ENV,nm=()=>e._tfengine,e._tfengine}n$.nextTensorId=0,n$.nextVariableId=0;let n_=nE();function nR(e,t){return n_.runKernel("Add",{a:e,b:t})}function nA(e){if(void 0!==r)return r;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function nD(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}let nF=ef;function nO(e,t){let a=e;if(ni(e))return"string"===t?[]:[e.length];if(nx(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(nk(e))return[e.buffer.size/(null==t?4:J(t))];if(!Array.isArray(e))return[];let n=[];for(;Array.isArray(a)||ni(a)&&"string"!==t;)n.push(a.length),a=a[0];return Array.isArray(e)&&ef.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,a,n){if(n=n||[],!Array.isArray(t)&&!ni(t))return void V(0===a.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${a[0]} elements`);V(a.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),V(t.length===a[0],()=>`Element arr[${n.join("][")}] should have ${a[0]} elements, but has ${t.length} elements`);let r=a.slice(1);for(let a=0;a<t.length;++a)e(t[a],r,n.concat(a))}(e,n,[]),n}function nL(e,t,a,n){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${a}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function nM(e,t,a,n="numeric"){if(e instanceof ng())return nL(n,e.dtype,t,a),e;let r=ee(e);if("string"!==r&&["bool","int32","float32"].indexOf(n)>=0&&(r=n),nL(n,r,t,a),null==e||!ni(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let n=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${a}' must be a Tensor or TensorLike, but got '${n}'`)}let i=nO(e,r);ni(e)||Array.isArray(e)||(e=[e]);let s="string"!==r?nt(e,r):ns(e,[],!0);return n_.makeTensor(s,i,r)}function nV(e,t,a,n="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${a} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>nM(e,`${t}[${r}]`,a,n))}function nB(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let a=t[0],n=e[a];a.endsWith("_")&&(a=a.substring(0,a.length-1));let r=(...e)=>{n_.startScope(a);try{let t=n(...e);return eu(t)&&console.error("Cannot return a Promise inside of tidy."),n_.endScope(t),t}catch(e){throw n_.endScope(null),e}};return Object.defineProperty(r,"name",{value:a+="__op",configurable:!0}),r}nF.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),nF.registerFlag("IS_BROWSER",()=>nD()),nF.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),nF.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),nF.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),nF.registerFlag("PROD",()=>!1),nF.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>nF.getBool("DEBUG")),nF.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),nF.registerFlag("IS_TEST",()=>!1),nF.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>nF.getBool("DEBUG")),nF.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),nF.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),nF.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);let nz=nB({complex_:function(e,t){let a=nM(e,"real","complex"),n=nM(t,"imag","complex");return B(a.shape,n.shape,`real and imag shapes, ${a.shape} and ${n.shape}, must match in call to tf.complex().`),n_.runKernel(ez,{real:a,imag:n})}});function nP(e,t,a,n){if(null==n)n=ee(e);else if("complex64"===n)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(nk(e)||nx(e)){if("float32"!==n&&"int32"!==n)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return n_.backend.createTensorFromGPUData(e,t||a,n)}if(!ni(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){eo(t);let e=P(t),n=P(a);V(e===n,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${n}`);for(let e=0;e<a.length;++e){let n=a[e],r=e!==a.length-1||n!==P(t.slice(e));V(a[e]===t[e]||!r,()=>`Error creating a new Tensor. Inferred shape (${a}) does not match the provided shape (${t}). `)}}return ni(e)||Array.isArray(e)||(e=[e]),t=t||a,e="string"!==n?nt(e,n):ns(e,[],!0),n_.makeTensor(e,t,n)}function nU(e,t,a){let n=nO(e,a);return nP(e,t,n,a)}let nW={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class nG{static join(e){return new nG(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>ni(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let a=0;a<e.length;a++){let n=e[a];a!==e.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let r=t+n.byteLength;this.shards.push({buffer:n,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let a=this.findShardForByte(e);if(-1===a)throw Error(`Could not find start shard for byte ${e}`);let n=new ArrayBuffer(t-e),r=new Uint8Array(n),i=0;for(let n=a;n<this.shards.length;n++){let a=this.shards[n],s=e+i-a.start,l=i,o=Math.min(t,a.end)-a.start,p=new Uint8Array(a.buffer,s,o-s);if(r.set(p,l),i+=p.length,t<a.end)break}return n}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:+(e>=t.end)}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let a=function(e,t){let a=0,n=e.length;for(;a<=n;){let r=Math.floor((n-a)/2)+a,i=t(e[r]);if(0===i)return r;i<0?n=r:a=r+1}return -1}(this.shards,t);return -1===a?-1:(this.previousShardIndex=a,this.previousShardIndex)}}function nH(){return n_.memory()}function nj(e,t){return n_.tidy(e,t)}function nq(e){nS(e).forEach(e=>e.dispose())}function nK(e){return n_.keep(e)}function nX(e,t,a=1){return n_.registerBackend(e,t,a)}async function nY(e,t){let a=[],n=[],r=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<r.length;++i){let s=r[i],l=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw Error(`Unsupported dtype in weight '${s}': ${l.dtype}`);let o={name:s,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){let e=new Promise(async e=>{let t=await l.bytes(),a=new Uint8Array(t.reduce((e,t)=>e+t.length,0)+4*t.length),n=0;for(let e=0;e<t.length;e++){let r=t[e],i=new Uint8Array(new Uint32Array([r.length]).buffer);a.set(i,n),n+=4,a.set(r,n),n+=r.length}e(a)});n.push(e)}else n.push(l.data());null!=t&&(o.group=t),a.push(o)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,a=[];e.forEach(e=>{if(t+=e.byteLength,a.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let n=new Uint8Array(t),r=0;return a.forEach(e=>{n.set(new Uint8Array(e.buffer),r),r+=e.byteLength}),n.buffer}(await Promise.all(n)),specs:a}}let nJ="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function nZ(e){return nJ?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function nQ(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function n1(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),a}async function n0(e,t){let a,n;null!=e.weightsManifest&&([a,n]=await t(e.weightsManifest));var r=a,i=n;let s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!r)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!i)throw Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=r,s.weightData=i}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}function n2(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:nZ(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:nZ(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new nG(e.weightData).byteLength}}function n4(e){let t=[];for(let a of e)t.push(...a.weights);return t}class n6{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==n6.instance&&(n6.instance=new n6),n6.instance}static registerSaveRouter(e){n6.getInstance().saveRouters.push(e)}static registerLoadRouter(e){n6.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return n6.getHandlers(e,"save")}static getLoadHandlers(e,t){return n6.getHandlers(e,"load",t)}static getHandlers(e,t,a){let n=[];return("load"===t?n6.getInstance().loadRouters:n6.getInstance().saveRouters).forEach(t=>{let r=t(e,a);null!==r&&n.push(r)}),n}}let n3=e=>n6.getSaveHandlers(e),n9=(e,t)=>n6.getLoadHandlers(e,t),n5="tensorflowjs",n8="models_store",n7="model_info_store";function re(){if(!ef.getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function rt(e){let t=e.result;t.createObjectStore(n8,{keyPath:"modelPath"}),t.createObjectStore(n7,{keyPath:"modelPath"})}class ra{constructor(e){if(this.indexedDB=re(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,a)=>{let n=this.indexedDB.open(n5,1);n.onupgradeneeded=()=>rt(n),n.onsuccess=()=>{let r=n.result;if(null==t){let t=r.transaction(n8,"readonly"),n=t.objectStore(n8).get(this.modelPath);n.onsuccess=()=>{if(null==n.result)return r.close(),a(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(n.result.modelArtifacts)},n.onerror=e=>(r.close(),a(n.error)),t.oncomplete=()=>r.close()}else{let n,i;t.weightData=nG.join(t.weightData);let s=n2(t),l=r.transaction(n7,"readwrite"),o=l.objectStore(n7);try{n=o.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(e){return a(e)}n.onsuccess=()=>{let n,p=(i=r.transaction(n8,"readwrite")).objectStore(n8);try{n=p.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(e){return a(e)}n.onsuccess=()=>e({modelArtifactsInfo:s}),n.onerror=e=>{let t=(o=l.objectStore(n7)).delete(this.modelPath);t.onsuccess=()=>(r.close(),a(n.error)),t.onerror=e=>(r.close(),a(n.error))}},n.onerror=e=>(r.close(),a(n.error)),l.oncomplete=()=>{null==i?r.close():i.oncomplete=()=>r.close()}}},n.onerror=e=>a(n.error)})}}ra.URL_SCHEME="indexeddb://";let rn=e=>{var t;return ef.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ra.URL_SCHEME)?(t=e.slice(ra.URL_SCHEME.length),new ra(t)):null};n6.registerSaveRouter(rn),n6.registerLoadRouter(rn);class rr{constructor(){this.indexedDB=re()}async listModels(){return new Promise((e,t)=>{let a=this.indexedDB.open(n5,1);a.onupgradeneeded=()=>rt(a),a.onsuccess=()=>{let n=a.result,r=n.transaction(n7,"readonly"),i=r.objectStore(n7).getAll();i.onsuccess=()=>{let t={};for(let e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(n.close(),t(i.error)),r.oncomplete=()=>n.close()},a.onerror=e=>t(a.error)})}async removeModel(e){var t;return e=(t=e).startsWith(ra.URL_SCHEME)?t.slice(ra.URL_SCHEME.length):t,new Promise((t,a)=>{let n=this.indexedDB.open(n5,1);n.onupgradeneeded=()=>rt(n),n.onsuccess=()=>{let r,i=n.result,s=i.transaction(n7,"readwrite"),l=s.objectStore(n7),o=l.get(e);o.onsuccess=()=>{if(null==o.result)return i.close(),a(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let n=l.delete(e),s=()=>{let n=(r=i.transaction(n8,"readwrite")).objectStore(n8).delete(e);n.onsuccess=()=>t(o.result.modelArtifactsInfo),n.onerror=e=>a(o.error)};n.onsuccess=s,n.onerror=e=>(s(),i.close(),a(o.error))}},o.onerror=e=>(i.close(),a(o.error)),s.oncomplete=()=>{null==r?i.close():r.oncomplete=()=>i.close()}},n.onerror=e=>a(n.error)})}}let ri="tensorflowjs_models",rs="info";function rl(e){return{info:[ri,e,rs].join("/"),topology:[ri,e,"model_topology"].join("/"),weightSpecs:[ri,e,"weight_specs"].join("/"),weightData:[ri,e,"weight_data"].join("/"),modelMetadata:[ri,e,"model_metadata"].join("/")}}function ro(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}class rp{constructor(e){if(!ef.getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=rl(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),n=n2(e),r=nG.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(nJ)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),a="";for(let e=0,n=t.length;e<n;e++)a+=String.fromCharCode(t[e]);return btoa(a)}(r));let i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:n}}catch(e){throw ro(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(null==a)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=a;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==n)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){let e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(null==i)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(nJ){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),a=new Uint8Array(t.length);for(let e=0;e<t.length;++e)a.set([t.charCodeAt(e)],e);return a.buffer}(i),t}}rp.URL_SCHEME="localstorage://";let rd=e=>{var t;return ef.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(rp.URL_SCHEME)?(t=e.slice(rp.URL_SCHEME.length),new rp(t)):null};n6.registerSaveRouter(rd),n6.registerLoadRouter(rd);class ru{constructor(){V(ef.getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),V("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=ri+"/",a="/"+rs;for(let n=0;n<this.LS.length;++n){let r=this.LS.key(n);r.startsWith(t)&&r.endsWith(a)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;let a=rl(e=(t=e).startsWith(rp.URL_SCHEME)?t.slice(rp.URL_SCHEME.length):t);if(null==this.LS.getItem(a.info))throw Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(a.info));return ro(a),n}}class rh{constructor(){this.managers={}}static getInstance(){return null==rh.instance&&(rh.instance=new rh),rh.instance}static registerManager(e,t){V(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),V(e.length>0,()=>"scheme must not be an empty string.");let a=rh.getInstance();V(null==a.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),a.managers[e]=t}static getManager(e){let t=rh.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(rh.getInstance().managers)}}function rm(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${rh.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}class rc{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if("undefined"==typeof window||!ef.getBool("USE_SETTIMEOUTCUSTOM"))return void setTimeout(e,t);this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return aJ(e)}}if(ef.get("IS_BROWSER")){ef.setPlatform("browser",new rc);try{rh.registerManager(rp.URL_SCHEME,new ru)}catch(e){}try{rh.registerManager(ra.URL_SCHEME,new rr)}catch(e){}}let rf={importFetch:()=>a(6976)};class rg{constructor(){this.util=a(8354),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ef.global.fetch?ef.global.fetch(e,t):(null==i&&(i=rf.importFetch()),i(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function rv(e,t="float32",a){return t=t||"float32",eo(e),new nh(e,t,a)}ef.get("IS_NODE")&&!ef.get("IS_BROWSER")&&ef.setPlatform("node",new rg);let rb=nB({cast_:function(e,t){let a=nM(e,"x","cast");if("bool"!==t&&"complex64"!==t&&"float32"!==t&&"int32"!==t&&"string"!==t)throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==a.dtype||"string"!==t&&"string"===a.dtype)throw Error("Only strings can be casted to strings");return n_.runKernel(eM,{x:a},{dtype:t})}}),ry=nB({clone_:function(e){let t=nM(e,"x","clone","string_or_numeric");return n_.runKernel(tc,{x:t})}});nE(),nc={buffer:rv,cast:rb,clone:ry,print:function(e,t=!1){console.log(e.toString(t))}};let rw=nB({add_:function(e,t){let a=nM(e,"a","add"),n=nM(t,"b","add");[a,n]=nN(a,n);let r={a:a,b:n};return n_.runKernel("Add",r)}}),rx=nB({floorDiv_:function(e,t){let a=nM(e,"a","floorDiv"),n=nM(t,"b","floorDiv");[a,n]=nN(a,n);let r={a:a,b:n};return n_.runKernel(to,r)}}),rk=nB({div_:function(e,t){let a=nM(e,"a","div"),n=nM(t,"b","div");if([a,n]=nN(a,n),"int32"===a.dtype&&"int32"===n.dtype)return rx(a,n);let r={a:a,b:n};return n_.runKernel(e7,r,{})}}),rN=nB({mul_:function(e,t){let a=nM(e,"a","mul"),n=nM(t,"b","mul");[a,n]=nN(a,n);let r={a:a,b:n};return n_.runKernel(tB,r)}}),rI=nB({sqrt_:function(e){let t=nM(e,"x","sqrt","float32");return n_.runKernel(ah,{x:t})}}),rS=nB({square_:function(e){let t=nM(e,"x","square");return n_.runKernel("Square",{x:t},{})}}),rT=nB({zerosLike_:function(e){let t=nM(e,"x","zerosLike");return n_.runKernel(aL,{x:t})}});function rC(e){return n_.customGrad(e)}function r$(e,t){if((ni(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ni(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return nP(e,[],[],t)}let rE=new Map,r_=new Map;class rR{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class rA{constructor(){this.classNameMap={}}static getMap(){return null==rA.instance&&(rA.instance=new rA),rA.instance}static register(e){rA.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function rD(e,t,a){V(null!=e.className,()=>"Class being registered does not have the static className property defined."),V("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),V(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===a&&(a=e.className);let n=t+">"+a;return rA.register(e),rE.set(n,e),r_.set(e,n),e}class rF extends rR{minimize(e,t=!1,a){let{value:n,grads:r}=this.computeGradients(e,a);if(null!=a){let e=a.map(e=>({name:e.name,tensor:r[e.name]}));this.applyGradients(e)}else this.applyGradients(r);return(nq(r),t)?n:(n.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){V(et(e),()=>"The f passed in variableGrads(f) must be a function"),V(null==t||Array.isArray(t)&&t.every(e=>e instanceof nv),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let a=null!=t;if(!a)for(let e in t=[],n_.registeredVariables)t.push(n_.registeredVariables[e]);let n=a?t.filter(e=>!e.trainable):null,r=t.length;V((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let{value:i,grads:s}=n_.gradients(e,t,null,!0);V(s.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),V(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((e,t)=>{null!=s[t]&&(l[e.name]=s[t])}),null!=n&&n.forEach(e=>l[e.name]=null),{value:i,grads:l}}(e,t)}dispose(){null!=this.iterations_&&nq(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:r$(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(rF,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class rO extends rF{static get className(){return"Adadelta"}constructor(e,t,a=null){super(),this.learningRate=e,this.rho=t,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==a&&(this.epsilon=n_.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,a)=>{let n=n_.registeredVariables[t];null==this.accumulatedGrads[a]&&(this.accumulatedGrads[a]={originalName:`${t}/accum_grad`,variable:nj(()=>rT(n).variable(!1))}),null==this.accumulatedUpdates[a]&&(this.accumulatedUpdates[a]={originalName:`${t}/accum_var`,variable:nj(()=>rT(n).variable(!1))});let r=Array.isArray(e)?e[a].tensor:e[t];if(null==r)return;let i=this.accumulatedGrads[a].variable,s=this.accumulatedUpdates[a].variable;nj(()=>{let e=rw(rN(i,this.rho),rN(rS(r),1-this.rho)),t=rN(rk(rI(rw(s,this.epsilon)),rI(rw(i,this.epsilon))),r),a=rw(rN(s,this.rho),rN(rS(t),1-this.rho));i.assign(e),s.assign(a);let l=rw(rN(t,-this.learningRate),n);n.assign(l)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(nq(this.accumulatedGrads.map(e=>e.variable)),nq(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function rL(e,t,a){eo(e),a=a||ee(t);let n={shape:e,value:t,dtype:a};return n_.runKernel(ti,{},n)}class rM extends rF{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,a)=>{let n=n_.registeredVariables[t];null==this.accumulatedGrads[a]&&(this.accumulatedGrads[a]={originalName:`${t}/accumulator`,variable:nj(()=>rL(n.shape,this.initialAccumulatorValue).variable(!1))});let r=Array.isArray(e)?e[a].tensor:e[t];if(null==r)return;let i=this.accumulatedGrads[a].variable;nj(()=>{let e=rw(i,rS(r));i.assign(e);let t=rw(rN(rk(r,rI(rw(e,n_.backend.epsilon()))),-this.learningRate),n);n.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&nq(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}let rV=nB({pow_:function(e,t){let a=nM(e,"base","pow"),n=nM(t,"exp","pow");[a,n]=nN(a,n);let r={a:a,b:n};return n_.runKernel("Pow",r)}}),rB=nB({sub_:function(e,t){let a=nM(e,"a","sub"),n=nM(t,"b","sub");[a,n]=nN(a,n);let r={a:a,b:n};return n_.runKernel("Sub",r)}});class rz extends rF{static get className(){return"Adam"}constructor(e,t,a,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],nj(()=>{this.accBeta1=r$(t).variable(),this.accBeta2=r$(a).variable()}),null==n&&(this.epsilon=n_.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);nj(()=>{let a=rB(1,this.accBeta1),n=rB(1,this.accBeta2);t.forEach((t,r)=>{let i=n_.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:nj(()=>rT(i).variable(!1))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:nj(()=>rT(i).variable(!1))});let s=Array.isArray(e)?e[r].tensor:e[t];if(null==s)return;let l=this.accumulatedFirstMoment[r].variable,o=this.accumulatedSecondMoment[r].variable,p=rw(rN(l,this.beta1),rN(s,1-this.beta1)),d=rw(rN(o,this.beta2),rN(rS(s),1-this.beta2)),u=rk(p,a),h=rk(d,n);l.assign(p),o.assign(d);let m=rw(rN(rk(u,rw(rI(h),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(rN(this.accBeta1,this.beta1)),this.accBeta2.assign(rN(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&nq(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&nq(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),nj(()=>{this.accBeta1.assign(rV(this.beta1,this.iterations_+1)),this.accBeta2.assign(rV(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}let rP=nB({abs_:function(e){let t=nM(e,"x","abs");return"complex64"===t.dtype?n_.runKernel(eP,{x:t}):n_.runKernel("Abs",{x:t})}});function rU(e,t){let a=e.length,n=[];for(let r=0;r<a;r++){let i=a-1-r,s=e[i]||1;(t[t.length-1-r]||1)>1&&1===s&&n.unshift(i)}return n}function rW(e,t){let a=[];for(let n=0;n<t.length;n++){let r=e[e.length-n-1],i=t.length-n-1,s=t[i];(null==r||1===r&&s>1)&&a.unshift(i)}return a}function rG(e,t){let a=Math.max(e.length,t.length),n=Array(a);for(let r=0;r<a;r++){let i=e[e.length-r-1];null==i&&(i=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===i)n[a-r-1]=s;else if(1===s)n[a-r-1]=i;else if(i!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else n[a-r-1]=i}return n}let rH=nB({maximum_:function(e,t){let a=nM(e,"a","maximum"),n=nM(t,"b","maximum");[a,n]=nN(a,n),"bool"===a.dtype&&(a=rb(a,"int32"),n=rb(n,"int32")),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(tE,r)}});class rj extends rF{static get className(){return"Adamax"}constructor(e,t,a,n=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=n,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],nj(()=>{this.iteration=r$(0).variable(),this.accBeta1=r$(t).variable()}),null==n&&(this.epsilon=n_.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);nj(()=>{let a=rB(1,this.accBeta1),n=rk(-this.learningRate,rw(rN(this.iteration,this.decay),1));t.forEach((t,r)=>{let i=n_.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:rT(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:rT(i).variable(!1)});let s=Array.isArray(e)?e[r].tensor:e[t];if(null==s)return;let l=this.accumulatedFirstMoment[r].variable,o=this.accumulatedWeightedInfNorm[r].variable,p=rw(rN(l,this.beta1),rN(s,1-this.beta1)),d=rH(rN(o,this.beta2),rP(s));l.assign(p),o.assign(d);let u=rw(rN(rk(n,a),rk(p,rw(d,this.epsilon))),i);i.assign(u)}),this.iteration.assign(rw(this.iteration,1)),this.accBeta1.assign(rN(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&nq(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&nq(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class rq extends rF{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,a)=>{let n=Array.isArray(e)?e[a].tensor:e[t];if(null==n)return;let r=n_.registeredVariables[t];nj(()=>{let e=rw(rN(this.c,n),r);r.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=nK(r$(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class rK extends rq{static get className(){return"Momentum"}constructor(e,t,a=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=a,this.accumulations=[],this.m=r$(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,a)=>{let n=n_.registeredVariables[t];null==this.accumulations[a]&&(this.accumulations[a]={originalName:`${t}/momentum`,variable:nj(()=>rT(n).variable(!1))});let r=this.accumulations[a].variable,i=Array.isArray(e)?e[a].tensor:e[t];null!=i&&nj(()=>{let e,t=rw(rN(this.m,r),i);e=this.useNesterov?rw(rN(this.c,rw(i,rN(t,this.m))),n):rw(rN(this.c,t),n),r.assign(t),n.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&nq(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class rX extends rF{static get className(){return"RMSProp"}constructor(e,t=.9,a=0,n=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=a,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==n&&(this.epsilon=n_.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,a)=>{let n=n_.registeredVariables[t];null==this.accumulatedMeanSquares[a]&&(this.accumulatedMeanSquares[a]={originalName:`${t}/rms`,variable:nj(()=>rT(n).variable(!1))}),null==this.accumulatedMoments[a]&&(this.accumulatedMoments[a]={originalName:`${t}/momentum`,variable:nj(()=>rT(n).variable(!1))}),null==this.accumulatedMeanGrads[a]&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${t}/mg`,variable:nj(()=>rT(n).variable(!1))});let r=Array.isArray(e)?e[a].tensor:e[t];if(null==r)return;let i=this.accumulatedMeanSquares[a].variable,s=this.accumulatedMoments[a].variable;nj(()=>{let e=rw(rN(i,this.decay),rN(rS(r),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[a].variable,l=rw(rN(t,this.decay),rN(r,1-this.decay)),o=rk(rN(r,this.learningRate),rI(rB(e,rw(rS(l),this.epsilon)))),p=rw(rN(s,this.momentum),o);i.assign(e),t.assign(l),s.assign(p);let d=rB(n,p);n.assign(d)}else{let e=rw(rN(i,this.decay),rN(rS(r),1-this.decay)),t=rw(rN(s,this.momentum),rk(rN(r,this.learningRate),rI(rw(e,this.epsilon))));i.assign(e),s.assign(t);let a=rB(n,t);n.assign(a)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&nq(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&nq(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&nq(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}function rY(e){return new Promise(e=>setTimeout(e)).then(e)}class rJ{constructor(e){if(!ef.getBool("IS_BROWSER"))throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(rJ.URL_SCHEME)&&(e=e.slice(rJ.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");let t=nG.join(e.weightData),a=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],n=n1(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await rY(()=>i.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=a,await rY(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:n2(e)}}}}rJ.URL_SCHEME="downloads://";function rZ(e,t,a,n){var r,i,s;V(null!=(r=e)&&Array.isArray(r)&&r.length>0,()=>"promises must be a none empty array"),i=a=null==a?0:a,s=n=null==n?1:n,V(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${i}`),V(s>=0&&s<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${s}`),V(s>=i,()=>`startFraction must be no more than endFraction, but got startFraction ${i} and endFraction ${s}`);let l=0;return Promise.all(e.map(r=>(r.then(r=>(t(a+ ++l/e.length*(n-a)),r)),r)))}async function rQ(e,t){null==t&&(t={});let a=null==t.fetchFunc?ef.platform.fetch:t.fetchFunc,n=e.map(e=>a(e,t.requestInit,{isBinary:!0})),r=(null==t.onProgress?await Promise.all(n):await rZ(n,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(r):await rZ(r,t.onProgress,.5,1)}n6.registerSaveRouter(e=>ef.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(rJ.URL_SCHEME)?function(e="model"){return new rJ(e)}(e.slice(rJ.URL_SCHEME.length)):null);class r1{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(V("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=ef.platform.fetch,V(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&V(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let a=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=n1(e,a);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let a=nG.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:"application/octet-stream"}),"model.weights.bin")}let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:n2(e),responses:[r]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}let a=e.modelTopology,n=e.weightsManifest;if(null==a&&null==n)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){return this.loadOptions.streamWeights?this.loadStream():n0(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),a=n4(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:a,getWeightStream:()=>(function(e,t){var a;let n,r=null==t.fetchFunc?ef.platform.fetch:t.fetchFunc,i=0;return null==(a=t.onProgress)||a.call(t,0),new ReadableStream({pull:async a=>{for(var s;i<e.length;){n||(n=(await r(e[i],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:o}=await n.read();if(l){i++,n=void 0,null==(s=t.onProgress)||s.call(t,i/e.length);continue}a.enqueue(o);return}a.close()}})})(t,this.loadOptions)})}async getWeightUrls(e){let[t,a]=function(e){let t=e.lastIndexOf("/"),a=e.lastIndexOf("?");return[e.substring(0,t)+"/",a>t?e.substring(a):""]}(Array.isArray(this.path)?this.path[1]:this.path),n=this.weightPathPrefix||t,r=[],i=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):r.push(n+e+a);return this.weightUrlConverter&&r.push(...await Promise.all(i)),r}async loadWeights(e){let t=await this.getWeightUrls(e);return[n4(e),await rQ(t,this.loadOptions)]}}function r0(e){return null!=e.match(r1.URL_SCHEME_REGEX)}r1.URL_SCHEME_REGEX=/^https?:\/\//;let r2=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc));else{let a=!0;if(Array.isArray(e)?e.every(e=>r0(e)):r0(e))return new r1(e,t)}return null};n6.registerSaveRouter(r2),n6.registerLoadRouter(r2);let r4=!1;function r6(e,t=3){let a,n;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let r=!1,i=!1,l=!1,o=!1,p=!1,d=!1;if(e.data instanceof Uint8Array)r=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)i=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)l=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)p=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)d=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=aq(aV,n_.backendName))return n_.runKernel(aV,{pixels:e},{numChannels:t});let[u,h]=l?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(p)a=e.getContext("2d").getImageData(0,0,u,h).data;else if(i||r)a=e.data;else if(o||l||d){if(null==s)if("undefined"==typeof document)if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)s=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else s=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});s.canvas.width=u,s.canvas.height=h,s.drawImage(e,0,0,u,h),a=s.getImageData(0,0,u,h).data}if(4===t)n=new Int32Array(a);else{let e=u*h;n=new Int32Array(e*t);for(let r=0;r<e;r++)for(let e=0;e<t;++e)n[r*t+e]=a[4*r+e]}var m=n,c=[h,u,t],f="int32";if(z(m),null!=c&&3!==c.length)throw Error("tensor3d() requires shape to have three numbers");let g=nO(m,f);if(3!==g.length&&1!==g.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===g.length&&null==c)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return nP(m,c,g,f)}async function r3(e,t=3){var a;let n=null;if(ef.getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(a=e)&&0!==a.width&&0!==a.height&&!(null!=e&&e.data instanceof Uint8Array)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return r6(n,t)}function r9(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function r5(e,t){let a=nM(e,"img","toPixels");if(!(e instanceof nf)){let e=a;a=rb(e,"int32"),e.dispose()}r9(a);let[n,r]=a.shape.slice(0,2),i=2===a.rank?1:a.shape[2],s=await a.data(),l="float32"===a.dtype?255:1,o=new Uint8ClampedArray(r*n*4);for(let e=0;e<n*r;++e){let t=[0,0,0,255];for(let n=0;n<i;n++){let r=s[e*i+n];if("float32"===a.dtype){if(r<0||r>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===i?(t[0]=r*l,t[1]=r*l,t[2]=r*l):t[n]=r*l}let n=4*e;o[n+0]=Math.round(t[0]),o[n+1]=Math.round(t[1]),o[n+2]=Math.round(t[2]),o[n+3]=Math.round(t[3])}if(null!=t){r4||null!=aq(e8,n_.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),r4=!0),t.width=r,t.height=n;let e=t.getContext("2d"),a=new ImageData(o,r,n);e.putImageData(a,0,0)}return a!==e&&a.dispose(),o}function r8(e,t,a){let n=nM(e,"img","draw");if(!(e instanceof nf)){let e=n;n=rb(e,"int32"),e.dispose()}r9(n);var r=null==a?void 0:a.imageOptions;let i=(null==r?void 0:r.alpha)||1;if(i>1||i<0)throw Error(`Alpha value ${i} is suppoed to be in range [0 - 1].`);let s={image:n};n_.runKernel(e8,s,{canvas:t,options:a})}let r7=nB({fromPixels_:r6});function ie(e,t,a){let n=e.shape.length;V(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),V(n===a.length,()=>`Error in slice${n}D: Length of size ${a} must match the rank of the array (${n}).`);for(let r=0;r<n;++r)V(t[r]+a[r]<=e.shape[r],()=>`Error in slice${n}D: begin[${r}] + size[${r}] (${t[r]+a[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function it(e){let t=[],a=0;for(;e>0;)1&e&&t.push(a),e/=2,a++;return t}function ia(e,t,a){let n=[];for(let r=0;r<e.length;r++)n[r]=Math.ceil((t[r]-e[r])/a[r]);return n}function ir(e,t,a,n){let r=[...e];for(let e=r.length;e<n.length;e++)r.push(1);for(let e=0;e<a;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function ii(e,t,a){return a<=e?a:a-(t-1)}function is(e,t){let a=[];for(let n=0;n<e;n++)a.push(t+n);return a}function il(e,t,a,n,r,i,s,l,o){let p=e.length,d=Array(p),u=Array(p),h=Array(p);if(t.length&&a>0){let o=t[0],p=a+1;d=io(s,o,p,n,e),u=ip(l,o,p,r,e),h=ir(i,o,p,e)}else for(let t=0;t<p;t++)d[t]=iu(s,n,i,e,t,o),u[t]=ih(l,r,i,e,t,o),h[t]=id(i,t,o);return{begin:d,end:u,strides:h}}function io(e,t,a,n,r){let i=[...r],s=is(a,t);for(let r=0;r<i.length;r++)if(s.indexOf(r)>-1)i[r]=0;else{var l,o,p;let s=(l=t,o=a,(p=r)<=l?p:p-(o-1)),d=n[s];e&1<<s&&(d=0),i[r]=d}return i}function ip(e,t,a,n,r){let i=[...r],s=is(a,t);for(let r=0;r<i.length;r++)if(s.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{var l,o,p;let s=(l=t,o=a,(p=r)<=l?p:p-(o-1)),d=n[s];e&1<<s&&(d=Number.MAX_SAFE_INTEGER),i[r]=d}for(let e=0;e<i.length;e++){let t=r[e];i[e]<0&&(i[e]+=t),i[e]=O(0,i[e],r[e])}return i}function id(e,t,a){let n=e[t];return(a&1<<t||null==n)&&(n=1),n}function iu(e,t,a,n,r,i){let s=t[r],l=a[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let o=n[r];return s<0&&(s+=o),s=O(0,s,o-1)}function ih(e,t,a,n,r,i){let s=t[r],l=a[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let o=n[r];return s<0&&(s+=o),s=l>0?O(0,s,o):O(-1,s,o-1)}function im(e,t,a){let n=a.length;for(let e=0;e<a.length;e++)if(a[e]>1){n=e;break}for(let r=n+1;r<a.length;r++)if(t[r]>0||a[r]!==e[r])return!1;return!0}function ic(e,t){let a=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)a+=e[n]*t[n];return a}function ig(e,t,a){let n,r,i=e.shape.length;return(n="number"==typeof t?[t,...Array(i-1).fill(0)]:t.length<i?t.concat(Array(i-t.length).fill(0)):t.slice()).forEach(e=>{V(-1!==e,()=>"slice() does not support negative begin indexing.")}),r=(r=null==a?Array(i).fill(-1):"number"==typeof a?[a,...Array(i-1).fill(-1)]:a.length<i?a.concat(Array(i-a.length).fill(-1)):a).map((t,a)=>t>=0?t:(V(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${a}.`),e.shape[a]-n[a])),[n,r]}function iv(e,t,a,n,r,i,s,l,o){let p;if(null==n?(p=Array(t.length)).fill(1):p=n,null!=s&&(s&s-1)!=0)throw Error("Multiple ellipses in slice is not allowed.");let d=!1,u={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:a.slice(),strides:p.slice(),beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:l,shrinkAxisMask:o};for(let e=0;e<u.dims;e++)d&&(1<<e&l)!=0&&u.numAddAxisAfterEllipsis++,1<<e&s&&(d=!0);!d&&(u.ellipsisMask|=1<<u.dims,u.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};var m=u,c=h;c.beginMask=0,c.endMask=0,c.shrinkAxisMask=0;let f=0;c.beginValid=null!=m.begin,c.endValid=null!=m.end,c.begin=Array(c.dims),c.end=Array(c.dims),c.strides=Array(c.dims),c.finalShapeGatherIndices=[],c.finalShapeGatherIndicesSparse=[],c.inputShapeGatherIndicesSparse=Array(c.dims);for(let e=0;e<m.dims;e++)if(1<<e&m.ellipsisMask){let t=Math.min(c.dims-(m.dims-e)+1+m.numAddAxisAfterEllipsis,c.dims);for(;f<t;f++)c.begin[f]=0,c.end[f]=0,c.strides[f]=1,c.beginMask|=1<<f,c.endMask|=1<<f,c.finalShapeGatherIndices.push(f),c.finalShapeGatherIndicesSparse.push(-1),c.inputShapeGatherIndicesSparse[f]=e}else if(1<<e&m.newAxisMask)c.finalShapeGatherIndices.push(-2),c.finalShapeGatherIndicesSparse.push(-1);else{if(f===c.begin.length)throw Error(`Index out of range using input dim ${f}; input has only ${c.dims} dims, ${c.begin.length}.`);null!=m.begin&&(c.begin[f]=m.begin[e]),null!=m.end&&(c.end[f]=m.end[e]),c.strides[f]=m.strides[e],m.beginMask&1<<e&&(c.beginMask|=1<<f),m.endMask&1<<e&&(c.endMask|=1<<f),m.shrinkAxisMask&1<<e?(c.finalShapeGatherIndices.push(-1),c.finalShapeGatherIndicesSparse.push(-1),c.shrinkAxisMask|=1<<f):(c.finalShapeGatherIndices.push(f),c.finalShapeGatherIndicesSparse.push(e)),c.inputShapeGatherIndicesSparse[f]=e,f++}let g=!0,v=!0,b=!0,y=[],w=[];for(let t=0;t<e.length;++t){let a;if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){y.push(n?1:-1);continue}let i=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");b=b&&1===h.strides[t];let l=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){let e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=ib(h.begin[t],0,h.strides[t],r,i,s),h.end[t]=ib(h.end[t],1,h.strides[t],r,i,s);let e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;g=g&&e,v=v&&(0===t&&1===h.strides[t]||e)}else g=g&&1===h.strides[t]&&l,v=v&&(0===t&&1===h.strides[t]||l);let o=!1;if(h.beginValid&&h.endValid?(a=h.end[t]-h.begin[t],o=!0):n?(a=1,o=!0):l&&r>=0&&(a=h.strides[t]<0?-r:r,o=!0),o){let e;e=0===a||a<0!=h.strides[t]<0?0:Math.trunc(a/h.strides[t])+ +(a%h.strides[t]!=0),y.push(e)}else y.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){let t=h.finalShapeGatherIndices[e];t>=0?w.push(y[t]):-2===t&&w.push(1)}return{finalShapeSparse:w.filter((e,t)=>-2!==h.finalShapeGatherIndices[t]),finalShape:w,isIdentity:g,sliceDim0:v,isSimpleSlice:b,begin:h.begin,end:h.end,strides:h.strides}}function ib(e,t,a,n,r,i){if(r[t])return a>0?i[t]:i[t+1&1];{let t=e<0?n+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}let iy=nB({all_:function(e,t=null,a=!1){let n=nM(e,"x","all","bool");return n_.runKernel("All",{x:n},{axis:t,keepDims:a})}}),iw=nB({any_:function(e,t=null,a=!1){let n=nM(e,"x","any","bool");return n_.runKernel("Any",{x:n},{axis:t,keepDims:a})}}),ix=nB({argMax_:function(e,t=0){let a=nM(e,"x","argMax");return n_.runKernel(ex,{x:a},{axis:t})}});function ik(e,t,a,n,r="NHWC",i){let s=[...t,e[3]];return iS(e,s,a,i,n,null,null,iO(r))}function iN(e,t,a,n,r,i,s="channelsLast"){let l,[o,p]=i$(t);if("channelsLast"===s)l=[o,p,e[3],e[3]];else if("channelsFirst"===s)l=[o,p,e[1],e[1]];else throw Error(`Unknown dataFormat ${s}`);return iS(e,l,a,n,r,i,!1,s)}function iI(e,t,a,n,r,i,s="NDHWC"){let l,o,[p,d,u]=iE(t);if("NDHWC"===s)o="channelsLast",l=[p,d,u,e[4],e[4]];else if("NCDHW"===s)o="channelsFirst",l=[p,d,u,e[1],e[1]];else throw Error(`Unknown dataFormat ${s}`);return iT(e,l,a,n,r,!1,o,i)}function iS(e,t,a,n,r,i,s=!1,l="channelsLast"){let o,[p,d,u,h]=[-1,-1,-1,-1];if("channelsLast"===l)[p,d,u,h]=e;else if("channelsFirst"===l)[p,h,d,u]=e;else throw Error(`Unknown dataFormat ${l}`);let[m,c,,f]=t,[g,v]=i$(a),[b,y]=i$(n),w=i_(m,b),x=i_(c,y),{padInfo:k,outHeight:N,outWidth:I}=function(e,t,a,n,r,i,s,l,o){let p,d,u;if("number"==typeof e){let r=0===e?"VALID":"NUMBER";p={top:e,bottom:e,left:e,right:e,type:r};let s=function(e,t,a,n,r){null==n&&(n=iC(e,t,a));let i=e[0],s=e[1];return[iR((i-t+2*n)/a+1,r),iR((s-t+2*n)/a+1,r)]}([t,a],i,n,e,l);d=s[0],u=s[1]}else if("same"===e){let e=Math.max(0,((d=Math.ceil(t/n))-1)*n+i-t),l=Math.max(0,((u=Math.ceil(a/r))-1)*r+s-a),o=Math.floor(e/2),h=Math.floor(l/2);p={top:o,bottom:e-o,left:h,right:l-h,type:"SAME"}}else if("valid"===e)p={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-i+1)/n),u=Math.ceil((a-s+1)/r);else if("object"==typeof e){let h="channelsLast"===o?e[1][0]:e[2][0],m="channelsLast"===o?e[1][1]:e[2][1],c="channelsLast"===o?e[2][0]:e[3][0],f="channelsLast"===o?e[2][1]:e[3][1];p={top:h,bottom:m,left:c,right:f,type:0===h&&0===m&&0===c&&0===f?"VALID":"EXPLICIT"},d=iR((t-i+h+m)/n+1,l),u=iR((a-s+c+f)/r+1,l)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outHeight:d,outWidth:u}}(r,d,u,g,v,w,x,i,l),S=s?f*h:f;return"channelsFirst"===l?o=[p,S,N,I]:"channelsLast"===l&&(o=[p,N,I,S]),{batchSize:p,dataFormat:l,inHeight:d,inWidth:u,inChannels:h,outHeight:N,outWidth:I,outChannels:S,padInfo:k,strideHeight:g,strideWidth:v,filterHeight:m,filterWidth:c,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:o,filterShape:t}}function iT(e,t,a,n,r,i=!1,s="channelsLast",l){let o,[p,d,u,h,m]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[p,d,u,h,m]=e;else if("channelsFirst"===s)[p,m,d,u,h]=e;else throw Error(`Unknown dataFormat ${s}`);let[c,f,g,,v]=t,[b,y,w]=iE(a),[x,k,N]=iE(n),I=i_(c,x),S=i_(f,k),T=i_(g,N),{padInfo:C,outDepth:$,outHeight:E,outWidth:_}=function(e,t,a,n,r,i,s,l,o,p,d){let u,h,m,c;if("valid"===e&&(e=0),"number"==typeof e){let f=0===e?"VALID":"NUMBER";u={top:e,bottom:e,left:e,right:e,front:e,back:e,type:f};let g=function(e,t,a,n,r,i){null==r&&(r=iC(e,t[0],n[0]));let s=[0,0,0,1];for(let a=0;a<3;a++)e[a]+2*r>=t[a]&&(s[a]=iR((e[a]-t[a]+2*r)/n[a]+1,i));return s}([t,a,n,1],[l,o,p],0,[r,i,s],e,d);h=g[0],m=g[1],c=g[2]}else if("same"===e){let e=((h=Math.ceil(t/r))-1)*r+l-t,d=((m=Math.ceil(a/i))-1)*i+o-a,f=((c=Math.ceil(n/s))-1)*s+p-n,g=Math.floor(e/2),v=Math.floor(d/2),b=Math.floor(f/2);u={top:v,bottom:d-v,left:b,right:f-b,front:g,back:e-g,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outDepth:h,outHeight:m,outWidth:c}}(r,d,u,h,b,y,w,I,S,T,l),R=i?v*m:v;return"channelsFirst"===s?o=[p,R,$,E,_]:"channelsLast"===s&&(o=[p,$,E,_,R]),{batchSize:p,dataFormat:s,inDepth:d,inHeight:u,inWidth:h,inChannels:m,outDepth:$,outHeight:E,outWidth:_,outChannels:R,padInfo:C,strideDepth:b,strideHeight:y,strideWidth:w,filterDepth:c,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationDepth:x,dilationHeight:k,dilationWidth:N,inShape:e,outShape:o,filterShape:t}}function iC(e,t,a,n=1){let r=i_(t,n);return Math.floor((e[0]*(a-1)-a+r)/2)}function i$(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function iE(e){return"number"==typeof e?[e,e,e]:e}function i_(e,t){return t<=1?e:e+(e-1)*(t-1)}function iR(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function iA(e){let[t,a,n]=i$(e);return 1===t&&1===a&&1===n}function iD(e,t){return iA(e)||iA(t)}function iF(e){return i$(e).every(e=>e>0)}function iO(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function iL(e,t,a){if(null!=a)if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);else if("number"==typeof t)V(t%1==0,()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{V(t%1==0,()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}let iM=nB({reshape_:function(e,t){let a=nM(e,"x","reshape","string_or_numeric");return n_.runKernel(t4,{x:a},{shape:t})}}),iV=nB({avgPool_:function(e,t,a,n,r){let i=nM(e,"x","avgPool","float32");V(iD(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);let s=i,l=!1;3===i.rank&&(l=!0,s=iM(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===s.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`),iL("avgPool",n,r);let o={x:s},p=n_.runKernel(e$,o,{filterSize:t,strides:a,pad:n,dimRoundingMode:r});return(p=rb(p,i.dtype),l)?iM(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),iB=nB({avgPool3d_:function(e,t,a,n,r,i="NDHWC"){let s=nM(e,"x","avgPool3d","float32"),l=s,o=!1;4===s.rank&&(o=!0,l=iM(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),V(5===l.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),V("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),V("number"==typeof a&&a>0||Array.isArray(a)&&a[0]>0&&a[1]>0&&a[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${a}'`),iL("avgPool3d",n,r);let p={x:l},d=n_.runKernel(e_,p,{filterSize:t,strides:a,pad:n,dimRoundingMode:r,dataFormat:i});return(d=rb(d,l.dtype),o)?iM(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),iz=nB({batchNorm_:function(e,t,a,n,r,i){let s,l,o;null==i&&(i=.001);let p=nM(e,"x","batchNorm"),d=nM(t,"mean","batchNorm"),u=nM(a,"variance","batchNorm");null!=r&&(s=nM(r,"scale","batchNorm")),null!=n&&(l=nM(n,"offset","batchNorm")),V(d.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),V(null==l||d.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),V(null==s||d.rank===s.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:0===p.rank||1===p.rank?iM(p,[1,1,1,p.size]):2===p.rank?iM(p,[1,1,p.shape[0],p.shape[1]]):3===p.rank?iM(p,[1,p.shape[0],p.shape[1],p.shape[2]]):p,scale:s,offset:l,mean:d,variance:u},m={varianceEpsilon:i};return iM(n_.runKernel(tp,h,m),p.shape)}}),iP=nB({batchNorm2d_:function(e,t,a,n,r,i){let s,l,o=nM(e,"x","batchNorm"),p=nM(t,"mean","batchNorm"),d=nM(a,"variance","batchNorm");return null!=r&&(s=nM(r,"scale","batchNorm")),null!=n&&(l=nM(n,"offset","batchNorm")),V(2===o.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),V(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${p.rank}.`),V(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`),null!=s&&V(2===s.rank||1===s.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${s.rank}.`),null!=l&&V(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),iz(o,p,d,l,s,i)}}),iU=nB({batchNorm3d_:function(e,t,a,n,r,i){let s,l,o=nM(e,"x","batchNorm"),p=nM(t,"mean","batchNorm"),d=nM(a,"variance","batchNorm");return null!=r&&(s=nM(r,"scale","batchNorm")),null!=n&&(l=nM(n,"offset","batchNorm")),V(3===o.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),V(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${p.rank}.`),V(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`),null!=s&&V(3===s.rank||1===s.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${s.rank}.`),null!=l&&V(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),iz(o,p,d,l,s,i)}}),iW=nB({batchNorm4d_:function(e,t,a,n,r,i){let s,l,o=nM(e,"x","batchNorm"),p=nM(t,"mean","batchNorm"),d=nM(a,"variance","batchNorm");return null!=r&&(s=nM(r,"scale","batchNorm")),null!=n&&(l=nM(n,"offset","batchNorm")),V(4===o.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),V(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${p.rank}.`),V(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`),null!=s&&V(4===s.rank||1===s.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${s.rank}.`),null!=l&&V(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),iz(o,p,d,l,s,i)}}),iG=nB({broadcastTo_:function(e,t){let a=nM(e,"broadcastTo","x"),n=a.shape;if(eo(t),t.length<a.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${a.rank}.`);if(t.length>a.rank){let e=a.shape.slice();for(;e.length<t.length;)e.unshift(1);a=iM(a,e)}let r=a.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])i[e]=1;else if(1!==a.shape[e])throw Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(0===i.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return ry(a);let s={x:a};return n_.runKernel(aE,s,{reps:i})}}),iH=nB({clipByValue_:function(e,t,a){let n=nM(e,"x","clipByValue");return(V(t<=a,()=>`Error in clip: min (${t}) must be less than or equal to max (${a}).`),t===a)?rL(n.shape,t,n.dtype):n_.runKernel(eB,{x:n},{clipValueMin:t,clipValueMax:a})}}),ij=nB({concat_:function(e,t=0){V(e.length>=1,()=>"Pass at least one tensor to concat");let a=nV(e,"tensors","concat","string_or_numeric");return("complex64"===a[0].dtype&&a.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===a.length)?ry(a[0]):n_.runKernel(eU,a,{axis:t})}}),iq=nB({concat1d_:function(e){return ij(e,0)}}),iK=nB({concat2d_:function(e,t){return ij(e,t)}}),iX=nB({concat3d_:function(e,t){return ij(e,t)}}),iY=nB({concat4d_:function(e,t){return ij(e,t)}}),iJ=nB({conv2d_:function(e,t,a,n,r="NHWC",i=[1,1],s){let l=nM(e,"x","conv2d","float32"),o=nM(t,"filter","conv2d","float32"),p=l,d=!1;3===l.rank&&(d=!0,p=iM(l,[1,l.shape[0],l.shape[1],l.shape[2]])),V(4===p.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),V(4===o.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${o.rank}.`),iL("conv2d",n,s);let u="NHWC"===r?p.shape[3]:p.shape[1];V(u===o.shape[2],()=>`Error in conv2d: depth of input (${u}) must match input depth for filter ${o.shape[2]}.`),V(iD(a,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`),V(iF(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),V(iF(a),()=>"Error in conv2D: Strides should be larger than 0.");let h={x:p,filter:o},m=n_.runKernel(eW,h,{strides:a,pad:n,dataFormat:r,dilations:i,dimRoundingMode:s});return d?iM(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),iZ=nB({conv1d_:function(e,t,a,n,r="NWC",i=1,s){let l=nM(e,"x","conv1d"),o=nM(t,"filter","conv1d"),p=l,d=!1;2===l.rank&&(d=!0,p=iM(l,[1,l.shape[0],l.shape[1]])),V(3===p.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),V(3===o.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${o.rank}.`),iL("conv1d",n,s),V(p.shape[2]===o.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${o.shape[1]}.`),V(iD(a,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${a} and dilation '${i}'`),V(iF(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),V(iF(a),()=>"Error in conv1D: Stride should be larger than 0."),V("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let u=iM(o,[1,o.shape[0],o.shape[1],o.shape[2]]),h=iJ(iM(p,[p.shape[0],1,p.shape[1],p.shape[2]]),u,[1,a],n,"NHWC",[1,i],s);return d?iM(h,[h.shape[2],h.shape[3]]):iM(h,[h.shape[0],h.shape[2],h.shape[3]])}}),iQ=nB({conv2DBackpropInput_:function(e,t,a,n,r,i="NHWC",s){V(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let l=e,o=t,p=!1;3===t.rank&&(p=!0,o=iM(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,e[0],e[1],e[2]]),V(4===l.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),V(4===o.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${o.rank}`),V(4===a.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${a.rank}`);let d="NHWC"===i?l[3]:l[1],u="NHWC"===i?o.shape[3]:o.shape[1];V(d===a.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${a.shape[2]}.`),V(u===a.shape[3],()=>`Error in conv2dDerInput: depth of output (${u}) must match output depth for filter ${a.shape[3]}.`),iL("conv2dDerInput",r,s);let h={dy:o,filter:a},m={strides:n,pad:r,dataFormat:i,dimRoundingMode:s,inputShape:l},c=n_.runKernel(eH,h,m);return p?iM(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),i1=nB({conv2dTranspose_:function(e,t,a,n,r,i){return iQ(a,nM(e,"x","conv2dTranspose"),nM(t,"filter","conv2dTranspose"),n,r,"NHWC",i)}}),i0=nB({conv3d_:function(e,t,a,n,r="NDHWC",i=[1,1,1]){let s=nM(e,"x","conv3d"),l=nM(t,"filter","conv3d"),o=s,p=!1;4===s.rank&&(p=!0,o=iM(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),V(5===o.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${o.rank}.`),V(5===l.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),V(o.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${o.shape[4]}) must match input depth for filter ${l.shape[3]}.`),V(iD(a,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`),V("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),V(iF(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),V(iF(a),()=>"Error in conv3D: Strides should be larger than 0.");let d={x:o,filter:l},u=n_.runKernel(ej,d,{strides:a,pad:n,dataFormat:r,dilations:i});return p?iM(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),i2=nB({conv3DBackpropInput_:function(e,t,a,n,r){V(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,s=t,l=!1;4===t.rank&&(l=!0,s=iM(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);let o=i[4],p=s.shape[4];V(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),V(5===s.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),V(5===a.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${a.rank}`),V(o===a.shape[3],()=>`Error in conv3dDerInput: depth of input (${o}) must match input depth for filter ${a.shape[3]}.`),V(p===a.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${a.shape[4]}.`);let d={dy:s,filter:a},u={pad:r,strides:n,inputShape:i},h=n_.runKernel(eK,d,u);return l?iM(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),i4=nB({conv3dTranspose_:function(e,t,a,n,r){return i2(a,nM(e,"x","conv3dTranspose"),nM(t,"filter","conv3dTranspose"),n,r)}}),i6=nB({denseBincount_:function(e,t,a,n=!1){let r=nM(e,"x","denseBincount"),i=nM(t,"weights","denseBincount");return V("int32"===r.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),V(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),V(a>=0,()=>`size must be non-negative, but got ${a}.`),V(i.size===r.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`),n_.runKernel(eQ,{x:r,weights:i},{size:a,binaryOutput:n})}}),i3=nB({depthwiseConv2d_:function(e,t,a,n,r="NHWC",i=[1,1],s){let l=nM(e,"x","depthwiseConv2d","float32"),o=nM(t,"filter","depthwiseConv2d","float32"),p=l,d=!1;3===l.rank&&(d=!0,p=iM(l,[1,l.shape[0],l.shape[1],l.shape[2]])),V(4===p.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),V(4===o.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${o.rank}.`);let u="NHWC"===r?p.shape[3]:p.shape[1];V(u===o.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u}) must match the inChannels dimension in filter ${o.shape[2]}.`),iL("depthwiseConv2d",n,s);let h={x:p,filter:o},m=n_.runKernel(e0,h,{strides:a,pad:n,dataFormat:r,dilations:i,dimRoundingMode:s});return d?iM(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),i9=nB({elu_:function(e){let t=nM(e,"x","elu","float32");return n_.runKernel("Elu",{x:t})}}),i5=nB({equal_:function(e,t){let a=nM(e,"a","equal","string_or_numeric"),n=nM(t,"b","equal","string_or_numeric");[a,n]=nN(a,n),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(ta,r)}}),i8=nB({erf_:function(e){let t=nM(e,"x","erf");V("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=rb(t,"float32"));let a={x:t};return n_.runKernel("Erf",a)}}),i7=nB({exp_:function(e){let t=nM(e,"x","exp");return n_.runKernel("Exp",{x:t})}}),se=nB({expandDims_:function(e,t=0){let a=nM(e,"x","expandDims","string_or_numeric");return V(t<=a.rank,()=>"Axis must be <= rank of the tensor"),n_.runKernel(tn,{input:a},{dim:t})}}),st=nB({tile_:function(e,t){let a=nM(e,"x","tile","string_or_numeric");return V(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of reps ${t}.`),n_.runKernel(aE,{x:a},{reps:t})}}),sa=nB({eye_:function(e,t,a,n="float32"){null==t&&(t=e);let r=rv([e,t],n),i=e<=t?e:t;for(let e=0;e<i;++e)r.set(1,e,e);let s=iM(r.toTensor(),[e,t]);if(null==a)return s;if(1===a.length)return st(se(s,0),[a[0],1,1]);if(2===a.length)return st(se(se(s,0),0),[a[0],a[1],1,1]);if(3===a.length)return st(se(se(se(s,0),0),0),[a[0],a[1],a[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${a.length}D.`)}}),sn=nB({floor_:function(e){let t=nM(e,"x","floor","float32");return n_.runKernel(tl,{x:t})}}),sr=nB({gather_:function(e,t,a=0,n=0){let r=nM(e,"x","gather"),i=nM(t,"indices","gather","int32");return n_.runKernel(td,{x:r,indices:i},{axis:a,batchDims:n})}}),si=nB({greater_:function(e,t){let a=nM(e,"a","greater","string_or_numeric"),n=nM(t,"b","greater","string_or_numeric");[a,n]=nN(a,n),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(th,r)}}),ss=nB({greaterEqual_:function(e,t){let a=nM(e,"a","greaterEqual","string_or_numeric"),n=nM(t,"b","greaterEqual","string_or_numeric");[a,n]=nN(a,n),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(tm,r)}}),sl=nB({leakyRelu_:function(e,t=.2){let a=nM(e,"x","leakyRelu");return n_.runKernel(tw,{x:a},{alpha:t})}}),so=nB({log_:function(e){let t=nM(e,"x","log","float32");return n_.runKernel("Log",{x:t})}}),sp=nB({log1p_:function(e){let t=nM(e,"x","log1p");return n_.runKernel(tI,{x:t})}}),sd=nB({max_:function(e,t=null,a=!1){let n=nM(e,"x","max");return n_.runKernel("Max",{x:n},{reductionIndices:t,keepDims:a})}}),su=nB({sum_:function(e,t=null,a=!1){let n=nM(e,"x","sum");"bool"===n.dtype&&(n=rb(n,"int32"));let r={x:n};return n_.runKernel("Sum",r,{axis:t,keepDims:a})}}),sh=nB({logSoftmax_:function(e,t=-1){let a=nM(e,"logits","logSoftmax");if(-1===t&&(t=a.rank-1),t!==a.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and axis was ${t}`);return rC((e,a)=>{let n=sd(e,t,!0),r=rB(e,n),i=rB(rb(r,"float32"),so(su(i7(r),t,!0)));return a([i]),{value:i,gradFunc:(e,a)=>{let[n]=a,r=i7(n);return rB(e,rN(su(e,t,!0),r))}}})(a)}});function sm(e,t){for(let a=0;a<e.length;++a)if(e[e.length-a-1]!==t-1-a)return!1;return!0}function sc(e,t,a){let n=e.length+t.length,r=[],i=0,s=0;for(let l=0;l<n;l++)-1===a.indexOf(l)?r.push(e[i++]):r.push(t[s++]);return r}function sf(e,t){let a=[],n=e.length;for(let r=0;r<n;r++)-1===t.indexOf(r)&&a.push(e[r]);return[a,t.map(t=>e[t])]}function sg(e,t){return sc(e,t.map(e=>1),t)}function sv(e,t,a){V(sm(t,a),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${a} input.`)}function sb(e,t){if(sm(e,t))return null;let a=[];for(let n=0;n<t;++n)-1===e.indexOf(n)&&a.push(n);return e.forEach(e=>a.push(e)),a}function sy(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function sw(e,t){let a=[];for(let n=t-e;n<t;++n)a.push(n);return a}let sx=nB({logSumExp_:function(e,t=null,a=!1){let n=nM(e,"x","logSumExp"),r=q(t,n.shape),i=sd(n,r,!0),s=so(su(i7(rB(n,i)),r)),l=rw(iM(i,s.shape),s);if(a){let e=sg(l.shape,r);return iM(l,e)}return l}}),sk=nB({logicalAnd_:function(e,t){let a=nM(e,"a","logicalAnd","bool"),n=nM(t,"b","logicalAnd","bool");return rG(a.shape,n.shape),n_.runKernel(tS,{a:a,b:n})}}),sN=nB({matMul_:function(e,t,a=!1,n=!1){let r=nM(e,"a","matMul"),i=nM(t,"b","matMul");[r,i]=nN(r,i);let s={a:r,b:i};return n_.runKernel(eA,s,{transposeA:a,transposeB:n})}}),sI=nB({maxPool_:function(e,t,a,n,r){let i=nM(e,"x","maxPool"),s=i,l=!1;3===i.rank&&(l=!0,s=iM(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===s.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`),V(iD(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`),iL("maxPool",n,r);let o={x:s},p=n_.runKernel(t_,o,{filterSize:t,strides:a,pad:n,dimRoundingMode:r});return l?iM(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),sS=nB({maxPool3d_:function(e,t=[1,1,1],a,n,r,i="NDHWC"){let s=nM(e,"x","maxPool3d"),l=s,o=!1;4===s.rank&&(o=!0,l=iM(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),V(5===l.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),V("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),iL("maxPool3d",n,r);let p={x:l},d=n_.runKernel(tA,p,{filterSize:t,strides:a,pad:n,dimRoundingMode:r,dataFormat:i});return o?iM(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),sT=nB({mean_:function(e,t=null,a=!1){let n=nM(e,"x","mean");return n_.runKernel(tO,{x:n},{axis:t,keepDims:a})}}),sC=nB({min_:function(e,t=null,a=!1){let n=nM(e,"x","min");return n_.runKernel("Min",{x:n},{axis:t,keepDims:a})}}),s$=nB({minimum_:function(e,t){let a=nM(e,"a","minimum"),n=nM(t,"b","minimum");[a,n]=nN(a,n),"bool"===a.dtype&&(a=rb(a,"int32"),n=rb(n,"int32")),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(tL,r)}}),sE=nB({moments_:function(e,t=null,a=!1){let n=q(t,(e=nM(e,"x","moments")).shape),r=sT(e,n,a),i=r.shape;a||(i=sg(r.shape,n));let s=sT(rS(rB(rb(e,"float32"),iM(r,i))),n,a);return{mean:r,variance:s}}}),s_=nB({neg_:function(e){let t=nM(e,"x","neg");return n_.runKernel("Neg",{x:t})}}),sR=nB({notEqual_:function(e,t){let a=nM(e,"a","notEqual","string_or_numeric"),n=nM(t,"b","notEqual","string_or_numeric");[a,n]=nN(a,n),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(tz,r)}}),sA=nB({oneHot_:function(e,t,a=1,n=0,r="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i=nM(e,"indices","oneHot","int32");return n_.runKernel(tH,{indices:i},{dtype:r,depth:t,onValue:a,offValue:n})}});function sD(e,t="float32"){if(eo(e),"complex64"===t)return nz(sD(e,"float32"),sD(e,"float32"));let a=es(P(e),t);return n_.makeTensor(a,e,t)}function sF(e,t="float32"){if(eo(e),"complex64"===t)return nz(sF(e,"float32"),sD(e,"float32"));let a=ei(P(e),t);return n_.makeTensor(a,e,t)}let sO=nB({onesLike_:function(e){let t=nM(e,"x","onesLike");return n_.runKernel(tG,{x:t})}}),sL=nB({pad_:function(e,t,a=0){let n=nM(e,"x","pad");if(0===n.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return n_.runKernel(tq,{x:n},{paddings:t,constantValue:a})}}),sM=nB({prelu_:function(e,t){let a=nM(e,"x","prelu"),n=nM(t,"alpha","prelu");return n_.runKernel(tK,{x:a,alpha:n})}});var sV=a(4940);class sB{constructor(e,t,a,n,r){this.mean=e,this.stdDev=t,this.dtype=a,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let i=r||Math.random();this.random=sV.alea(i.toString())}nextValue(){let e,t;if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let a=!1;for(;!a;){let n,r,i;do i=(n=2*this.random()-1)*n+(r=2*this.random()-1)*r;while(i>=1||0===i);let s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*n*s,t=this.mean+this.stdDev*r*s,(!this.truncated||this.isValidTruncated(e))&&(a=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class sz{constructor(e=0,t=1,a,n){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=a,null==n&&(n=Math.random()),"number"==typeof n&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=sV.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}let sP=nB({randomNormal_:function(e,t=0,a=1,n,r){if(eo(e),null!=n&&"bool"===n)throw Error(`Unsupported data type ${n}`);let i=new sB(t,a,n,!1,r),s=rv(e,n);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),sU=nB({randomUniform_:function(e,t=0,a=1,n="float32",r){eo(e);let i=rv(e,n),s=new sz(t,a,null,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});function sW(e,t,a=1,n="float32"){if(0===a)throw Error("Cannot have a step of zero");return n_.runKernel(tQ,{},{start:e,stop:t,step:a,dtype:n})}let sG=nB({relu_:function(e){let t=nM(e,"x","relu");return n_.runKernel(t2,{x:t})}}),sH=nB({reverse_:function(e,t){let a=nM(e,"x","reverse");return n_.runKernel(t7,{x:a},{dims:t})}}),sj=nB({selu_:function(e){let t=nM(e,"x","selu");return n_.runKernel(as,{x:t})}}),sq=nB({separableConv2d_:function(e,t,a,n,r,i=[1,1],s="NHWC"){let l=nM(e,"x","separableConv2d"),o=nM(t,"depthwiseFilter","separableConv2d"),p=nM(a,"pointwiseFilter","separableConv2d"),d=l,u=!1;if(3===l.rank&&(u=!0,d=iM(l,[1,l.shape[0],l.shape[1],l.shape[2]])),"NCHW"===s)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");V(4===d.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),V(4===o.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${o.rank}.`),V(4===p.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${o.rank}.`),V(1===p.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),V(1===p.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);let h=o.shape[2],m=o.shape[3];V(p.shape[2]===h*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*m}, but got ${p.shape[2]}.`);let c=iJ(i3(d,o,n,r,s,i),p,1,"valid",s);return u?iM(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),sK=nB({sigmoid_:function(e){let t=nM(e,"x","sigmoid","float32");return n_.runKernel(ad,{x:t})}}),sX=nB({slice_:function(e,t,a){let n=nM(e,"x","slice","string_or_numeric");if(0===n.rank)throw Error("Slicing scalar is not possible");return n_.runKernel(al,{x:n},{begin:t,size:a})}}),sY=nB({slice1d_:function(e,t,a){let n=nM(e,"x","slice1d");return V(1===n.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),sX(n,[t],[a])}}),sJ=nB({slice2d_:function(e,t,a){let n=nM(e,"x","slice2d");return V(2===n.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),sX(n,t,a)}}),sZ=nB({slice3d_:function(e,t,a){let n=nM(e,"x","slice3d");return V(3===n.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),sX(n,t,a)}}),sQ=nB({slice4d_:function(e,t,a){let n=nM(e,"x","slice4d");return V(4===n.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),sX(n,t,a)}}),s1=nB({softmax_:function(e,t=-1){let a=nM(e,"logits","softmax","float32");if(-1===t&&(t=a.rank-1),t!==a.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and dim was ${t}`);let n={dim:t};return n_.runKernel(af,{logits:a},n)}}),s0=nB({softplus_:function(e){let t=nM(e,"x","softplus");return n_.runKernel(au,{x:t})}}),s2=nB({split_:function(e,t,a=0){let n=nM(e,"x","split");return n_.runKernel(ac,{x:n},{numOrSizeSplits:t,axis:a})}}),s4=nB({squeeze_:function(e,t){let a=nM(e,"x","squeeze","string_or_numeric");return iM(a,K(a.shape,t).newShape)}}),s6=nB({stack_:function(e,t=0){let a=nV(e,"tensors","stack","string_or_numeric");return V(a.length>=1,()=>"Pass at least one tensor to tf.stack"),a.length>0&&V(t<=a[0].rank,()=>"Axis must be <= rank of the tensor"),n_.runKernel(tj,a,{axis:t})}}),s3=nB({tanh_:function(e){let t=nM(e,"x","tanh","float32");return n_.runKernel(a$,{x:t})}});function s9(e,t){z(e);let a=nO(e,t);if(1!==a.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return nP(e,null,a,t)}function s5(e,t,a){if(z(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let n=nO(e,a);if(2!==n.length&&1!==n.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return nP(e,t,n,a)}let s8=nB({truncatedNormal_:function(e,t=0,a=1,n,r){if(eo(e),null!=n&&"bool"===n)throw Error("Unsupported data type $ { dtype }");let i=new sB(t,a,n,!0,r),s=rv(e,n);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),s7=nB({unstack_:function(e,t=0){let a=nM(e,"x","unstack","string_or_numeric");return V(t>=-a.shape.length&&t<a.shape.length,()=>`Axis = ${t} is not in [-${a.shape.length}, ${a.shape.length})`),n_.runKernel(aF,{value:a},{axis:t})}}),le=nB({where_:function(e,t,a){let n=nM(t,"a","where"),r=nM(a,"b","where"),i=nM(e,"condition","where","bool"),s=rG(rG(i.shape,n.shape),r.shape),l=iG(i,s),o=iG(n,s),p=iG(r,s);return n_.runKernel(ai,{condition:l,t:o,e:p})}}),lt=nB({imag_:function(e){let t=nM(e,"input","imag");return n_.runKernel(tg,{input:t})}}),la=nB({real_:function(e){let t=nM(e,"input","real");return n_.runKernel(t1,{input:t})}}),ln=nB({transpose_:function(e,t,a){let n=nM(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),V(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{V(e>=0&&e<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let r={perm:t};return"complex64"===n.dtype?nj(()=>{let e=la(n),t=lt(n);return e=n_.runKernel(aA,{x:e},r),t=n_.runKernel(aA,{x:t},r),a&&(t=s_(t)),nz(e,t)}):n_.runKernel(aA,{x:n},r)}}),lr=nB({dropout_:function(e,t,a,n){let r=nM(e,"x","dropout");if(V("float32"===r.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),V(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof nf?r.clone():r;let i=function(e,t){if(null==t)return e.shape.slice();if(U(e.shape,t))return t;if(e.shape.length===t.length){let a=[];for(let n=0;n<e.shape.length;n++)null==t[n]&&null!=e.shape[n]?a.push(e.shape[n]):a.push(t[n]);return a}return t}(r,a),s=1-t;return rN(r,rk(sn(rw(sU(i,0,1,"float32",n),s)),s))}}),li=nB({fft_:function(e){return V("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),n_.runKernel("FFT",{input:e})}}),ls=nB({rfft_:function(e,t){let a;V("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n;if(null!=t&&t<n){let r=e.shape.map(e=>0),i=e.shape.map(e=>e);i[e.shape.length-1]=t,a=sX(e,r,i),n=t}else if(null!=t&&t>n){let r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=ij([e,sD(r)],e.shape.length-1),n=t}else a=e;let i=rT(a),s=li(iM(nz(a,i),[r,n])),l=Math.floor(n/2)+1,o=la(s),p=lt(s),d=s2(o,[l,n-l],o.shape.length-1),u=s2(p,[l,n-l],p.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=l,iM(nz(d[0],u[0]),h)}}),ll=nB({ifft_:function(e){return V("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),n_.runKernel(tf,{input:e})}}),lo=nB({irfft_:function(e){let t,a=e.shape[e.shape.length-1],n=e.size/a;if(a<=2)t=ll(iM(e,[n,a]));else{let r=[n,2*(a-1)],i=iM(la(e),[n,a]),s=iM(lt(e),[n,a]),l=sH(sX(i,[0,1],[n,a-2]),1),o=rN(sH(sX(s,[0,1],[n,a-2]),1),r$(-1));t=ll(iM(nz(ij([i,l],1),ij([s,o],1)),[r[0],r[1]]))}if(t=la(t),3===e.rank&&0!==e.shape[0]){let a=t,n=e.shape[0];t=iM(t,[n,t.shape[0]/n,t.shape[1]]),a.dispose()}return t}}),lp=nB({conv2DBackpropFilter_:function(e,t,a,n,r,i="NHWC",s){let l=e;3===e.rank&&(l=iM(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let o=t;3===o.rank&&(o=iM(t,[1,t.shape[0],t.shape[1],t.shape[2]])),V(4===l.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),V(4===o.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${o.shape}.`),V(4===a.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${a}.`);let p="NHWC"===i?l.shape[3]:l.shape[1],d="NHWC"===i?o.shape[3]:o.shape[1];V(p===a[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${a[2]}.`),V(d===a[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${a[3]}).`),iL("conv2dDerFilter",r,s);let u={x:l,dy:o};return n_.runKernel(eG,u,{strides:n,pad:r,dataFormat:i,dimRoundingMode:s,filterShape:a})}}),ld=nB({relu6_:function(e){let t=nM(e,"x","relu6");return n_.runKernel(t8,{x:t})}}),lu=nB({step_:function(e,t=0){let a=nM(e,"x","step");return n_.runKernel(aM,{x:a},{alpha:t})}});function lh(e,t,a){if(null==a||"linear"===a)return e;if("relu"===a)return rN(e,lu(t));throw Error(`Cannot compute gradient for fused activation ${a}.`)}function lm(e,t){let a=t,n=rW(e.shape,t.shape);return n.length>0&&(a=su(a,n)),iM(a,e.shape)}function lc(e,t,a,n){if("linear"===t)return e;if("relu"===t)return sG(e);if("elu"===t)return i9(e);if("relu6"===t)return ld(e);if("prelu"===t)return sM(e,a);else if("leakyrelu"===t)return sl(e,n);else if("sigmoid"===t)return sK(e);throw Error(`Unknown fused activation ${t}.`)}let lf=(e,t)=>!(e>0)||"linear"===t,lg=nB({fusedConv2d_:function({x:e,filter:t,strides:a,pad:n,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:l,activation:o="linear",preluActivationWeights:p,leakyreluAlpha:d}){let u,h;if(o=o||"linear",!1===lf(n_.state.gradientDepth,o)){V("NHWC"===r,()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let u=iJ(e,t,a,n,r,i,s);return null!=l&&(u=rw(u,l)),lc(u,o,p,d)}let m=nM(e,"x","conv2d","float32"),c=nM(t,"filter","conv2d","float32"),f=m,g=!1;3===m.rank&&(g=!0,f=iM(m,[1,m.shape[0],m.shape[1],m.shape[2]])),V(4===f.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),V(4===c.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),iL("fused conv2d",n,s);let v="NHWC"===r?f.shape[3]:f.shape[1];V(c.shape[2]===v,()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${c.shape[2]}.`),V(iD(a,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`);let b=iS(f.shape,c.shape,a,i,n,s);if(null!=l&&(u=nM(l,"bias","fused conv2d"),[u]=nN(u,m),"NHWC"===r?rG(b.outShape,u.shape):(V(u.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${u.shape.length}.`),V(0===u.shape.length||u.shape[0]===b.outChannels||1===u.shape[0],()=>`Error in fused conv2d: bias shape (${u.shape}) is not compatible with the number of output channels (${b.outChannels})`))),null!=p){let e=p.shape;if(V(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)V(1===e[0]||e[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`);else if(3===e.length)try{rG(e,b.outShape)}catch(t){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`)}h=nM(p,"prelu weights","fused conv2d")}let y=(e,t)=>{V("NHWC"===r,()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[s,l,p,d]=t,u=lh(e,p,o);V(iA(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let h=[iQ(l.shape,u,s,a,n),lp(l,u,s.shape,a,n)];if(null!=d){let e=lm(d,u);h.push(e)}return h},w={x:f,filter:c,bias:u,preluActivationWeights:h},x={strides:a,pad:n,dataFormat:r,dilations:i,dimRoundingMode:s,activation:o,leakyreluAlpha:d};return null==l?rC((e,t,a)=>{let n=n_.runKernel(aP,w,x);return a([t,e,n]),g&&(n=iM(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:y}})(f,c):rC((e,t,a,n)=>{let r=n_.runKernel(aP,w,x);return n([t,e,r,a]),g&&(r=iM(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(f,c,u)}}),lv=nB({depthwiseConv2dNativeBackpropFilter_:function(e,t,a,n,r,i=[1,1],s){let l=e;3===e.rank&&(l=iM(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let o=t;3===o.rank&&(o=iM(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={x:l,dy:o};return n_.runKernel(e2,p,{strides:n,pad:r,dimRoundingMode:s,dilations:i,filterShape:a})}}),lb=nB({depthwiseConv2dNativeBackpropInput_:function(e,t,a,n,r,i=[1,1],s){let l=t,o=!1;3===t.rank&&(o=!0,l=iM(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={dy:l,filter:a},d=n_.runKernel(e4,p,{strides:n,pad:r,dimRoundingMode:s,dilations:i,inputShape:e});return o?iM(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ly=nB({fusedMatMul_:function({a:e,b:t,transposeA:a=!1,transposeB:n=!1,bias:r,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:l=.2}){let o,p;if(!1===lf(n_.state.gradientDepth,i)){let o=sN(e,t,a,n);return null!=r&&(o=rw(o,r)),lc(o,i,s,l)}let d=nM(e,"a","fused matMul"),u=nM(t,"b","fused matMul");[d,u]=nN(d,u);let h=a?d.shape[d.rank-2]:d.shape[d.rank-1],m=n?u.shape[u.rank-1]:u.shape[u.rank-2],c=a?d.shape[d.rank-1]:d.shape[d.rank-2],f=n?u.shape[u.rank-2]:u.shape[u.rank-1],g=d.shape.slice(0,-2),v=u.shape.slice(0,-2),b=P(g),y=P(v);V(h===m,()=>`Error in fused matMul: inner shapes (${h}) and (${m}) of Tensors with shapes ${d.shape} and ${u.shape} and transposeA=${a} and transposeB=${n} must match.`);let w=rG(d.shape.slice(0,-2),u.shape.slice(0,-2)).concat([c,f]),x=a?iM(d,[b,h,c]):iM(d,[b,c,h]),k=n?iM(u,[y,f,m]):iM(u,[y,m,f]);null!=r&&(o=nM(r,"bias","fused matMul"),[o]=nN(o,d),rG(w,o.shape)),null!=s&&(p=nM(s,"prelu weights","fused matMul"));let N=(e,t)=>{let s,l,[o,p,d,u]=t,h=lh(iM(e,d.shape),d,i);return(a||n?!a&&n?(s=sN(h,p,!1,!1),l=sN(h,o,!0,!1)):a&&!n?(s=sN(p,h,!1,!0),l=sN(o,h,!1,!1)):(s=sN(p,h,!0,!0),l=sN(h,o,!0,!0)):(s=sN(h,p,!1,!0),l=sN(o,h,!0,!1)),null!=r)?[s,l,lm(u,h)]:[s,l]},I={a:x,b:k,bias:o,preluActivationWeights:p},S={transposeA:a,transposeB:n,activation:i,leakyreluAlpha:l};return null==r?rC((e,t,a)=>{let n=n_.runKernel(az,I,S);return a([e,t,n]),{value:iM(n,w),gradFunc:N}})(x,k):rC((e,t,a,n)=>{let r=n_.runKernel(az,I,S);return n([e,t,r,a]),{value:iM(r,w),gradFunc:N}})(x,k,o)}}),lw=nB({cropAndResize_:function(e,t,a,n,r="bilinear",i=0){let s=nM(e,"image","cropAndResize"),l=nM(t,"boxes","cropAndResize","float32"),o=nM(a,"boxInd","cropAndResize","int32"),p=l.shape[0];return V(4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),V(2===l.rank&&4===l.shape[1],()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${l.shape}.`),V(1===o.rank&&o.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${l.shape}.`),V(2===n.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),V(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),V("bilinear"===r||"nearest"===r,()=>`method must be bilinear or nearest, but was ${r}`),n_.runKernel(eZ,{image:s,boxes:l,boxInd:o},{method:r,extrapolationValue:i,cropSize:n})}}),lx=nB({flipLeftRight_:function(e){let t=nM(e,"image","flipLeftRight","float32");return V(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),n_.runKernel(ts,{image:t},{})}}),lk=nB({grayscaleToRGB_:function(e){let t=nM(e,"image","grayscaleToRGB"),a=t.rank-1,n=t.shape[a];V(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),V(1===n,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let r=Array(t.rank);return r.fill(1,0,a),r[a]=3,st(t,r)}}),lN=nB({einsum_:function(e,...t){let a=t.map((e,t)=>nM(e,`tensors${t}`,"einsum"));return n_.runKernel(te,a,{equation:e})}}),lI=nB({rgbToGrayscale_:function(e){let t,a=nM(e,"image","RGBToGrayscale"),n=a.rank-1,r=a.shape[n];V(a.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${a.rank}.`),V(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let i=a.dtype,s=rb(a,"float32"),l=s9([.2989,.587,.114]);switch(a.rank){case 2:t=lN("ij,j->i",s,l);break;case 3:t=lN("ijk,k->ij",s,l);break;case 4:t=lN("ijkl,l->ijk",s,l);break;case 5:t=lN("ijklm,m->ijkl",s,l);break;case 6:t=lN("ijklmn,n->ijklm",s,l);break;default:throw Error("Not a valid tensor rank.")}return rb(t=se(t,-1),i)}}),lS=nB({rotateWithOffset_:function(e,t,a=0,n=.5){let r=nM(e,"image","rotateWithOffset","float32");return V(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`),n_.runKernel(aB,{image:r},{radians:t,fillValue:a,center:n})}});function lT(e,t,a,n,r,i){null==n&&(n=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);let s=e.shape[0];return a=Math.min(a,s),V(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),V(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),V(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),V(1===t.rank,()=>"scores must be a 1D tensor"),V(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),V(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:a,iouThreshold:n,scoreThreshold:r,softNmsSigma:i}}let lC=nB({nonMaxSuppression_:function(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY){let i=nM(e,"boxes","nonMaxSuppression","float32"),s=nM(t,"scores","nonMaxSuppression","float32"),l=lT(i,s,a,n,r);a=l.maxOutputSize;let o={maxOutputSize:a,iouThreshold:n=l.iouThreshold,scoreThreshold:r=l.scoreThreshold};return n_.runKernel(tP,{boxes:i,scores:s},o)}});function l$(e,t){return e>t?1:e<t?-1:0}function lE(e,t,a,n,r){return lA(e,t,a,n,r,0)}function l_(e,t,a,n,r,i){return lA(e,t,a,n,r,0,!1,i,!0)}function lR(e,t,a,n,r,i){return lA(e,t,a,n,r,i,!0)}function lA(e,t,a,n,r,i,s=!1,l=!1,o=!1){let p=[];for(let e=0;e<t.length;e++)t[e]>r&&p.push({score:t[e],boxIndex:e,suppressBeginIndex:0});p.sort(lD);let d=i>0?-.5/i:0,u=[],h=[];for(;u.length<a&&p.length>0;){let t=p.pop(),{score:a,boxIndex:i,suppressBeginIndex:s}=t;if(a<r)break;let l=!1;for(let a=u.length-1;a>=s;--a){let s=function(e,t,a){let n=e.subarray(4*t,4*t+4),r=e.subarray(4*a,4*a+4),i=Math.min(n[0],n[2]),s=Math.min(n[1],n[3]),l=Math.max(n[0],n[2]),o=Math.max(n[1],n[3]),p=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),u=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),m=(l-i)*(o-s),c=(u-p)*(h-d);if(m<=0||c<=0)return 0;let f=Math.max(Math.min(l,u)-Math.max(i,p),0)*Math.max(Math.min(o,h)-Math.max(s,d),0);return f/(m+c-f)}(e,i,u[a]);if(s>=n){l=!0;break}if(t.score=t.score*function(e,t,a){let n=Math.exp(t*a*a);return a<=e?n:0}(n,d,s),t.score<=r)break}t.suppressBeginIndex=u.length,!l&&(t.score===a?(u.push(i),h.push(t.score)):t.score>r&&function(e,t,a){let n=function(e,t,a){let n=0,r=e.length,i=0,s=!1;for(;n<r;){let l=a(t,e[i=n+(r-n>>>1)]);l>0?n=i+1:(r=i,s=!l)}return s?n:-n-1}(e,t,a||l$);e.splice(n<0?-(n+1):n,0,t)}(p,t,lD))}let m=u.length,c=a-m;l&&c>0&&(u.push(...Array(c).fill(0)),h.push(...Array(c).fill(0)));let f={selectedIndices:u};return s&&(f.selectedScores=h),o&&(f.validOutputs=m),f}function lD(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function lF(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY){var i,s;let l=nM(e,"boxes","nonMaxSuppressionAsync"),o=nM(t,"scores","nonMaxSuppressionAsync"),p=lT(l,o,a,n,r);a=p.maxOutputSize,n=p.iouThreshold,r=p.scoreThreshold;let d=await Promise.all([l.data(),o.data()]),{selectedIndices:u}=(i=d[0],s=d[1],lA(i,s,a,n,r,0));return l!==e&&l.dispose(),o!==t&&o.dispose(),s9(u,"int32")}let lO=nB({nonMaxSuppressionWithScore_:function(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,i=0){let s=nM(e,"boxes","nonMaxSuppression"),l=nM(t,"scores","nonMaxSuppression"),o=lT(s,l,a,n,r,i);a=o.maxOutputSize,n=o.iouThreshold,r=o.scoreThreshold;let p={maxOutputSize:a,iouThreshold:n,scoreThreshold:r,softNmsSigma:i=o.softNmsSigma},d=n_.runKernel(tW,{boxes:s,scores:l},p);return{selectedIndices:d[0],selectedScores:d[1]}}});async function lL(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,i=0){var s,l;let o=nM(e,"boxes","nonMaxSuppressionAsync"),p=nM(t,"scores","nonMaxSuppressionAsync"),d=lT(o,p,a,n,r,i);a=d.maxOutputSize,n=d.iouThreshold,r=d.scoreThreshold,i=d.softNmsSigma;let u=await Promise.all([o.data(),p.data()]),{selectedIndices:h,selectedScores:m}=(s=u[0],l=u[1],lA(s,l,a,n,r,i,!0));return o!==e&&o.dispose(),p!==t&&p.dispose(),{selectedIndices:s9(h,"int32"),selectedScores:s9(m)}}let lM=nB({nonMaxSuppressionPadded_:function(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,i=!1){let s=nM(e,"boxes","nonMaxSuppression"),l=nM(t,"scores","nonMaxSuppression"),o=lT(s,l,a,n,r,null),p=o.maxOutputSize,d=o.iouThreshold,u=o.scoreThreshold,h=n_.runKernel(tU,{boxes:s,scores:l},{maxOutputSize:p,iouThreshold:d,scoreThreshold:u,padToMaxOutputSize:i});return{selectedIndices:h[0],validOutputs:h[1]}}});async function lV(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,i=!1){let s=nM(e,"boxes","nonMaxSuppressionAsync"),l=nM(t,"scores","nonMaxSuppressionAsync"),o=lT(s,l,a,n,r,null),p=o.maxOutputSize,d=o.iouThreshold,u=o.scoreThreshold,[h,m]=await Promise.all([s.data(),l.data()]),{selectedIndices:c,validOutputs:f}=l_(h,m,p,d,u,i);return s!==e&&s.dispose(),l!==t&&l.dispose(),{selectedIndices:s9(c,"int32"),validOutputs:r$(f,"int32")}}let lB=nB({resizeBilinear_:function(e,t,a=!1,n=!1){let r=nM(e,"images","resizeBilinear");V(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),V(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),V(!1===n||!1===a,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,s=!1;3===r.rank&&(s=!0,i=iM(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,l={images:i},o=n_.runKernel(t9,l,{alignCorners:a,halfPixelCenters:n,size:t});return s?iM(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),lz=nB({resizeNearestNeighbor_:function(e,t,a=!1,n=!1){let r=nM(e,"images","resizeNearestNeighbor");V(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),V(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),V("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype"),V(!1===n||!1===a,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,s=!1;3===r.rank&&(s=!0,i=iM(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,l={images:i},o=n_.runKernel(t6,l,{alignCorners:a,halfPixelCenters:n,size:t});return s?iM(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),lP=nB({bincount_:function(e,t,a){let n=nM(e,"x","bincount"),r=nM(t,"weights","bincount");return V("int32"===n.dtype,()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),V(a>=0,()=>`size must be non-negative, but got ${a}.`),V(r.size===n.size||0===r.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${r.shape}.`),n_.runKernel(eF,{x:n,weights:r},{size:a})}}),lU=nB({lessEqual_:function(e,t){let a=nM(e,"a","lessEqual","string_or_numeric"),n=nM(t,"b","lessEqual","string_or_numeric");[a,n]=nN(a,n),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(tk,r)}}),lW=nB({round_:function(e){let t=nM(e,"x","round");return n_.runKernel(ae,{x:t})}}),lG=nB({threshold_:function(e,t="binary",a=!1,n=.5){let r,i,s,l,o=nM(e,"image","threshold"),p=o.shape[0]*o.shape[1],d=rN(s9([n]),255);if(V(3===o.rank,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),V(3===o.shape[2]||1===o.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),V("int32"===o.dtype||"float32"===o.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),V("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===o.shape[2]){[r,i,s]=s2(o,[1,1,1],-1);let e=rN(r,.2989),t=rN(i,.587),a=rN(s,.114);l=rw(rw(e,t),a)}else l=e;return"otsu"===t&&(d=function(e,t){let a,n,r,i,s,l,o=s9([-1]),p=s9([0]),d=s9([0]);for(let u=0;u<e.size-1;u++){a=sX(e,0,u+1),n=sX(e,u+1),s=rk(su(a),t),l=rk(su(n),t),r=rk(su(rN(a,sW(0,a.size))),su(a));let h=rL(n.shape,a.size),m=rw(sW(0,n.size),h),c=rB(r,i=rk(su(rN(n,m)),su(n))),f=rB(r,i),g=rN(s,l),v=si(d=rN(rN(g,c),f),p);p=le(v,d,p),o=le(v,s9([u]),o)}return o}(lP(rb(lW(l),"int32"),nU([]),256),p)),rb(rN(a?lU(l,d):si(l,d),255),"int32")}}),lH=nB({transform_:function(e,t,a="nearest",n="constant",r=0,i){let s=nM(e,"image","transform","float32"),l=nM(t,"transforms","transform","float32");return V(4===s.rank,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),V(2===l.rank&&(l.shape[0]===s.shape[0]||1===l.shape[0])&&8===l.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),V(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`),n_.runKernel(aR,{image:s,transforms:l},{interpolation:a,fillMode:n,fillValue:r,outputShape:i})}}),lj=nB({less_:function(e,t){let a=nM(e,"a","less","string_or_numeric"),n=nM(t,"b","less","string_or_numeric");[a,n]=nN(a,n),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(tx,r)}}),lq=nB({norm_:function(e,t="euclidean",a=null,n=!1){let r=function e(t,a,n=null){if(0===t.rank)return rP(t);if(1!==t.rank&&null===n)return e(iM(t,[-1]),a,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===a)return su(rP(t),n);if(a===1/0)return sd(rP(t),n);if(a===-1/0)return sC(rP(t),n);if("euclidean"===a||2===a)return rI(su(rV(rP(t),r$(2,"int32")),n));throw Error(`Error in norm: invalid ord value: ${a}`)}if(Array.isArray(n)&&2===n.length){if(1===a)return sd(su(rP(t),n[0]),n[1]-1);if(a===1/0)return sd(su(rP(t),n[1]),n[0]);if(a===-1/0)return sC(su(rP(t),n[1]),n[0]);if("fro"===a||"euclidean"===a)return rI(su(rS(t),n));throw Error(`Error in norm: invalid ord value: ${a}`)}throw Error(`Error in norm: invalid axis: ${n}`)}(e=nM(e,"x","norm"),t,a),i=r.shape;if(n){let t=q(a,e.shape);i=sg(r.shape,t)}return iM(r,i)}});function lK(e,t=!1){return n_.tidy(()=>{V(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let a=e.shape[0],n=e.shape[1],r=sa(a),i=ry(e),s=s5([[1]],[1,1]),l=ry(s),o=a>=n?n:a;for(let e=0;e<o;++e){let t=i,o=l,p=r;[l,i,r]=n_.tidy(()=>{let t=sX(i,[e,e],[a-e,1]),o=lq(t),p=sX(i,[e,e],[1,1]),d=le(si(p,0),s5([[-1]]),s5([[1]])),u=rB(p,rN(d,o)),h=rk(t,u);l=1===h.shape[0]?ry(s):ij([s,sX(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);let m=s_(rk(sN(d,u),o)),c=sX(i,[e,0],[a-e,n]),f=rN(m,l),g=ln(l);if(0===e)i=rB(c,sN(f,sN(g,c)));else{let t=rB(c,sN(f,sN(g,c)));i=ij([sX(i,[0,0],[e,n]),t],0)}let v=ln(f),b=sX(r,[0,e],[a,r.shape[1]-e]);if(0===e)r=rB(b,sN(sN(b,l),v));else{let t=rB(b,sN(sN(b,l),v));r=ij([sX(r,[0,0],[a,e]),t],1)}return[l,i,r]}),nq([t,o,p])}return!t&&a>n&&(r=sX(r,[0,0],[a,n]),i=sX(i,[0,0],[n,n])),[r,i]})}let lX=nB({qr_:function(e,t=!1){if(V(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return lK(e,t);{let a=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),n=s7(iM(e,[a,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];return n.forEach(e=>{let[a,n]=lK(e,t);r.push(a),i.push(n)}),[iM(s6(r,0),e.shape),iM(s6(i,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(g||(g={}));let lY=nB({squaredDifference_:function(e,t){let a=nM(e,"a","squaredDifference"),n=nM(t,"b","squaredDifference");[a,n]=nN(a,n),rG(a.shape,n.shape);let r={a:a,b:n};return n_.runKernel(ax,r,{})}}),lJ={flipLeftRight:lx,grayscaleToRGB:lk,resizeNearestNeighbor:lz,resizeBilinear:lB,rgbToGrayscale:lI,rotateWithOffset:lS,cropAndResize:lw,nonMaxSuppression:lC,nonMaxSuppressionAsync:lF,nonMaxSuppressionWithScore:lO,nonMaxSuppressionWithScoreAsync:lL,nonMaxSuppressionPadded:lM,nonMaxSuppressionPaddedAsync:lV,threshold:lG,transform:lH},lZ={qr:lX};class lQ{static sgd(e){return new rq(e)}static momentum(e,t,a=!1){return new rK(e,t,a)}static rmsprop(e,t=.9,a=0,n=null,r=!1){return new rX(e,t,a,n,r)}static adam(e=.001,t=.9,a=.999,n=null){return new rz(e,t,a,n)}static adadelta(e=.001,t=.95,a=null){return new rO(e,t,a)}static adamax(e=.002,t=.9,a=.999,n=null,r=0){return new rj(e,t,a,n,r)}static adagrad(e,t=.1){return new rM(e,t)}}let l1="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function l0(){return new Promise(e=>l1(()=>e()))}function l2(e,t){let a=e[0].length;e.forEach((e,t)=>{V(e.length===a,()=>`Error in concat${a}D: rank of tensors[${t}] must be the same as the rank of the rest (${a})`)}),V(t>=0&&t<a,()=>`Error in concat${a}D: axis must be between 0 and ${a-1}.`);let n=e[0];e.forEach((e,r)=>{for(let i=0;i<a;i++)V(i===t||e[i]===n[i],()=>`Error in concat${a}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function l4(e,t){let a=e[0].slice();for(let n=1;n<e.length;n++)a[t]+=e[n][t];return a}function l6(e,t,a){let n=[];if(null==a&&null==t)return n;if(null==t)for(;n.length<e+a.length;)n.push(-1);else n=t.slice();if(null==a)return n;if(e+a.length!==n.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+a.length}, but shape.rank = ${n.length}`);for(let r=1;r<a.length;++r){let i=a[r],s=n[n.length-a.length+r],l=n[s];if(i>=0)if(l>=0){if(l!==i)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${l}`)}else n[s]=i}return n}function l3(e){let t={FIRST_DIM_SIZE:v.FIRST_DIM_SIZE,VALUE_ROWIDS:v.VALUE_ROWIDS,ROW_LENGTHS:v.ROW_LENGTHS,ROW_SPLITS:v.ROW_SPLITS,ROW_LIMITS:v.ROW_LIMITS,ROW_STARTS:v.ROW_STARTS},a=[];for(let n of e)if(n in t)a.push(t[n]);else break;return a}function l9(e){return 0===e.length?0:e[0]===v.FIRST_DIM_SIZE?e.length-1:e.length}function l5(e,t){if(null==e||null==t)return;let a=e.length,n=t.length;if(a>=n)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${a} must be less than ragged tensor input flatValues.rank = ${n})`);for(let r=0;r<Math.min(a,n-1);++r){let a=e[r],n=t[r+1];if(a>=0&&n>=0&&1!==a&&a!==n)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${a} but ragged tensor input.flatValues.shape[${r-e.length}] = ${n}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(v||(v={}));let l8=30;function l7(e){return e<=l8?e:ea(e,Math.floor(Math.sqrt(e)))}function oe(e,t,a){return[a*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function ot(e,t,a,n=!0){let r=[];if(n)(r=r.concat(t.slice(0))).push(e[0]/a),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let n=0;n<a;++n)r=r.concat([e[n+1]/t[n],t[n]]);r=r.concat(e.slice(a+1))}return r}function oa(e,t,a=!0){let n=[];if(a){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{let a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2==1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function on(e,t,a,n=!0){let r=[];n?r.push(e[0]/a):r.push(e[0]*a);for(let a=1;a<e.length;++a)a<=t.length?n?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function or(e,t){let a=[0];for(let n=0;n<t;++n)a.push(e[n][0]);return a}function oi(e,t,a){let n=e.slice(0,1);for(let r=0;r<a;++r)n.push(e[r+1]-t[r][0]-t[r][1]);return n}function os(e,t){let a=e.shape.length,n=t.shape.length;if(a<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${a}.`);if(n<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>a)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${a}`);if(0===P(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,i=r[r.length-1],s=1;for(let e=0;e<r.length-1;++e)s*=r[e];let l=e.shape,o=r.slice();o.pop();let p=1;for(let e=i;e<a;++e)p*=l[e],o.push(l[e]);let d=[...en(e.shape).map(e=>e/p),1].slice(0,i);return[o,s,p,d]}function ol(e,t,a){let n=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${a.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${r}.`;if(a.rank<r)throw Error(i+` update.rank < ${r}. `);if(e.length<n+(a.rank-r))throw Error(i+` Output shape length < ${n+(a.rank-r)}`);if(a.rank!==r+e.length-n)throw Error(i+` update.rank != ${r+e.length-n}`);for(let e=0;e<r;++e)if(a.shape[e]!==t.shape[e])throw Error(i+` updates.shape[${e}] (${a.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<a.rank-r;++t)if(a.shape[t+r]!==e[t+n])throw Error(i+` updates.shape[${t+r}] (${a.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function oo(e,t,a){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(a.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${a}`);if(0===a.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ol(a,t,e)}function op(e,t,a){let n=t.shape.length,r=n>1?t.shape[n-1]:1,i=a.length,s=1;for(let e=r;e<i;++e)s*=a[e];let l=r<1?1:r,o=P(t.shape)/l,p=[...en(a.slice(0,r)),1];return{sliceRank:r,numUpdates:o,sliceSize:s,strides:p,outputSize:P(a)}}let od=1.7580993408473768,ou=1.0507009873554805,oh=.3275911,om=.254829592,oc=-.284496736,of=1.421413741,og=-1.453152027,ov=1.061405429;function ob(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let a=new Float32Array(2*e.length);for(let n=0;n<a.length;n+=2)a[n]=e[n/2],a[n+1]=t[n/2];return a}function oy(e){let t=new Float32Array(e.length/2),a=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],a[n/2]=e[n+1];return{real:t,imag:a}}function ow(e){let t=Math.ceil(e.length/4),a=new Float32Array(t),n=new Float32Array(t);for(let t=0;t<e.length;t+=4)a[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:a,imag:n}}function ox(e){let t=Math.floor(e.length/4),a=new Float32Array(t),n=new Float32Array(t);for(let t=2;t<e.length;t+=4)a[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:a,imag:n}}function ok(e,t){return{real:e[2*t],imag:e[2*t+1]}}function oN(e,t,a,n){e[2*n]=t,e[2*n+1]=a}function oI(e,t){let a=new Float32Array(e/2),n=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let i=(t?2:-2)*Math.PI*(r/e);a[r]=Math.cos(i),n[r]=Math.sin(i)}return{real:a,imag:n}}function oS(e,t,a){let n=(a?2:-2)*Math.PI*(e/t);return{real:Math.cos(n),imag:Math.sin(n)}}let oT=/->/g;function oC(e,t){let a=((e=e.replace(/\s/g,"")).length-e.replace(oT,"").length)/2;if(a<1)throw Error("Equations without an arrow are not supported.");if(a>1)throw Error('Equation must contain exactly one arrow ("->").');let[n,r]=e.split("->");V(-1===n.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let i=n.split(","),s=i.length;if(t!==s)throw Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let l=[];for(let e=0;e<r.length;++e){let t=r[e];if(!i.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===l.indexOf(t)&&l.push(t)}for(let e=0;e<n.length;++e){let t=n[e];-1===l.indexOf(t)&&","!==t&&l.push(t)}let o=Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);o[e]=[];for(let t=0;t<i[e].length;++t)o[e].push(l.indexOf(i[e][t]))}let p=l.length,d=r.length,u=[];for(let e=d;e<p;++e)u.push(e);return{allDims:l,summedDims:u,idDims:o}}function o$(e,t){let a=Array(e);a.fill(-1);for(let e=0;e<t.length;++e)a[t[e]]=e;let n=[];for(let t=0;t<e;++t)-1===a[t]&&n.push(t);return{permutationIndices:a=a.filter(e=>-1!==e),expandDims:n}}function oE(e,t,a){let n=Array(e);for(let e=0;e<a.length;++e){let r=a[e].shape;for(let a=0;a<t[e].length;++a)void 0===n[t[e][a]]?n[t[e][a]]=r[a]:V(n[t[e][a]]===r[a],()=>`Expected dimension ${n[t[e][a]]} at axis ${a} of input shaped ${JSON.stringify(r)}, but got dimension ${r[a]}`)}}function o_(e,t){let a=[],n=0;0===e.length&&e.push(-1),n=e.length+1;for(let e=0;e<n;++e)a.push([]);let r=[];for(let n=0;n<e.length;++n)for(let i of function(e,t){let a=[];for(let n=0;n<e.length;++n)(0===e[n].length||-1!==e[n].indexOf(t)||-1===t)&&a.push(n);return a}(t,e[n]))-1===r.indexOf(i)&&(a[n].push(i),r.push(i));return{path:e,steps:a}}function oR(e){return e.every((e,t)=>e===t)}function oA(e,t,a=0){let n=[];if("number"==typeof t)V(e.shape[a]%t==0,()=>"Number of splits must evenly divide the axis."),n=Array(t).fill(e.shape[a]/t);else{V(1>=t.reduce((e,t)=>(-1===t&&(e+=1),e),0),()=>"There should be only one negative value in split array.");let r=t.indexOf(-1);if(-1!==r){let n=t.reduce((e,t)=>t>0?e+t:e);t[r]=e.shape[a]-n}V(e.shape[a]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function oD(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function oF(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function oO(e,t,a){return`indices(${e}, 0) is invalid: ${t} >= ${a}`}function oL(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function oM(e,t){return`size ${e} must be non-negative, not ${t}`}function oV(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function oB(e,t){let a=P(e),n=P(t);return`Input to reshape is a SparseTensor with ${a}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function oz(e,t){let a=P(e),n=P(t);return`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}function oP(){return"segment ids must be >= 0"}function oU(){return"segment ids are not increasing"}function oW(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function oG(e,t,a){return`Bad: indices[${e}] == ${t} out of range [0, ${a})`}function oH(e,t){let a,n=!1;for(e<=l8?(a=e,n=!0):a=ea(e,Math.floor(Math.sqrt(e)));!n;)a>t||a===e?n=!0:a=ea(e,a+1);return a}function oj(e,t,a){let n=[],r=e.length;for(let i=0;i<r;i++)i!==t?n.push(e[i]):n.push(a);return n}function oq(e,t,a,n){let r=t.shape.length,i=e.shape.length;if(0!==n&&(n<-r||n>r))throw Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${n}`);if(n<0&&(n+=r),n>i)throw Error(`batchDims (${n}) must be less than rank(x) (
    ${i}).`);if(a<n)throw Error(`batchDims (${n}) must be less than or equal to axis (${a}).`);for(let a=0;a<n;++a)if(e.shape[a]!==t.shape[a])throw Error(`x.shape[${a}]: ${e.shape[a]} should be equal to indices.shape[${a}]: ${t.shape[a]}.`);let s=e.shape[a],l=[],o=1,p=1,d=1;for(let t=0;t<n;++t)l.push(e.shape[t]),o*=e.shape[t];for(let t=n;t<a;t++)l.push(e.shape[t]),p*=e.shape[t];for(let e=n;e<r;e++)l.push(t.shape[e]);for(let t=a+1;t<i;t++)l.push(e.shape[t]),d*=e.shape[t];return{batchSize:o,sliceSize:d,outerSize:p,dimSize:s,outputShape:l}}function oK(e){try{return e.map(e=>nr(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function oX(e){return e.map(e=>nn(e))}function oY(e,t){let a=[];for(let e=0;e<t.length;e++)t[e]&&a.push(e);let n=rv(e,"int32"),r=rv([a.length,e.length],"int32");for(let t=0;t<a.length;t++){let i=n.indexToLoc(a[t]),s=t*e.length;r.values.set(i,s)}return r.toTensor()}for(let e of[rO,rM,rz,rj,rK,rX,rq])rD(e);let oJ={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(e,lu(rb(a,"float32"),-1))}}},oZ=nB({avgPool3dGrad_:function(e,t,a,n,r,i){let s=nM(e,"dy","avgPool3dGrad"),l=nM(t,"input","avgPool3dGrad"),o=s,p=l,d=!1;4===l.rank&&(d=!0,o=iM(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),p=iM(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),V(5===o.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${o.rank}.`),V(5===p.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),iL("avgPool3dGrad",r,i);let u={dy:o,input:p},h=n_.runKernel(eR,u,{filterSize:a,strides:n,pad:r,dimRoundingMode:i});return d?iM(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),oQ=nB({avgPoolGrad_:function(e,t,a,n,r){let i=nM(e,"dy","avgPoolGrad"),s=nM(t,"input","avgPoolGrad");V(s.rank===i.rank,()=>`Rank of input (${s.rank}) does not match rank of dy (${i.rank})`);let l=s,o=i,p=!1;3===s.rank&&(p=!0,l=iM(s,[1,s.shape[0],s.shape[1],s.shape[2]]),o=iM(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===o.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),V(4===l.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);let d={dy:o,input:l},u=n_.runKernel(eE,d,{filterSize:a,strides:n,pad:r});return p?iM(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),o1=nB({spaceToBatchND_:function(e,t,a){let n=nM(e,"x","spaceToBatchND");return V(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),V(a.length===t.length,()=>`paddings.shape[0] ${a.length} must be equal to [blockShape] ${t.length}`),V(n.shape.reduce((e,n,r)=>r>0&&r<=t.length?e&&(n+a[r-1][0]+a[r-1][1])%t[r-1]==0:e,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${a.toString()} must be divisible by blockShapes ${t.toString()}`),n_.runKernel(am,{x:n},{blockShape:t,paddings:a})}}),o0={kernelName:eP,inputsToSave:["x"],gradFunc:oJ.gradFunc},o2=nB({conv3DBackpropFilter_:function(e,t,a,n,r){let i=e;4===e.rank&&(i=iM(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=iM(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),V(5===i.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),V(5===s.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${s.shape}.`),V(5===a.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${a}.`),V(i.shape[4]===a[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${a[3]}.`),V(s.shape[4]===a[4],()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${a[4]}).`);let l={x:i,dy:s};return n_.runKernel(eq,l,{strides:n,pad:r,filterShape:a})}}),o4=nB({sin_:function(e){let t=nM(e,"x","sin","float32");return n_.runKernel("Sin",{x:t})}}),o6=nB({sinh_:function(e){let t=nM(e,"x","sinh");return n_.runKernel(ao,{x:t})}}),o3=nB({cumsum_:function(e,t=0,a=!1,n=!1){let r=nM(e,"x","cumsum");return n_.runKernel(eJ,{x:r},{axis:t,exclusive:a,reverse:n})}}),o9=nB({rsqrt_:function(e){let t=nM(e,"x","rsqrt","float32");return n_.runKernel(at,{x:t})}}),o5=nB({unsortedSegmentSum_:function(e,t,a){let n=nM(e,"x","unsortedSegmentSum"),r=nM(t,"segmentIds","unsortedSegmentSum","int32");return V(a%1==0,()=>"numSegments must be of dtype int"),n_.runKernel(aO,{x:n,segmentIds:r},{numSegments:a})}});function o8(e,t){let a=[];for(let n=e;n<t;++n)a.push(n);return a}function o7(e){let t=[];for(let a=0;a<e.length;++a)for(let n=0;n<e[a].length;++n)t.push(e[a][n]);return t}let pe=nB({localResponseNormalizationBackprop_:function(e,t,a,n=5,r=1,i=1,s=.5){return n_.runKernel(t$,{x:e,y:t,dy:a},{depthRadius:n,bias:r,alpha:i,beta:s})}});function pt(e,t,a,n){return t.rank<a.rank&&(t=iM(t,sg(t.shape,n))),e.rank<a.rank&&(e=iM(e,sg(e.shape,n))),{x:()=>rN(e,rb(i5(a,t),e.dtype))}}let pa={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let{reductionIndices:n}=a,r=t[0],i=t[1],s=q(n,r.shape),l=pt(e,i,r,s);return{x:()=>l.x()}}},pn=nB({maxPool3dGrad_:function(e,t,a,n,r,i,s){let l=nM(e,"dy","maxPool3dGrad"),o=nM(t,"input","maxPool3dGrad"),p=nM(a,"output","maxPool3dGrad"),d=l,u=o,h=p,m=!1;4===o.rank&&(m=!0,d=iM(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),u=iM(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=iM(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),V(5===d.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),V(5===u.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),V(5===h.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),iL("maxPool3dGrad",i,s);let c={dy:d,input:u,output:h},f=n_.runKernel(tD,c,{filterSize:n,strides:r,pad:i,dimRoundingMode:s});return m?iM(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),pr=nB({maxPoolGrad_:function(e,t,a,n,r,i,s){let l=nM(e,"dy","maxPoolGrad"),o=nM(t,"input","maxPoolGrad"),p=nM(a,"output","maxPoolGrad");return V(o.rank===l.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${l.rank})`),V(4===l.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),V(4===o.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${o.rank}.`),iL("maxPoolGrad",i,s),n_.runKernel(tR,{dy:l,input:o,output:p},{filterSize:n,strides:r,pad:i,dimRoundingMode:s})}}),pi={kernelName:tq,inputsToSave:["x"],gradFunc:(e,t,a)=>{let n=t[0],{paddings:r}=a,i=r.map(e=>e[0]);return{x:()=>sX(e,i,n.shape)}}},ps=nB({cumprod_:function(e,t=0,a=!1,n=!1){let r=nM(e,"x","cumprod");return n_.runKernel(eY,{x:r},{axis:t,exclusive:a,reverse:n})}}),pl=nB({logicalNot_:function(e){let t=nM(e,"x","logicalNot","bool");return n_.runKernel(tT,{x:t})}}),po=nB({cos_:function(e){let t=nM(e,"x","cos","float32");return n_.runKernel("Cos",{x:t})}}),pp=nB({cosh_:function(e){let t=nM(e,"x","cosh","float32");return n_.runKernel(eX,{x:t})}}),pd=nB({batchToSpaceND_:function(e,t,a){let n=nM(e,"x","batchToSpaceND"),r=t.reduce((e,t)=>e*t);return V(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),V(a.length===t.length,()=>`crops.length is ${a.length} but should be equal to blockShape.length  ${t.length}`),V(n.shape[0]%r==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`),n_.runKernel(eD,{x:n},{blockShape:t,crops:a})}}),pu={kernelName:am,gradFunc:(e,t,a)=>{let{blockShape:n,paddings:r}=a;return{x:()=>pd(e,n,r)}}},ph={kernelName:ac,gradFunc:(e,t,a)=>{let{axis:n}=a;return{x:()=>ij(e,n)}}};for(let e of[oJ,{kernelName:eb,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let t=rS(rb(a,"float32"));return s_(rk(e,rI(rB(r$(1),t))))}}}},{kernelName:ey,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rI(rB(rS(rb(a,"float32")),1)))}}},{kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=rG(a.shape,n.shape);return{a:()=>{let t=e,n=rW(a.shape,r);return n.length>0&&(t=su(t,n)),iM(t,a.shape)},b:()=>{let t=e,a=rW(n.shape,r);return a.length>0&&(t=su(t,a)),iM(t,n.shape)}}}},{kernelName:ew,saveAllInputs:!0,gradFunc:(e,t)=>{let a={};return t.forEach((t,n)=>{a[n]=()=>e.clone()}),a}},{kernelName:ex,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rT(a)}}},{kernelName:ek,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rT(a)}}},{kernelName:eN,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rI(rB(r$(1),rS(rb(a,"float32")))))}}},{kernelName:eI,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rI(rw(r$(1),rS(rb(a,"float32")))))}}},{kernelName:eC,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=rG(a.shape,n.shape);return{a:()=>{let t=rw(rS(a),rS(n)),i=rN(e,rk(n,t)),s=rW(a.shape,r);return s.length>0&&(i=su(i,s)),iM(i,a.shape)},b:()=>{let t=rw(rS(a),rS(n)),i=s_(rN(e,rk(a,t))),s=rW(n.shape,r);return s.length>0&&(i=su(i,s)),iM(i,n.shape)}}}},{kernelName:eS,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rw(rS(rb(a,"float32")),1))}}},{kernelName:eT,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rB(r$(1),rS(rb(a,"float32"))))}}},{kernelName:e_,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{filterSize:r,strides:i,pad:s,dimRoundingMode:l}=a;return{x:()=>oZ(e,n,r,i,s,l)}}},{kernelName:e$,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{filterSize:r,strides:i,pad:s}=a;return{x:()=>oQ(e,n,r,i,s)}}},{kernelName:eA,inputsToSave:["a","b"],gradFunc:(e,t,a)=>{let[n,r]=t,{transposeA:i,transposeB:s}=a;return i||s?!i&&s?{a:()=>sN(e,r,!1,!1),b:()=>sN(e,n,!0,!1)}:i&&!s?{a:()=>sN(r,e,!1,!0),b:()=>sN(n,e,!1,!1)}:{a:()=>sN(r,e,!0,!0),b:()=>sN(e,n,!0,!0)}:{a:()=>sN(e,r,!1,!0),b:()=>sN(n,e,!0,!1)}}},{kernelName:eD,gradFunc:(e,t,a)=>{let{blockShape:n,crops:r}=a;return{x:()=>o1(e,n,r)}}},{kernelName:"BroadcastTo",gradFunc:(e,t,a)=>{let n=a.inputShape,r=a.shape,i=Array.from(r);for(let e=n.length-1;e>=0;e--)if(n[e]===r[e])i[e]=1;else if(1!==n[e])throw Error(`broadcastTo(): [${n}] cannot be broadcast to [${r}].`);let s=[];for(let e=0;e<i.length;e++)i[e]>1&&s.push(e);return{x:()=>su(e,s,!0)}}},{kernelName:eM,gradFunc:e=>({x:()=>e.clone()})},{kernelName:eV,gradFunc:e=>({x:()=>rT(e)})},{kernelName:eB,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{clipValueMin:r,clipValueMax:i}=a;return{x:()=>le(sk(ss(n,r),lU(n,i)),e,rT(e))}}},o0,{kernelName:eU,saveAllInputs:!0,gradFunc:(e,t,a)=>{let n=t.map(e=>e.shape),{axis:r}=a,i=q(r,t[0].shape)[0];return s2(e,n.map(e=>e[i]),i).map(e=>()=>e)}},{kernelName:eH,inputsToSave:["dy","filter"],gradFunc:(e,t,a)=>{let[n,r]=t,{strides:i,pad:s,dataFormat:l,dimRoundingMode:o}=a;return{dy:()=>iJ(e,r,i,s,l,1,o),filter:()=>lp(e,n,r.shape,i,s,l,o)}}},{kernelName:eW,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[n,r]=t,{dilations:i,strides:s,pad:l,dataFormat:o}=a;return V(iA(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>iQ(n.shape,e,r,s,l,o),filter:()=>lp(n,e,r.shape,s,l,o)}}},{kernelName:ej,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:n,strides:r,pad:i}=a;V(iA(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[s,l]=t;return{x:()=>i2(s.shape,e,l,r,i),filter:()=>o2(s,e,l.shape,r,i)}}},{kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(s_(o4(rb(a,"float32"))),e)}}},{kernelName:eX,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(o6(rb(a,"float32")),e)}}},{kernelName:eJ,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{axis:r,exclusive:i,reverse:s}=a;return{x:()=>{let t=sb([r],n.rank),a=o3(e,r,i,!s);return null!=t&&(a=ln(a,t)),a}}}},{kernelName:e0,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:n,strides:r,pad:i,dimRoundingMode:s}=a,l=null==n?[1,1]:n;V(iA(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);let[o,p]=t;return V(4===o.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${o.rank}.`),V(4===p.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),V(o.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${o.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),V(iD(r,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${l}'.`),iL("depthwiseConv2d",i,s),{x:()=>lb(o.shape,e,p,r,i,l,s),filter:()=>lv(o,e,p.shape,r,i,l,s)}}},{kernelName:e3,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[n,r]=t,i={x:n,filter:r,dy:e},s={x:n,filter:r,dy:e};return{x:()=>n_.runKernel(e9,i,a),filter:()=>n_.runKernel(e5,s,a)}}},{kernelName:e7,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=rG(a.shape,n.shape);return{a:()=>{let t=rk(e,rb(n,"float32")),i=rW(a.shape,r);return i.length>0?iM(su(t,i),a.shape):t},b:()=>{let t=rN(e,rb(a,"float32")),i=rW(n.shape,r);return i.length>0&&(t=iM(su(t,i),n.shape)),s_(rk(t,rb(rS(n),"float32")))}}}},{kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t,n={dy:e,y:a};return{x:()=>n_.runKernel(tt,n)}}},{kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,n=rN(i7(s_(rS(a))),2/Math.sqrt(Math.PI));return{x:()=>rN(e,n)}}},{kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(e,a)}}},{kernelName:tn,inputsToSave:["input"],gradFunc:(e,t)=>{let[a]=t;return{input:()=>iM(e,a.shape)}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(e,i7(a))}}},{kernelName:to,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=rG(a.shape,n.shape);return{a:()=>{let t=rk(e,rb(n,"float32")),i=rW(a.shape,r);return i.length>0?iM(su(t,i),a.shape):t},b:()=>{let t=rN(e,rb(a,"float32")),i=rW(n.shape,r);return i.length>0&&(t=iM(su(t,i),n.shape)),s_(rk(t,rb(rS(n),"float32")))}}}},{kernelName:tl,gradFunc:e=>({x:()=>rT(e)})},{kernelName:tp,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,a)=>{let{varianceEpsilon:n}=a,[r,i,s,l]=t,o=null==l?r$(1):l,p=rW(i.shape,r.shape),d=[];if(1===i.rank){for(let e=0;e<r.shape.length-1;++e)d.push(r.shape[e]);d.push(1)}let u=rB(r,i),h=rN(e,o),m=o9(rw(s,r$(n))),c=rN(rN(rN(m,m),m),r$(-.5));return{x:()=>1===i.rank?iM(rN(rN(e,st(iM(m,[1,1,1,i.shape[0]]),d)),o),r.shape):iM(rN(rN(e,m),o),r.shape),mean:()=>{let e=rN(rN(m,r$(-1)),h);return 1===i.rank&&(e=su(e,p)),iM(e,i.shape)},variance:()=>{let e=rN(rN(c,u),h);return 1===i.rank&&(e=su(e,p)),iM(e,i.shape)},scale:()=>{let t=rN(u,m),a=rN(e,t);return 1===i.rank&&(a=su(a,p)),iM(a,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=su(t,p)),iM(t,i.shape)}}}},{kernelName:td,inputsToSave:["x","indices"],gradFunc:(e,t,a)=>{let[n,r]=t,{axis:i,batchDims:s}=a,l=q(i,n.shape)[0],o=(e,t,a)=>()=>{let n=e.shape,r=t.size,s=n.slice(0,l),o=s.length,p=n.slice(i,n.length).slice(1),d=p.length,u=o8(0,o),h=o8(o+1,o+1+d),m=iM(a,o7([s,[r],p])),c=iM(t,[r]),f=o7([[o],u,h]),g=o5(ln(m,f),c,e.shape[l]);return ln(g,sy(f))};if(1!==s)return{x:o(n,r,e),indices:()=>r};{let t=n.shape[0],a=n.split(t,0);return{x:()=>s6(a.map((t,a)=>o(t,r.slice(a,1),e.slice(a,1))())).reshape(n.shape),indices:()=>r}}}},{kernelName:tm,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t;return{a:()=>rT(a),b:()=>rT(n)}}},{kernelName:tc,gradFunc:e=>({x:()=>rb(e,"float32")})},{kernelName:tv,gradFunc:e=>({x:()=>rT(e)})},{kernelName:tb,gradFunc:e=>({x:()=>rT(e)})},{kernelName:ty,gradFunc:e=>({x:()=>rT(e)})},{kernelName:tw,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{alpha:r}=a,i=si(n,0);return{x:()=>le(i,e,rN(e,r))}}},{kernelName:tI,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rw(a,1))}}},{kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rb(a,"float32"))}}},{kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[n]=t,{axis:r}=a;return{logits:()=>{let t=i7(n);return rB(e,rN(su(e,r,!0),t))}}}},{kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[n,r]=t,{depthRadius:i,bias:s,alpha:l,beta:o}=a;return{x:()=>pe(n,r,e,i,s,l,o)}}},pa,pa,{kernelName:tE,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t;return{a:()=>rN(e,rb(ss(a,n),"float32")),b:()=>rN(e,rb(lj(a,n),"float32"))}}},{kernelName:tA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[n,r]=t,{filterSize:i,strides:s,pad:l,dimRoundingMode:o}=a;return{x:()=>pn(e,n,r,i,s,l,o)}}},{kernelName:t_,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[n,r]=t,{filterSize:i,strides:s,pad:l}=a;return{x:()=>pr(e,n,r,i,s,l)}}},{kernelName:tO,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{axis:r}=a,i=q(r,n.shape),s=P(sf(n.shape,i)[1]);return{x:()=>{let t=n.shape.slice();return i.forEach(e=>{t[e]=1}),rk(rN(iM(e,t),sF(n.shape,"float32")),s)}}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let{axis:n}=a,[r,i]=t,s=q(n,r.shape),l=pt(e,i,r,s);return{x:()=>l.x()}}},{kernelName:tL,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t;return{a:()=>rN(e,rb(lU(a,n),"float32")),b:()=>rN(e,rb(si(a,n),"float32"))}}},{kernelName:tM,inputsToSave:["x"],gradFunc:(e,t,a)=>{let n=t[0],{paddings:r}=a,i=r.map(e=>e[0]);return{x:()=>sX(e,i,n.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=rG(a.shape,n.shape);return{a:()=>{let t=rW(a.shape,r);return t.length>0?iM(su(e,t),a.shape):e},b:()=>{let t=rN(e,s_(sn(rk(a,n)))),i=rW(n.shape,r);return i.length>0?iM(su(t,i),n.shape):t}}}},{kernelName:tB,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=rG(a.shape,n.shape);return{a:()=>{let t=rN(e,rb(n,"float32")),i=rW(a.shape,r);return i.length>0?iM(su(t,i),a.shape):t},b:()=>{let t=rN(e,rb(a,"float32")),i=rW(n.shape,r);return i.length>0?iM(su(t,i),n.shape):t}}}},{kernelName:"Neg",gradFunc:e=>({x:()=>s_(e)})},{kernelName:tH,inputsToSave:["indices"],gradFunc:(e,t)=>{let a=t[0];return{indices:()=>sD(a.shape,"float32")}}},{kernelName:tG,gradFunc:e=>({x:()=>rT(e)})},{kernelName:tj,saveAllInputs:!0,gradFunc:(e,t,a)=>{let{axis:n}=a;return s7(e,n).map(e=>()=>e)}},pi,pi,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[a,n,r]=t,i=rG(a.shape,n.shape);return{a:()=>{let t=rb(n,"float32"),r=rN(e,rN(t,rV(a,rB(t,r$(1))))),s=rW(a.shape,i);return s.length>0&&(r=su(r,s)),iM(r,a.shape)},b:()=>{let t=rN(e,rN(r,le(si(a,0),so(a),rT(a)))),s=rW(n.shape,i);return s.length>0&&(t=su(t,s)),iM(t,n.shape)}}}},{kernelName:tK,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[a,n]=t,r=si(a,0);return{x:()=>le(r,e,rN(e,n)),alpha:()=>{let t=le(r,rT(e),rN(e,a)),i=rW(n.shape,e.shape);return i.length>0&&(t=su(t,i)),iM(t,n.shape)}}}},{kernelName:tX,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{axis:r}=a,i=[];return i=null==r?n.shape.map((e,t)=>t):"number"==typeof r?[r]:r,{x:()=>(function(e,t,a){let n=e.shape.length,r=n-a.length,i=sb(a,n),s=e;null!=i&&(s=ln(e,i));let l=s.shape.slice(),o=l.splice(n-a.length,a.length).reduce((e,t)=>e*t,1);l.push(o);let p=function(e,t,a){let n=e.shape.slice();n[a]=1;let r=iM(t,n),i=rN(ps(e,a,!0,!1),ps(e,a,!0,!0));return rN(r,i)}(s.reshape(l),t,r);return p=p.reshape(s.shape),null!=i&&(p=ln(p,sy(i))),p})(n,e,i)}}},{kernelName:t0,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,s_(rS(a)))}}},{kernelName:t8,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,n=rN(lU(a,6),lu(a));return{x:()=>rN(e,rb(n,"float32"))}}},{kernelName:t2,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(e,rb(lu(a),"float32"))}}},{kernelName:t4,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>iM(e,a.shape)}}},{kernelName:t9,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[n]=t,r={dy:e,images:n};return{images:()=>n_.runKernel(t5,r,a)}}},{kernelName:t6,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[n]=t,r={dy:e,images:n};return{images:()=>n_.runKernel(t3,r,a)}}},{kernelName:t7,gradFunc:(e,t,a)=>{let{dims:n}=a,r=q(n,e.shape);return{x:()=>sH(e,r)}}},{kernelName:ae,gradFunc:e=>({x:()=>rT(e)})},{kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>s_(rk(e,rN(rV(a,1.5),2)))}}},{kernelName:ai,inputsToSave:["condition"],gradFunc:(e,t)=>{let[a]=t;return{condition:()=>rb(rT(a),"float32"),t:()=>rN(e,rb(a,e.dtype)),e:()=>rN(e,rb(pl(a),e.dtype))}}},{kernelName:as,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let t=si(a,r$(0)),n=r$(od);return le(t,rN(e,r$(ou)),rN(rN(e,n),i7(rb(a,"float32"))))}}}},{kernelName:ad,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(e,rN(a,rB(r$(1),a)))}}},{kernelName:ap,gradFunc:e=>({x:()=>rT(e)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(po(rb(a,"float32")),e)}}},{kernelName:ao,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(pp(rb(a,"float32")),e)}}},{kernelName:al,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{begin:r,size:i}=a,s=n.shape,[l,o]=ig(n,r,i),p=[];for(let t=0;t<e.rank;t++)p.push([l[t],s[t]-l[t]-o[t]]);return{x:()=>sL(e,p)}}},{kernelName:af,outputsToSave:[!0],gradFunc:(e,t,a)=>{let[n]=t,{dim:r}=a,i=rN(e,n);return{logits:()=>rB(i,rN(su(i,[r],!0),n))}}},{kernelName:au,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(e,sK(a))}}},pu,pu,ph,ph,{kernelName:ah,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rN(rI(rb(a,"float32")),2))}}},{kernelName:ax,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=r$(2);return{a:()=>rN(e,rN(r,rB(a,n))),b:()=>rN(e,rN(r,rB(n,a)))}}},{kernelName:ak,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(e,rN(rb(a,"float32"),2))}}},{kernelName:aM,gradFunc:e=>({x:()=>rT(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,n]=t,r=rG(a.shape,n.shape);return{a:()=>{let t=e,n=rW(a.shape,r);return n.length>0&&(t=su(t,n)),iM(t,a.shape)},b:()=>{let t=e,a=rW(n.shape,r);return a.length>0&&(t=su(t,a)),iM(s_(t),n.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,r=n.shape.slice(),{axis:i}=a;q(i,n.shape).forEach(e=>{r[e]=1});let s=rN(iM(e,r),sF(n.shape,"float32"));return{x:()=>s}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rk(e,rS(po(a)))}}},{kernelName:a$,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>rN(rB(r$(1),rS(a)),e)}}},{kernelName:aE,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[n]=t,{reps:r}=a;return{x:()=>{let t=rT(n);if(1===n.rank)for(let a=0;a<r[0];++a)t=rw(t,sX(e,[a*n.shape[0]],[n.shape[0]]));else if(2===n.rank)for(let a=0;a<r[0];++a)for(let i=0;i<r[1];++i)t=rw(t,sX(e,[a*n.shape[0],i*n.shape[1]],[n.shape[0],n.shape[1]]));else if(3===n.rank)for(let a=0;a<r[0];++a)for(let i=0;i<r[1];++i)for(let s=0;s<r[2];++s)t=rw(t,sX(e,[a*n.shape[0],i*n.shape[1],s*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(4===n.rank)for(let a=0;a<r[0];++a)for(let i=0;i<r[1];++i)for(let s=0;s<r[2];++s)for(let l=0;l<r[3];++l)t=rw(t,sX(e,[a*n.shape[0],i*n.shape[1],s*n.shape[2],l*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return t}}}},{kernelName:aA,gradFunc:(e,t,a)=>{let{perm:n}=a,r=sy(n);return{x:()=>ln(e,r)}}},{kernelName:aF,gradFunc:(e,t,a)=>{let{axis:n}=a;return{value:()=>s6(e,n)}}},{kernelName:aO,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>(function(e,t){let a=sr(e,rH(t,rT(t))),n=ss(t,r$(0,"int32")),r=a.rank-n.rank;for(let e=0;e<r;++e)n=se(n,e+1);n=sk(n,sF(a.shape,"bool"));let i=rT(a);return le(n,a,i)})(e,a)}}},{kernelName:aL,gradFunc:e=>({x:()=>rT(e)})}])!function(e){let{kernelName:t}=e;aj.has(t)&&ef.getBool("DEBUG")&&aW(`Overriding the gradient for '${t}'`),aj.set(t,e)}(e);ng().prototype.abs=function(){return this.throwIfDisposed(),rP(this)};let pm=nB({acos_:function(e){let t=nM(e,"x","acos");return n_.runKernel(eb,{x:t})}});ng().prototype.acos=function(){return this.throwIfDisposed(),pm(this)};let pc=nB({acosh_:function(e){let t=nM(e,"x","acosh");return n_.runKernel(ey,{x:t})}});ng().prototype.acosh=function(){return this.throwIfDisposed(),pc(this)},ng().prototype.add=function(e){return this.throwIfDisposed(),rw(this,e)},ng().prototype.all=function(e,t){return this.throwIfDisposed(),iy(this,e,t)},ng().prototype.any=function(e,t){return this.throwIfDisposed(),iw(this,e,t)},ng().prototype.argMax=function(e){return this.throwIfDisposed(),ix(this,e)};let pf=nB({argMin_:function(e,t=0){let a=nM(e,"x","argMin");return n_.runKernel(ek,{x:a},{axis:t})}});ng().prototype.argMin=function(e){return this.throwIfDisposed(),pf(this,e)},ng().prototype.asScalar=function(){return this.throwIfDisposed(),V(1===this.size,()=>"The array must have only 1 element."),iM(this,[])},ng().prototype.asType=function(e){return this.throwIfDisposed(),rb(this,e)},ng().prototype.as1D=function(){return this.throwIfDisposed(),iM(this,[this.size])},ng().prototype.as2D=function(e,t){return this.throwIfDisposed(),iM(this,[e,t])},ng().prototype.as3D=function(e,t,a){return this.throwIfDisposed(),iM(this,[e,t,a])},ng().prototype.as4D=function(e,t,a,n){return this.throwIfDisposed(),iM(this,[e,t,a,n])},ng().prototype.as5D=function(e,t,a,n,r){return this.throwIfDisposed(),iM(this,[e,t,a,n,r])};let pg=nB({asin_:function(e){let t=nM(e,"x","asin");return n_.runKernel(eN,{x:t})}});ng().prototype.asin=function(){return this.throwIfDisposed(),pg(this)};let pv=nB({asinh_:function(e){let t=nM(e,"x","asinh");return n_.runKernel(eI,{x:t})}});ng().prototype.asinh=function(){return this.throwIfDisposed(),pv(this)};let pb=nB({atan_:function(e){let t=nM(e,"x","atan");return n_.runKernel(eS,{x:t})}});ng().prototype.atan=function(){return this.throwIfDisposed(),pb(this)};let py=nB({atan2_:function(e,t){let a=nM(e,"a","atan2"),n=nM(t,"b","atan2");[a,n]=nN(a,n);let r={a:a,b:n};return n_.runKernel(eC,r)}});ng().prototype.atan2=function(e){return this.throwIfDisposed(),py(this,e)};let pw=nB({atanh_:function(e){let t=nM(e,"x","atanh");return n_.runKernel(eT,{x:t})}});ng().prototype.atanh=function(){return this.throwIfDisposed(),pw(this)},ng().prototype.avgPool=function(e,t,a,n){return this.throwIfDisposed(),iV(this,e,t,a,n)},ng().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),pd(this,e,t)},ng().prototype.batchNorm=function(e,t,a,n,r){return this.throwIfDisposed(),iz(this,e,t,a,n,r)},ng().prototype.broadcastTo=function(e){return this.throwIfDisposed(),iG(this,e)},ng().prototype.cast=function(e){return this.throwIfDisposed(),rb(this,e)};let px=nB({ceil_:function(e){let t=nM(e,"x","ceil","float32");return n_.runKernel(eV,{x:t})}});ng().prototype.ceil=function(){return this.throwIfDisposed(),px(this)},ng().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),iH(this,e,t)},ng().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof nf&&(e=[e]),ij([this,...e],t)},ng().prototype.conv1d=function(e,t,a,n,r,i){return this.throwIfDisposed(),iZ(this,e,t,a,n,r,i)},ng().prototype.conv2dTranspose=function(e,t,a,n,r){return this.throwIfDisposed(),i1(this,e,t,a,n,r)},ng().prototype.conv2d=function(e,t,a,n,r,i){return this.throwIfDisposed(),iJ(this,e,t,a,n,r,i)},ng().prototype.cos=function(){return this.throwIfDisposed(),po(this)},ng().prototype.cosh=function(){return this.throwIfDisposed(),pp(this)},ng().prototype.cumprod=function(e,t,a){return this.throwIfDisposed(),ps(this,e,t,a)},ng().prototype.cumsum=function(e,t,a){return this.throwIfDisposed(),o3(this,e,t,a)};let pk=nB({depthToSpace_:function(e,t,a="NHWC"){let n=nM(e,"x","depthToSpace","float32"),r="NHWC"===a?n.shape[1]:n.shape[2],i="NHWC"===a?n.shape[2]:n.shape[3],s="NHWC"===a?n.shape[3]:n.shape[1];return V(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),V(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${n.shape}`),V(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${n.shape}`),V(s%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${n.shape}`),n_.runKernel(e1,{x:n},{blockSize:t,dataFormat:a})}});ng().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),pk(this,e,t)},ng().prototype.depthwiseConv2d=function(e,t,a,n,r,i){return this.throwIfDisposed(),i3(this,e,t,a,n,r,i)};let pN=nB({dilation2d_:function(e,t,a,n,r=[1,1],i="NHWC"){let s=nM(e,"x","dilation2d"),l=nM(t,"filter","dilation2d");V(3===s.rank||4===s.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),V(3===l.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),V("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let o=s,p=!1;3===s.rank&&(o=iM(s,[1,s.shape[0],s.shape[1],s.shape[2]]),p=!0),V(o.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${o.shape[3]} vs ${l.shape[2]}`);let d={x:o,filter:l},u=n_.runKernel(e3,d,{strides:a,pad:n,dilations:r});return p?iM(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});ng().prototype.dilation2d=function(e,t,a,n,r){return this.throwIfDisposed(),pN(this,e,t,a,n,r)};let pI=nB({divNoNan_:function(e,t){let a=nM(e,"a","div"),n=nM(t,"b","div");[a,n]=nN(a,n);let r=rk(a,n),i=rT(r);return le(i5(n,i),i,r)}});ng().prototype.divNoNan=function(e){return this.throwIfDisposed(),pI(this,e)},ng().prototype.div=function(e){return this.throwIfDisposed(),rk(this,e)};let pS=nB({dot_:function(e,t){let a=nM(e,"t1","dot"),n=nM(t,"t2","dot");V((1===a.rank||2===a.rank)&&(1===n.rank||2===n.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${a.rank} and ${n.rank}.`);let r=1===a.rank?a.size:a.shape[1],i=1===n.rank?n.size:n.shape[0];if(V(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),1===a.rank&&1===n.rank){let e=sN(iM(a,[1,-1]),iM(n,[-1,1]));return iM(e,[])}if(1===a.rank&&2===n.rank){let e=sN(iM(a,[1,-1]),iM(n,[n.shape[0],n.shape[1]]));return iM(e,[e.size])}if(2!==a.rank||1!==n.rank)return sN(a,iM(n,[n.shape[0],n.shape[1]]));{let e=sN(a,iM(n,[-1,1]));return iM(e,[e.size])}}});ng().prototype.dot=function(e){return this.throwIfDisposed(),pS(this,e)},ng().prototype.elu=function(){return this.throwIfDisposed(),i9(this)},ng().prototype.equal=function(e){return this.throwIfDisposed(),i5(this,e)},ng().prototype.erf=function(){return this.throwIfDisposed(),i8(this)};let pT=nB({euclideanNorm_:function(e,t=null,a=!1){return lq(e,"euclidean",t,a)}});ng().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),pT(this,e,t)},ng().prototype.exp=function(){return this.throwIfDisposed(),i7(this)},ng().prototype.expandDims=function(e){return this.throwIfDisposed(),se(this,e)};let pC=nB({expm1_:function(e){let t=nM(e,"x","expm1");return n_.runKernel(tr,{x:t})}});ng().prototype.expm1=function(){return this.throwIfDisposed(),pC(this)},ng().prototype.fft=function(){return this.throwIfDisposed(),li(this)},ng().prototype.flatten=function(){return this.throwIfDisposed(),iM(this,[this.size])},ng().prototype.floor=function(){return this.throwIfDisposed(),sn(this)},ng().prototype.floorDiv=function(e){return this.throwIfDisposed(),rx(this,e)},ng().prototype.gather=function(e,t,a){return this.throwIfDisposed(),sr(this,e,t,a)},ng().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ss(this,e)},ng().prototype.greater=function(e){return this.throwIfDisposed(),si(this,e)},ng().prototype.ifft=function(){return this.throwIfDisposed(),ll(this)},ng().prototype.irfft=function(){return this.throwIfDisposed(),lo(this)};let p$=nB({isFinite_:function(e){let t=nM(e,"x","isFinite");return n_.runKernel(tv,{x:t})}});ng().prototype.isFinite=function(){return this.throwIfDisposed(),p$(this)};let pE=nB({isInf_:function(e){let t=nM(e,"x","isInf");return n_.runKernel(tb,{x:t})}});ng().prototype.isInf=function(){return this.throwIfDisposed(),pE(this)};let p_=nB({isNaN_:function(e){let t=nM(e,"x","isNaN");return n_.runKernel(ty,{x:t})}});ng().prototype.isNaN=function(){return this.throwIfDisposed(),p_(this)},ng().prototype.leakyRelu=function(e){return this.throwIfDisposed(),sl(this,e)},ng().prototype.lessEqual=function(e){return this.throwIfDisposed(),lU(this,e)},ng().prototype.less=function(e){return this.throwIfDisposed(),lj(this,e)};let pR=nB({localResponseNormalization_:function(e,t=5,a=1,n=1,r=.5){let i=nM(e,"x","localResponseNormalization");V(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),V(t%1==0,()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,l=!1;3===i.rank&&(l=!0,s=iM(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let o={x:s},p=n_.runKernel("LRN",o,{depthRadius:t,bias:a,alpha:n,beta:r});return l?iM(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});ng().prototype.localResponseNormalization=function(e,t,a,n){return this.throwIfDisposed(),pR(this,e,t,a,n)};let pA=nB({logSigmoid_:function(e){let t=nM(e,"x","logSigmoid");return rC(e=>({value:s_(s0(s_(e))),gradFunc:t=>rN(t,sK(s_(e)))}))(t)}});ng().prototype.logSigmoid=function(){return this.throwIfDisposed(),pA(this)},ng().prototype.logSoftmax=function(e){return this.throwIfDisposed(),sh(this,e)},ng().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),sx(this,e,t)},ng().prototype.log=function(){return this.throwIfDisposed(),so(this)},ng().prototype.log1p=function(){return this.throwIfDisposed(),sp(this)},ng().prototype.logicalAnd=function(e){return this.throwIfDisposed(),sk(this,e)},ng().prototype.logicalNot=function(){return this.throwIfDisposed(),pl(this)};let pD=nB({logicalOr_:function(e,t){let a=nM(e,"a","logicalOr","bool"),n=nM(t,"b","logicalOr","bool");return rG(a.shape,n.shape),n_.runKernel(tC,{a:a,b:n})}});ng().prototype.logicalOr=function(e){return this.throwIfDisposed(),pD(this,e)};let pF=nB({logicalXor_:function(e,t){let a=nM(e,"a","logicalXor","bool"),n=nM(t,"b","logicalXor","bool");return rG(a.shape,n.shape),sk(pD(e,t),pl(sk(e,t)))}});ng().prototype.logicalXor=function(e){return this.throwIfDisposed(),pF(this,e)},ng().prototype.matMul=function(e,t,a){return this.throwIfDisposed(),sN(this,e,t,a)},ng().prototype.maxPool=function(e,t,a,n){return this.throwIfDisposed(),sI(this,e,t,a,n)},ng().prototype.max=function(e,t){return this.throwIfDisposed(),sd(this,e,t)},ng().prototype.maximum=function(e){return this.throwIfDisposed(),rH(this,e)},ng().prototype.mean=function(e,t){return this.throwIfDisposed(),sT(this,e,t)},ng().prototype.min=function(e,t){return this.throwIfDisposed(),sC(this,e,t)},ng().prototype.minimum=function(e){return this.throwIfDisposed(),s$(this,e)};let pO=nB({mirrorPad_:function(e,t,a){V("reflect"===a||"symmetric"===a,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${a}.`);let n=nM(e,"x","mirrorPad");if(0===n.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");V(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let r=+("reflect"===a);for(let e=0;e<n.rank;e++)V(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),V(t[e][0]>=0&&t[e][0]<=n.shape[e]-r&&t[e][1]>=0&&t[e][1]<=n.shape[e]-r,()=>`Padding in dimension ${e} cannot be greater than or equal to ${n.shape[e]-r} or less than 0 for input of shape ${n.shape}`);return n_.runKernel(tM,{x:n},{paddings:t,mode:a})}});ng().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),pO(this,e,t)};let pL=nB({mod_:function(e,t){let a=nM(e,"a","mod"),n=nM(t,"b","mod");[a,n]=nN(a,n);let r={a:a,b:n};return n_.runKernel("Mod",r)}});ng().prototype.mod=function(e){return this.throwIfDisposed(),pL(this,e)},ng().prototype.mul=function(e){return this.throwIfDisposed(),rN(this,e)},ng().prototype.neg=function(){return this.throwIfDisposed(),s_(this)},ng().prototype.norm=function(e,t,a){return this.throwIfDisposed(),lq(this,e,t,a)},ng().prototype.notEqual=function(e){return this.throwIfDisposed(),sR(this,e)},ng().prototype.oneHot=function(e,t=1,a=0){return this.throwIfDisposed(),sA(this,e,t,a)},ng().prototype.onesLike=function(){return this.throwIfDisposed(),sO(this)},ng().prototype.pad=function(e,t){return this.throwIfDisposed(),sL(this,e,t)};let pM=nB({pool_:function(e,t,a,n,r,i,s){let l;null==r&&(r=[1,1]),null==i&&(i=1),0===n&&(n="valid");let o=nM(e,"x","maxPool"),p=o,d=!1;3===o.rank&&(d=!0,p=iM(o,[1,o.shape[0],o.shape[1],o.shape[2]])),V(iD(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);let u=iN(p.shape,t,i,r,n),h=[u.dilationHeight,u.dilationWidth];l="same"===n?function(e,t){let a=e.map((e,a)=>e+(e-1)*(t[a]-1)).map(e=>e-1),n=a.map(e=>Math.floor(e/2)),r=a.map((e,t)=>e-n[t]);return a.map((e,t)=>[n[t],r[t]])}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];let m=1===h[0]&&1===h[1],[c,f]=function(e,t,a){let n=a.map(e=>e[0]),r=a.map(e=>e[1]),i=e.concat(n,r),s=t.map((e,t)=>(e-i[t]%e)%e),l=r.map((e,t)=>e+s[t]);return[t.map((e,t)=>[n[t],l[t]]),t.map((e,t)=>[0,s[t]])]}([u.inHeight,u.inWidth],h,l),g=m?n:"valid",v=m?p:o1(p,h,c),b=("avg"===a?()=>iV(v,t,i,g,s):()=>sI(v,t,i,g,s))(),y=m?b:pd(b,h,f);return d?iM(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});ng().prototype.pool=function(e,t,a,n,r,i){return this.throwIfDisposed(),pM(this,e,t,a,n,r,i)},ng().prototype.pow=function(e){return this.throwIfDisposed(),rV(this,e)},ng().prototype.prelu=function(e){return this.throwIfDisposed(),sM(this,e)};let pV=nB({prod_:function(e,t=null,a=!1){let n=nM(e,"x","prod");"bool"===n.dtype&&(n=rb(n,"int32"));let r={x:n};return n_.runKernel(tX,r,{axis:t,keepDims:a})}});ng().prototype.prod=function(e,t){return this.throwIfDisposed(),pV(this,e,t)};let pB=nB({reciprocal_:function(e){let t=nM(e,"x","reciprocal");return n_.runKernel(t0,{x:t})}});ng().prototype.reciprocal=function(){return this.throwIfDisposed(),pB(this)},ng().prototype.relu=function(){return this.throwIfDisposed(),sG(this)},ng().prototype.relu6=function(){return this.throwIfDisposed(),ld(this)},ng().prototype.reshapeAs=function(e){return this.throwIfDisposed(),iM(this,e.shape)},ng().prototype.reshape=function(e){return this.throwIfDisposed(),iM(this,e)},ng().prototype.resizeBilinear=function(e,t,a){return this.throwIfDisposed(),lB(this,e,t,a)},ng().prototype.resizeNearestNeighbor=function(e,t,a){return this.throwIfDisposed(),lz(this,e,t,a)},ng().prototype.reverse=function(e){return this.throwIfDisposed(),sH(this,e)},ng().prototype.rfft=function(){return this.throwIfDisposed(),ls(this)},ng().prototype.round=function(){return this.throwIfDisposed(),lW(this)},ng().prototype.rsqrt=function(){return this.throwIfDisposed(),o9(this)},ng().prototype.selu=function(){return this.throwIfDisposed(),sj(this)},ng().prototype.separableConv2d=function(e,t,a,n,r,i){return this.throwIfDisposed(),sq(this,e,t,a,n,r,i)},ng().prototype.sigmoid=function(){return this.throwIfDisposed(),sK(this)};let pz=nB({sign_:function(e){let t=nM(e,"x","sign");return n_.runKernel(ap,{x:t})}});ng().prototype.sign=function(){return this.throwIfDisposed(),pz(this)},ng().prototype.sin=function(){return this.throwIfDisposed(),o4(this)},ng().prototype.sinh=function(){return this.throwIfDisposed(),o6(this)},ng().prototype.slice=function(e,t){return this.throwIfDisposed(),sX(this,e,t)},ng().prototype.softmax=function(e){return this.throwIfDisposed(),s1(this,e)},ng().prototype.softplus=function(){return this.throwIfDisposed(),s0(this)},ng().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),o1(this,e,t)},ng().prototype.split=function(e,t){return this.throwIfDisposed(),s2(this,e,t)},ng().prototype.sqrt=function(){return this.throwIfDisposed(),rI(this)},ng().prototype.square=function(){return this.throwIfDisposed(),rS(this)},ng().prototype.squaredDifference=function(e){return this.throwIfDisposed(),lY(this,e)},ng().prototype.squeeze=function(e){return this.throwIfDisposed(),s4(this,e)},ng().prototype.stack=function(e,t){return this.throwIfDisposed(),s6(e instanceof nf?[this,e]:[this,...e],t)},ng().prototype.step=function(e){return this.throwIfDisposed(),lu(this,e)};let pP=nB({stridedSlice_:function(e,t,a,n,r=0,i=0,s=0,l=0,o=0){let p=nM(e,"x","stridedSlice","string_or_numeric");return n_.runKernel(aI,{x:p},{begin:t,end:a,strides:n,beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:l,shrinkAxisMask:o})}});ng().prototype.stridedSlice=function(e,t,a,n,r,i,s,l){return this.throwIfDisposed(),pP(this,e,t,a,n,r,i,s,l)},ng().prototype.sub=function(e){return this.throwIfDisposed(),rB(this,e)},ng().prototype.sum=function(e,t){return this.throwIfDisposed(),su(this,e,t)};let pU=nB({tan_:function(e){let t=nM(e,"x","tan","float32");return n_.runKernel("Tan",{x:t})}});ng().prototype.tan=function(){return this.throwIfDisposed(),pU(this)},ng().prototype.tanh=function(){return this.throwIfDisposed(),s3(this)},ng().prototype.tile=function(e){return this.throwIfDisposed(),st(this,e)},ng().prototype.toBool=function(){return this.throwIfDisposed(),rb(this,"bool")},ng().prototype.toFloat=function(){return this.throwIfDisposed(),rb(this,"float32")},ng().prototype.toInt=function(){return this.throwIfDisposed(),rb(this,"int32")};let pW=nB({topk_:function(e,t=1,a=!0){let n=nM(e,"x","topk");if(0===n.rank)throw Error("topk() expects the input to be of rank 1 or higher");let r=n.shape[n.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let[i,s]=n_.runKernel(a_,{x:n},{k:t,sorted:a});return{values:i,indices:s}}});ng().prototype.topk=function(e,t){return this.throwIfDisposed(),pW(this,e,t)},ng().prototype.transpose=function(e){return this.throwIfDisposed(),ln(this,e)};let pG=nB({unique_:function(e,t=0){let a=nM(e,"x","unique","string_or_numeric");V(a.rank>0,()=>"The input tensor must be at least 1D");let[n,r]=n_.runKernel(aD,{x:a},{axis:t});return{values:n,indices:r}}});ng().prototype.unique=function(e){return this.throwIfDisposed(),pG(this,e)},ng().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),o5(this,e,t)},ng().prototype.unstack=function(e){return this.throwIfDisposed(),s7(this,e)},ng().prototype.where=function(e,t){return this.throwIfDisposed(),le(e,this,t)},ng().prototype.zerosLike=function(){return this.throwIfDisposed(),rT(this)};class pH extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pH.prototype)}}class pj extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pj.prototype)}}class pq extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pq.prototype)}}class pK extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pK.prototype)}}class pX extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pX.prototype)}}class pY{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function pJ(e,t){if(Array.isArray(e)){let a=[];for(let n=0;n<t;n++)a=a.concat(e);return a}{let a=Array(t);return a.fill(e),a}}function pZ(e,t){if(!e)throw new pX(t)}function pQ(e,t){let a=0;for(let n of e)n===t&&a++;return a}function p1(e){return 1===e.length?e[0]:e}function p0(e){return Array.isArray(e)?e:[e]}function p2(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function p4(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let p6={};function p3(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function p9(e,t={},a={},n="object",r=!1){if("string"==typeof e){let r;if(e in a)r=a[e];else if(e in p6)r=p6[e];else if(null==(r=t[e]))throw new pq(`Unknown ${n}: ${e}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}{let i,s;if(null==e.className||null==e.config)throw new pq(`${n}: Improper config format: ${JSON.stringify(e)}.
'className' and 'config' must set.`);let l=e.className;if(l in a?[i,s]=a[l]:l in p6?[i,s]=p6.className:l in t&&([i,s]=t[l]),null==i)throw new pq(`Unknown ${n}: ${l}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=s){let t={};for(let e of Object.keys(p6))t[e]=p6[e];for(let e of Object.keys(a))t[e]=a[e];e.config.customObjects=t;let n=Object.assign({},p6);for(let e of Object.keys(a))p6[e]=a[e];!function e(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>e(t));else for(let a of Object.keys(t)){let n=t[a];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?e(n):t[a]=n.value)}}(e.config);let l=s(i,e.config,a,r);return p6=Object.assign({},n),l}{let t=Object.assign({},p6);for(let e of Object.keys(a))p6[e]=a[e];let n=new i(e.config);return p6=Object.assign({},t),n}}}function p5(e,t){return -1*(e<t?-1:+(e>t))}function p8(e){if(null==e)return e;let t=[];for(let a of e)-1===t.indexOf(a)&&t.push(a);return t}function p7(e,t,a){if(null!=a&&0>e.indexOf(a))throw new pq(`${a} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function de(e,t,a=0,n=1/0){return pZ(a>=0),pZ(n>=a),Array.isArray(e)&&e.length>=a&&e.length<=n&&e.every(e=>typeof e===t)}function dt(e,t){Array.isArray(e)?(V(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,a)=>dt(e,`element ${a+1} of ${t}`))):V(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}(e)}.`)}function da(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let dn=0,dr={};function di(e=""){return e in dr||(dr[e]=0),dr[e]+=1,e+dr[e].toString()}let ds=["channelsFirst","channelsLast"],dl=["nearest","bilinear"],dp=["valid","same","causal"],dd=["max","avg"],du=["sum","mul","concat","ave"],dh=new Map;function dm(e){p7(ds,"DataFormat",e)}function dc(e){p7(dp,"PaddingMode",e)}function df(e){p7(dd,"PoolMode",e)}let dg=[];function dv(e,t){dg.push(e);try{let e=t();return dg.pop(),e}catch(e){throw dg.pop(),e}}function db(e){if(!dx(e))throw Error("Not a valid tensor name: '"+e+"'");return(0===dg.length?"":dg.join("/")+"/")+e}function dy(e){if(!dx(e))throw Error("Not a valid tensor name: '"+e+"'");dh.has(e)||dh.set(e,0);let t=dh.get(e);if(dh.set(e,dh.get(e)+1),!(t>0))return e;{let a=`${e}_${t}`;return dh.set(a,1),a}}let dw=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function dx(e){return!!e.match(dw)}function dk(e,t,a){null==t&&(t=0),null==a&&(a=e.length);let n=1;for(let r=t;r<a;++r)n*=e[r];return n}function dN(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let a=0;a<e.length;a++){let n=e[a];n<t&&(t=n)}return t}function dI(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let a=0;a<e.length;a++){let n=e[a];n>t&&(t=n)}return t}function dS(e,t){if(t<e)throw new pq(`end (${t}) < begin (${e}) is forbidden.`);let a=[];for(let n=e;n<t;++n)a.push(n);return a}function dT(){return null==l&&(l=n_.backend.epsilon()),l}function dC(){return"channelsLast"}function d$(e,t=-1){let a=e.shape.slice();return t<0&&(t=a.length+t+1),a.splice(t,0,1),iM(e,a)}function dE(e,t,a){return nj(()=>{switch(e.rank){case 1:return sY(e,t,a);case 2:return sJ(e,[t,0],[a,e.shape[1]]);case 3:return sZ(e,[t,0,0],[a,e.shape[1],e.shape[2]]);case 4:return sQ(e,[t,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3]]);case 5:return sX(e,[t,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return sX(e,[t,0,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new pq(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function d_(e,t,a){return nj(()=>{switch(e.rank){case 1:return sY(e,t,a);case 2:return sJ(e,[0,t],[e.shape[0],a]);case 3:return sZ(e,[0,0,t],[e.shape[0],e.shape[1],a]);case 4:return sQ(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],a]);default:throw new pq(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function dR(e,t,a,n){return nj(()=>{switch(e.rank){case 1:return sY(e,t,a);case 2:switch(n){case 1:return dE(e,t,a);case 2:return d_(e,t,a);default:throw new pq(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return dE(e,t,a);case 2:return sZ(e,[0,t,0],[e.shape[0],a,e.shape[2]]);case 3:return d_(e,t,a);default:throw new pq(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return dE(e,t,a);case 2:return sQ(e,[0,t,0,0],[e.shape[0],a,e.shape[2],e.shape[3]]);case 3:return sQ(e,[0,0,t,0],[e.shape[0],e.shape[1],a,e.shape[3]]);case 4:return d_(e,t,a);default:throw new pq(`The axis is not within the rank of the tensor ${n}`)}default:throw new pq(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function dA(e,t=-1){let a;return t<0&&(t=0!==(a=e[0].rank)?a:0),t===e[0].rank&&(t=-1),ij(e,t)}function dD(e,t){switch(e.rank){case 1:return iq([e,t]);case 2:return iK([e,t],0);case 3:return iX([e,t],0);case 4:return iY([e,t],0);default:throw new pq(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function dF(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new pq(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return st(e,t)}function dO(e,t=0,a=1,n,r){return sP(e,t,a,n,r)}function dL(e,t,a,n){if(e.rank<2||t.rank<2)throw new pK(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new pK(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return ly({a:e,b:t,transposeA:!1,transposeB:!1,bias:n?dV(e.rank,n,dC()):null,activation:a});{let r=e.shape.slice();e=iM(e,[-1,r.pop()]);let i=t.shape.slice(),s=i.pop(),l=i.pop(),o=[...i,s],p=Array.from({length:t.rank},(e,a)=>0===a?t.rank-2:a<=t.rank-2?a-1:a);t=iM(ln(t,p),[l,-1]);let d=[...r,...o];return iM(ly({a:e,b:t,transposeA:!1,transposeB:!1,bias:n?dV(e.rank,n,dC()):null,activation:a}),d)}}function dM(e,t,a){return nj(()=>sr(e,t=Array.isArray(t)?s9(t,"int32"):rb(t,"int32"),a))}function dV(e,t,a){let n=t.shape;if(1!==t.rank&&t.rank!==e)throw new pq(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===a)if(1===n.length)return iM(t,[1,n[0],1,1,1]);else return iM(t,[1,n[3],n[0],n[1],n[2]]);else if("channelsLast"===a)if(1===n.length)return iM(t,[1,1,1,1,n[0]]);else return iM(t,[1].concat(n))}else if(4===e){if("channelsFirst"===a)if(1===n.length)return iM(t,[1,n[0],1,1]);else return iM(t,[1,n[2],n[0],n[1]]);else if("channelsLast"===a)if(1===n.length)return iM(t,[1,1,1,n[0]]);else return iM(t,[1].concat(n))}else if(3===e){if("channelsFirst"===a)if(1===n.length)return iM(t,[1,n[0],1]);else return iM(t,[1,n[1],n[0]]);else if("channelsLast"===a)if(1===n.length)return iM(t,[1,1,n[0]]);else return iM(t,[1].concat(n))}else if(e<3)return t;throw new pq(`Unsupported input rank by biasAdd: ${t.rank}`)}function dB(e,t,a){return nj(()=>(null==a&&(a=dC()),dm(a),rw(e,dV(e.rank,t,a))))}function dz(e,t,a=!1){return a?e():t()}let dP=["fanIn","fanOut","fanAvg"],dU=["normal","uniform","truncatedNormal"];class dW extends rR{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class dG extends dW{apply(e,t){return sD(e,t)}}dG.className="Zeros",rD(dG);class dH extends dW{apply(e,t){return sF(e,t)}}dH.className="Ones",rD(dH);class dj extends dW{constructor(e){if(super(),"object"!=typeof e)throw new pq(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new pq(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return nj(()=>rN(r$(this.value),sF(e,t)))}getConfig(){return{value:this.value}}}dj.className="Constant",rD(dj);class dq extends dW{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return sU(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}dq.className="RandomUniform",rD(dq);class dK extends dW{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new pK(`randomNormal does not support dType ${t}.`);return dO(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}dK.className="RandomNormal",rD(dK);class dX extends dW{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new pK(`truncatedNormal does not support dType ${t}.`);return s8(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}dX.className="TruncatedNormal",rD(dX);class dY extends dW{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return nj(()=>{if(2===e.length&&e[0]===e[1])return rN(this.gain,sa(e[0]));throw new pq("Identity matrix initializer can only be used for 2D square matrices.")})}getConfig(){return{gain:this.gain}}}dY.className="Identity",rD(dY);class dJ extends dW{constructor(e){if(super(),e.scale<0)throw new pq(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,p7(dP,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,p7(dU,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){let a=function(e,t="channelsLast"){let a,n;if(dm(t),2===e.length)a=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=dk(e,2);a=e[1]*t,n=e[0]*t}else if("channelsLast"===t){let t=dk(e,0,e.length-2);a=e[e.length-2]*t,n=e[e.length-1]*t}}else{let t=dk(e);a=Math.sqrt(t),n=Math.sqrt(t)}return[a,n]}(e),n=a[0],r=a[1],i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,n):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(n+r)/2),"normal"===this.distribution){let a=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new pK(`${this.getClassName()} does not support dType ${t}.`);return s8(e,0,a,t,this.seed)}{let a=Math.sqrt(3*i);return sU(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}dJ.className="VarianceScaling",rD(dJ);class dZ extends dJ{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dJ.className}}dZ.className="GlorotUniform",rD(dZ);class dQ extends dJ{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dJ.className}}dQ.className="GlorotNormal",rD(dQ);class d1 extends dJ{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dJ.className}}d1.className="HeNormal",rD(d1);class d0 extends dJ{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dJ.className}}d0.className="HeUniform",rD(d0);class d2 extends dJ{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dJ.className}}d2.className="LeCunNormal",rD(d2);class d4 extends dJ{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dJ.className}}d4.className="LeCunUniform",rD(d4);class d6 extends dW{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return nj(()=>{if(e.length<2)throw new pK("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw TypeError(`Unsupported data type ${t}.`);let a=P(e.slice(0,-1)),n=e[e.length-1],r=a*n;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);let i=dO([Math.max(n,a),Math.min(n,a)],0,1,t,this.seed),s=lZ.qr(i,!1),l=s[0];return l=rN(l,s[1].flatten().stridedSlice([0],[Math.min(n,a)*Math.min(n,a)],[Math.min(n,a)+1]).sign()),a<n&&(l=l.transpose()),rN(r$(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}d6.className="Orthogonal",rD(d6);let d3={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function d9(e,t={}){return p9(e,rA.getMap().classNameMap,t,"initializer")}function d5(e){if("string"==typeof e){let t=e in d3?d3[e]:e;if("GlorotNormal"===t)return new dQ;{if("GlorotUniform"===t)return new dZ;if("HeNormal"===t)return new d1;if("HeUniform"===t)return new d0;if("LeCunNormal"===t)return new d2;if("LeCunUniform"===t)return new d4;let e={};return e.className=t,e.config={},d9(e)}}return e instanceof dW?e:d9(e)}function d8(e){return Array.isArray(e)&&Array.isArray(e[0])}function d7(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function ue(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new pq(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ut(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))return e;if(1===e.length)return e[0];throw new pq(`Expected exactly 1 Shape; got ${e.length}`)}function ua(e){let t=0;for(let a of e)0===a.shape.length?t+=1:t+=a.shape.reduce((e,t)=>e*t);return t}let un="Variable";class ur{constructor(e,t="float32",a=un,n=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=dn++,a=null==a?un:a,this.originalName=db(a),this.name=dy(this.originalName),this.trainable_=n,this.constraint=r,this.val=function(e,t=!0,a,n){return n_.makeVariable(e,t,a,n)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ui(e){return e.map(e=>e.read())}function us(e){e.forEach(e=>{e[0].write(e[1])})}class ul{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class uo{constructor(e,t,a,n,r,i,s){this.dtype=e,this.shape=t,this.sourceLayer=a,this.inputs=n,this.callArgs=r,this.outputTensorIndex=s,this.id=dn++,null!=i&&(this.originalName=db(i),this.name=dy(this.originalName)),this.rank=t.length}}let up=0;class ud{constructor(e,t){for(let a of(this.callArgs=t,this.id=up++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes,e.inboundLayers))null!=a&&a.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let uu=0;class uh extends rR{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=uu++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=p2(e)+"_"+di(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let a=null;null!=e.batchSize&&(a=e.batchSize),t=[a].concat(e.inputShape)}this.batchInputShape=t;let a=e.dtype;null==a&&(a=e.inputDType),null==a&&(a="float32"),this.dtype=a}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new pj(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new pq(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return p1(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return p1(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new pH(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new pH(`Layer ${this.name} is not connected, no input to return.`);return p1(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new pH(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new pH(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return p1(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=p0(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let a=p0(this.inputSpec);if(t.length!==a.length)throw new pq(`Layer ${this.name} expects ${a.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){let n=t[e],r=a[e];if(null==r)continue;let i=n.rank;if(null!=r.ndim&&i!==r.ndim)throw new pq(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new pq(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new pq(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&n.dtype!==r.dtype)throw new pq(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${n.dtype}.`);if(r.axes){let t=n.shape;for(let a in r.axes){let n=Number(a),i=r.axes[a],s=n>=0?t[n]:t[t.length+n];if(null!=i&&-1===[i,null].indexOf(s))throw new pq(`Input ${e} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){let a=r.shape[t],i=n.shape[t];if(null!=a&&null!=i&&a!==i)throw new pq(`Input ${e} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${n.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let a=p0(e),n=function(e){let t=!0;for(let a of p0(e))if(!(a instanceof uo)){t=!1;break}return t}(e),r=function(e){let t=!0;for(let a of p0(e))if(a instanceof uo){t=!1;break}return t}(e);if(n===r)throw new pq("Arguments to apply() must be all SymbolicTensors or all Tensors");return dv(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let a of p0(e))t.push(a.shape);this.build(p1(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let n=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,n);let r=p0(n),i=[];for(let e of r)-1!==a.indexOf(e)&&(e=e.clone()),i.push(e);if(n=p1(i),null!=this.activityRegularizer)throw new pK("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}{var n;let a,r=function(e){e=p0(e);let t=[];for(let a of e)t.push(a.shape);return p1(t)}(e),i=this.computeOutputShape(r),s=(n=0,"float32");if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),a=null!=i&&i.length>0&&Array.isArray(i[0])?i.map((a,n)=>new uo(s,a,this,p0(e),t,this.name,n)):new uo(s,i,this,p0(e),t,this.name),this.addInboundNode(e,a,null,null,r,i,t),this._refCount++,null!=this.activityRegularizer)throw new pK("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((a,n)=>{null!=a&&null!=e[n]&&e[n]!==a&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new pH(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let a=JSON.stringify(t.outputShapes);-1===e.indexOf(a)&&e.push(a)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new pH(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new pj(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ua(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ui(e?this.trainableWeights:this.weights)}setWeights(e){nj(()=>{let t=this.weights;if(t.length!==e.length)throw new pq(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let a=[],n=ui(t);for(let r=0;r<n.length;++r){let i=n[r],s=t[r],l=e[r];if(!U(i.shape,l.shape))throw new pq(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);a.push([s,l])}us(a)})}addWeight(e,t,a,n,r,i,s,l){if(-1!==this._addedWeightNames.indexOf(e))throw new pq(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==a&&(a="float32"),this.fastWeightInitDuringBuild&&(n=null!=l?l():d5("zeros"));let o=n.apply(t,a),p=new ur(o,a,e,i,s);return o.dispose(),null!=r&&this.addLoss(()=>r.apply(p.read())),null==i&&(i=!0),i?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=p0(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t)if(Array.isArray(t))t.forEach(e=>{if(null!=e)throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,a){if(!this.supportsMasking)return;let n=this.computeMask(e,a),r=p0(t),i=p0(n);if(r.length!==i.length)throw Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let e=0;e<r.length;e++)r[e].kerasMask=i[e]}addInboundNode(e,t,a,n,r,i,s=null){let l=p0(e);t=p0(t),a=p0(a),n=p0(n),r=d7(r),i=d7(i);let o=[],p=[],d=[];for(let e of l)o.push(e.sourceLayer),p.push(e.nodeIndex),d.push(e.tensorIndex);new ud({outboundLayer:this,inboundLayers:o,nodeIndices:p,tensorIndices:d,inputTensors:l,outputTensors:t,inputMasks:a,outputMasks:n,inputShapes:r,outputShapes:i},s);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class um extends uh{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:di("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new pq("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t)if(null==e.inputShape)throw new pq("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");else t=[e.batchSize].concat(e.inputShape);else if(null!=e.batchSize)throw new pq("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let a=e.dtype||"float32";this.batchInputShape=t,this.dtype=a,this.inputSpec=[{shape:t}];let n=new uo(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new ud({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new pq(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function uc(e){if(null==e.batchShape&&null==e.shape)throw Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new pq("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let a=e.dtype;return null==a&&(a="float32"),new um({batchInputShape:t,name:e.name,dtype:a,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}um.className="InputLayer",rD(um);class uf{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof uf)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,a){if(null==this.id2Value[e.id])this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return rb(t,e.dtype)}catch(a){throw new pq(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=a&&(this.id2Mask[e.id]=a);else throw new pq(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof uo)if(null!=this.id2Value[e.id])return this.id2Value[e.id];else throw new pq(`Nonexistent key: ${e.name}`);{let t=this.name2Id[e];if(null==t)throw new pq(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof uo)if(null!=this.id2Value[e.id])return this.id2Mask[e.id];else throw new pq(`Nonexistent key: ${e.name}`);{let t=this.name2Id[e];if(null==t)throw new pq(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&nq(this.id2Mask)}}let ug=new pY,uv=new pY;function ub(e,t,a,n){let r,i=null!=a&&a.training,s=Array.isArray(e),l=s?e:[e],o=l.map(e=>e.name),p=[],d=t.names();for(let e of o)-1!==d.indexOf(e)?p.push(t.getValue(e)):p.push(null);null!=n&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let u=o.join(",")+"|"+t.names().sort().join(","),h=ug.get(u);if(null==h){let e=function(e,t){V(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let a=[],n={};if(1===e.length){let r=uy(e[0],t);a=r.sorted,n=r.recipientMap}else{let r=new Set;for(let i of e){let{sorted:e,recipientMap:s}=uy(i,t);for(let t of e)r.has(t.name)||(a.push(t),r.add(t.name));for(let e in s)null==n[e]&&(n[e]=new Set),s[e].forEach(t=>n[e].add(t))}}return{sorted:a,recipientCounts:function(e){let t={};for(let a in e)t[a]=e[a].size;return t}(n)}}(l,t);h=e.sorted,r=e.recipientCounts,ug.put(u,h),uv.put(u,r)}r={},i||Object.assign(r,uv.get(u));let m=new uf(t);for(let e=0;e<h.length;++e){if(null!=n){let e=nH().numTensors;e>n.maxNumTensors&&(n.maxNumTensors=e),e<n.minNumTensors&&(n.minNumTensors=e)}let s=h[e],l=s.sourceLayer;if(l instanceof um)continue;let d=[],u=[],c=[],f=!1;for(let e of s.inputs){let a=m.getValue(e),n=m.getMask(e);d.push(a),u.push(n),null!=n&&(f=!0),!i&&(r[e.name]--,0!==r[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||a.isDisposed||!0===e.sourceLayer.stateful||c.push(a))}f&&((a=a||{}).mask=u[0]);let g=p0(l.apply(d,a)),v=null;l.supportsMasking&&(v=l.computeMask(d,u));let b=function(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let a=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let n of e.sourceLayer.inboundNodes[t].outputTensors)if(n.id===e.id){a=t;break}t=e.sourceLayer.getOutputAt(a)}return t}(s),y=Array.isArray(b)?b:[b];for(let e=0;e<y.length;++e){m.hasKey(y[e])||m.add(y[e],g[e],Array.isArray(v)?v[0]:v);let t=o.indexOf(y[e].name);-1!==t&&(p[t]=g[e])}i||nq(c)}return m.disposeMasks(),s?p:p[0]}function uy(e,t){let a=new Set,n=[],r={};for(let e of t.names())a.add(e);let i=[],s=[];for(i.push(e);i.length>0;){let e=i[i.length-1];if(a.has(e.name)){i.pop();continue}let t=s[s.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),n.push(e),a.add(e.name),t&&s.pop();else for(let t of(s.push(i.length-1),e.inputs))null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),a.has(t.name)||i.push(t)}return{sorted:n,recipientMap:r}}function uw(e,t){return nj(()=>rI(su(rN(e,e),t,!0)))}ef.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=ug&&ug.setMaxEntries(e),null!=uv&&uv.setMaxEntries(e)});class ux extends rR{getConfig(){return{}}}class uk extends ux{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return nj(()=>{let t=uw(e,this.axis);return rN(e,rk(iH(t,0,this.maxValue),rw(dT(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}uk.className="MaxNorm",rD(uk);class uN extends ux{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return nj(()=>rk(e,rw(dT(),uw(e,this.axis))))}getConfig(){return{axis:this.axis}}}uN.className="UnitNorm",rD(uN);class uI extends ux{apply(e){return sG(e)}}uI.className="NonNeg",rD(uI);class uS extends ux{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return nj(()=>{let t=uw(e,this.axis),a=rw(rN(this.rate,iH(t,this.minValue,this.maxValue)),rN(1-this.rate,t));return rN(e,rk(a,rw(dT(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}uS.className="MinMaxNorm",rD(uS);let uT={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function uC(e,t={}){return p9(e,rA.getMap().classNameMap,t,"constraint")}function u$(e){return null==e?null:"string"==typeof e?uC({className:e in uT?uT[e]:e,config:{}}):e instanceof ux?e:uC(e)}async function uE(e){if(null==e)return;let t=[],a=[],n=[];for(let r in e){let i=e[r];"number"!=typeof i&&(t.push(i.data()),a.push(r),n.push(i))}if(t.length>0){let r=await Promise.all(t);for(let t=0;t<r.length;++t)e[a[t]]=r[t][0];nq(n)}}function u_(e){if(null!=e)for(let t in e){let a=e[t];"number"!=typeof a&&a.dispose()}}!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(b||(b={}));class uR{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class uA{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){for(let a of(null==t&&(t={}),this.callbacks))await a.onEpochBegin(e,t)}async onEpochEnd(e,t){for(let a of(null==t&&(t={}),this.callbacks))await a.onEpochEnd(e,t)}async onBatchBegin(e,t){for(let a of(null==t&&(t={}),this.callbacks))await a.onBatchBegin(e,t)}async onBatchEnd(e,t){for(let a of(null==t&&(t={}),this.callbacks))await a.onBatchEnd(e,t)}async onTrainBegin(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainBegin(e)}async onTrainEnd(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainEnd(e)}}class uD extends uR{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let a=null==t.size?0:t.size;for(let e in this.seen+=a,t){let n=t[e];if("number"==typeof n)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+n*a;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let r=nj(()=>rw(this.totals[e],rN(n,a)));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:nj(()=>{let a=rN(rk(1,this.seen),this.totals[e]);t[e]=a,this.totals[e].dispose(),nK(t[e])}))}}class uF extends uR{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){for(let a in null==t&&(t={}),this.epoch.push(e),t)null==this.history[a]&&(this.history[a]=[]),this.history[a].push(t[a])}async syncData(){let e=[],t=[],a=[];for(let n in this.history){let r=this.history[n];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){let s=r[i];e.push(s.data()),t.push(n),a.push(i)}}let n=await Promise.all(e);for(let e=0;e<n.length;++e)this.history[t[e]][a[e]].dispose(),this.history[t[e]][a[e]]=n[e][0]}}class uO extends uR{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||l0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Q(this.yieldEvery)&&(this.maybeWait=function(e,t,a){let n,r=null!=a?a():na();return(...i)=>{let s=null!=a?a():na();return s-r<t?n:(r=s,n=e(...i))}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,a){let n=[];null!=this.yield&&(await uE(a),n.push(this.yield(e,t,a))),n.push(this.nextFrameFunc()),await Promise.all(n)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await uE(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let a=[];null!=this.epochEnd&&(await uE(t),a.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&a.push(this.nextFrameFunc()),await Promise.all(a)}async onBatchBegin(e,t){null!=this.batchBegin&&(await uE(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let a=[];null!=this.batchEnd&&(await uE(t),a.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?a.push(this.nextFrameFunc()):Q(this.yieldEvery)&&a.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(a)}async onTrainBegin(e){null!=this.trainBegin&&(await uE(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await uE(e),await this.trainEnd(e))}}function uL(e,t){return(null==e&&(e={}),e instanceof uR)?[e]:Array.isArray(e)&&e[0]instanceof uR?e:p0(e).map(e=>new uO(e,t))}class uM{constructor(){}static registerCallbackConstructor(e,t){V(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),uM.checkForDuplicate(t),null==uM.constructors[e]&&(uM.constructors[e]=[]),uM.constructors[e].push(t)}static checkForDuplicate(e){for(let t in uM.constructors)uM.constructors[+t].forEach(t=>{if(t===e)throw new pq("Duplicate callback constructor.")})}static clear(){uM.constructors={}}static createCallbacks(e){let t=[];for(let a in uM.constructors){let n=+a;e>=n&&t.push(...uM.constructors[n])}return t.map(e=>new e)}}function uV(e,t,a,n,r,i,s,l,o){let p=new uF,d=[new uD,...uM.createCallbacks(t)];null!=e&&d.push(...e),d.push(p);let u=new uA(d);return u.setParams({epochs:a,initialEpoch:n,samples:r,steps:i,batchSize:s,verbose:t,doValidation:l,metrics:o}),{callbackList:u,history:p}}function uB(e,t={},a=!1){return p9(e,rA.getMap().classNameMap,t,"layer",a)}function uz(e,t){return nj(()=>{var a;"float32"!==e.dtype&&(e=rb(e,"float32"));let n=su(rN(a=e,a),t,!0),r=rL(n.shape,dT()),i=rI(rH(n,r));return rk(e,i)})}function uP(e,t){return nj(()=>{var a;return sT(rN(a=rB(t,e),a),-1)})}function uU(e,t){return nj(()=>sT(rP(rB(t,e)),-1))}function uW(e,t){return nj(()=>{let a=rB(e,t),n=iH(rP(e),dT(),Number.MAX_VALUE);return rN(100,sT(rP(rk(a,n)),-1))})}function uG(e,t,a=!1){return nj(()=>{if(a)t=s1(t);else{let e=su(t,t.shape.length-1,!0);t=rk(t,e)}return t=iH(t,dT(),1-dT()),s_(su(rN(rb(e,"float32"),so(t)),t.shape.length-1))})}function uH(e,t,a=!1){return nj(()=>{let n=rb(sn(function(e){let t=[dk(e.shape)];return iM(e,t)}(e)),"int32"),r=(t=iH(t,dT(),1-dT())).shape;return uG(iM(sA(n,r[r.length-1]),r),t,a)})}function uj(e,t){return nj(()=>{let a;return sT(function(e,t){if(!U(e.shape,t.shape))throw new pq(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return nj(()=>{let a=sG(t),n=s_(rP(t));return rw(rB(a,rN(t,e)),sp(i7(n)))})}(e,a=so(rk(a=iH(t,dT(),1-dT()),rB(1,a)))),-1)})}function uq(e,t){return nj(()=>s_(su(rN(uz(e,-1),uz(t,-1)),-1)))}uM.constructors={};let uK={meanSquaredError:uP,meanAbsoluteError:uU,meanAbsolutePercentageError:uW,meanSquaredLogarithmicError:function(e,t){return nj(()=>{var a;return sT(rN(a=rB(so(rw(1,iH(t,dT(),Number.MAX_VALUE))),so(rw(1,iH(e,dT(),Number.MAX_VALUE)))),a),-1)})},squaredHinge:function(e,t){return nj(()=>{let a=rH(0,rB(1,rN(e,t)));return sT(rN(a,a),-1)})},hinge:function(e,t){return nj(()=>sT(rH(0,rB(1,rN(e,t))),-1))},categoricalHinge:function(e,t){return nj(()=>{let a=su(rN(e,t),-1),n=sd(rN(rB(1,e),t),-1);return rH(0,rw(1,rB(n,a)))})},logcosh:function(e,t){return nj(()=>{let a=Math.log(2),n=rB(t,e);return sT(rB(rw(n,s0(rN(-2,n))),a),-1)})},categoricalCrossentropy:uG,sparseCategoricalCrossentropy:uH,binaryCrossentropy:uj,kullbackLeiblerDivergence:function(e,t){return nj(()=>{let a=iH(e,dT(),1);return su(rN(e,so(rk(a,iH(t,dT(),1)))),-1)})},poisson:function(e,t){return nj(()=>{let a=so(rw(dT(),t));return sT(rB(t,rN(e,a)),-1)})},cosineProximity:uq};function uX(e){if("string"!=typeof e)return e;{if(e in uK)return uK[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new pq(t)}}function uY(e,t){return nj(()=>{let a=rN(.5,sO(t)),n=rb(si(t,a),e.dtype);return sT(i5(e,n),-1)})}function uJ(e,t){return nj(()=>rb(i5(ix(e,-1),ix(t,-1)),"float32"))}function uZ(e,t){return uj(e,t)}function uQ(e,t){return e.rank===t.rank&&(e=s4(e,[e.rank-1])),(t=ix(t,-1)).dtype!==e.dtype&&(t=rb(t,e.dtype)),rb(i5(e,t),"float32")}let u1={binaryAccuracy:uY,categoricalAccuracy:uJ,precision:function(e,t){return nj(()=>{var a,n;let r=(a=e,n=t,nj(()=>rb(su(sk(i5(a,1),i5(n,1))),"float32"))),i=rw(r,nj(()=>rb(su(sk(i5(e,0),i5(t,1))),"float32")));return rb(le(si(i,0),rk(r,i),0),"float32")})},categoricalCrossentropy:uG,sparseCategoricalCrossentropy:uH,mse:uP,MSE:uP,mae:uU,MAE:uU,mape:uW,MAPE:uW,cosine:uq};function u0(e){if(pZ(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let a of Object.keys(uK))if(uK[a]===e){t=a;break}if(void 0!==t)return t;for(let a of Object.keys(u1))if(u1[a]===e){t=a;break}return void 0!==t?t:e.name}}function u2(e,t,a=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t)if(Object.getPrototypeOf(t)===Object.prototype){for(let a of Object.keys(t))if("string"!=typeof a||!e(t[a]))return!1;return!0}else{if(!Array.isArray(t))return!1;for(let a of t)if(!e(a))return!1;return!0}{let e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw Error("User-defined metadata is expected to be a JSON object, but is not.");if(a){let a=JSON.stringify(e);a.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${a.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function u4(e,t,a=console.log){let n="";for(let a=0;a<e.length;++a)a>0&&(n=n.slice(0,n.length-1)+" "),n+=e[a],n=n.slice(0,t[a]),n+=" ".repeat(t[a]-n.length);a(n)}function u6(e,t,a){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof a}function u3(e,t){if(null===e)return null;if("string"==typeof e)return p4(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let a=[],n=e.length;for(let r=0;r<n;++r){let n=e[r];u6(t,r,n)?a.push(n):a.push(u3(n,t))}return a}{let t={};for(let a of Object.keys(e)){let n=e[a];if("name"===a&&"string"==typeof n)t[a]=n;else{let e=p4(a);t[e]=u3(n,e)}}return t}}let u9="4.22.0",u5=e=>{let t=Object.keys(e);if(0===t.length)return!1;let a=t[0].split("/");return!isNaN(parseInt(a[a.length-1],10))};class u8 extends uh{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=di(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],p8(this.inputs).length!==this.inputs.length)throw new pq(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);for(let e of(p8(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[],this.outputs)){let t=e.sourceLayer,a=e.nodeIndex,n=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(a),this.outputLayersTensorIndices.push(n)}for(let e of this.inputs){let t=e.sourceLayer,a=e.nodeIndex,n=e.tensorIndex;pZ(0===a,"input layer has >1 nodes"),pZ(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(a),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let a=this.inputLayers[t];if(!(a instanceof um))throw TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${a.getClassName()}.`);this.inputNames.push(a.name),this.feedInputShapes.push(a.batchInputShape),this.feedInputNames.push(a.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);let t={},a={},n={},r={},i={},s=[],l=(e,t,a,n,r,o)=>{(null==n||null==r||null==o)&&(n=e.sourceLayer,r=e.nodeIndex,o=e.tensorIndex);let p=n.inboundNodes[r];if(-1!==a.indexOf(p))throw new pj(`The tensor ${e.name} at layer "${n.name}" is part of a cycle.`);if(-1!==t.indexOf(p))return;this.containerNodes.add(u8.nodeKey(n,r)),n.id in i||(i[n.id]=Object.keys(i).length),-1===a.indexOf(p)&&a.push(p);let d=p.inboundLayers.length;for(let e=0;e<d;e++){let n=p.inputTensors[e],r=p.inboundLayers[e];l(n,t,a,r,p.nodeIndices[e],p.tensorIndices[e])}for(t.push(p);a.indexOf(p)>=0;)a.splice(a.indexOf(p),1);s.push(p)},o=[],p=[];for(let e of this.outputs)l(e,o,p);for(let e of s.slice().reverse()){a[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];i=Math.max(i,null==n[e.outboundLayer.id]?0:n[e.outboundLayer.id]),n[e.outboundLayer.id]=i,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let n=0;n<e.inboundLayers.length;n++){let r=e.inboundLayers[n],s=e.nodeIndices[n],l=r.inboundNodes[s],o=null==t[l.id]?0:t[l.id];t[l.id]=Math.max(i+1,o),a[l.id]=l}}let d={};for(let e in t){let n=t[e];n in d||(d[n]=[]),d[n].push(a[e])}let u={};for(let e in n){let t=n[e];t in u||(u[t]=[]),u[t].push(r[e])}let h=Object.keys(u).map(e=>parseInt(e,10)).sort(p5);for(let e of(this.layers=[],h)){let t=u[e];for(let e of(t.sort((e,t)=>{let a=i[e.id],n=i[t.id];return a<n?-1:+(a>n)}),t))e instanceof u8&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=u,h=Object.keys(d).map(e=>parseInt(e,10)).sort(p5);let m=this.inputs.slice(),c=[];for(let e of h)for(let t of d[e]){let e=t.outboundLayer;if(null!=e){for(let a of t.inputTensors)if(-1===m.indexOf(a))throw new pj(`Graph disconnected: cannot obtain value for tensor ${a} at layer "${e.name}". The following previous layers were accessed without issue: ${c}`);for(let e of t.outputTensors)m.push(e);c.push(e.name)}}this.nodesByDepth=d;let f=this.layers.map(e=>e.name);for(let e of f){let t=f.filter(t=>t===e).length;if(1!==t)throw new pj(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(f))}this.outboundNodes=[],this.inboundNodes=[],new ud({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new pq("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let a={},n=0,r=u5(e);for(let t of(r&&this.parseWeights(e),this.layers))for(let[e,i]of t.weights.entries()){let t=r?`${i.name.split("/").slice(0,-1).join("/")+"/"}${e}`:i.originalName;if(null!=a[t])throw new pq(`Duplicate weight name: ${t}`);a[t]=i,n++}let i=[];for(let n in e){let r=n;if(null==a[n]){let e=n.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=a[r])i.push([a[r],e[n]]);else if(t)throw new pq(`Provided weight data has no target variable: ${n}`);delete a[r]}if(t){let e=[];for(let t in a)e.push(t);if(e.length>0)throw new pq(`${e.length} of ${n} weights are not set: ${e}`)}us(i)}parseWeights(e){for(let t in Object.keys(e)){let a=t.split("/"),n=["vars","layer_checkpoint_dependencies"],r=a.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!n.includes(e)).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${u9}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let a=function e(t,a){if(null==t)return null;if("string"==typeof t)return p2(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let n=[],r=t.length;for(let i=0;i<r;++i){let r=t[i];u6(a,i,r)?n.push(r):n.push(e(r,a))}return n}{let a={};for(let n of Object.keys(t)){let r=t[n],i=p2(n);("name"===n||"className"===n)&&"string"==typeof r?a[i]=r:a[i]=e(r,n)}return a}}(this.updatedConfig());return t?JSON.stringify(a):a}call(e,t){return nj(()=>{e=p0(e);let a=new uf;for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t]);return ub(this.outputs,a,t)})}computeMask(e,t){return nj(()=>{let a;return e=p0(e),a=null==t?pJ(null,e.length):p0(t),this.runInternalGraph(e,a)[1]})}computeOutputShape(e){let t=d7(e);if(t.length!==this.inputLayers.length)throw new pq(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let a={};for(let e=0;e<t.length;e++){let n=this.inputLayers[e],r=t[e];a[n.name+"_0_0"]=r}let n=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(p5);if(n.length>1)for(let e of n)for(let t of this.nodesByDepth[e]){let e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;let n=[];for(let e=0;e<t.inboundLayers.length;e++){let r=t.inboundLayers[e],i=t.nodeIndices[e],s=t.tensorIndices[e],l=a[`${r.name}_${i}_${s}`];n.push(l)}let r=d7(e.computeOutputShape(p1(n))),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)a[`${e.name}_${i}_${t}`]=r[t]}let r=[],i=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],a=this.outputLayersNodeIndices[e],n=this.outputLayersTensorIndices[e],r=`${t.name}_${a}_${n}`;i.push(r)}for(let e=0;e<i.length;e++){let t=i[e];pZ(t in a),r.push(a[t])}return p1(r)}runInternalGraph(e,t){null==t&&(t=pJ(null,e.length));let a={};for(let n=0;n<this.inputs.length;++n){let r=this.inputs[n],i=e[n],s=t[n];a[r.id]=[i,s]}for(let e of Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(p5))for(let t of this.nodesByDepth[e]){let e=t.outboundLayer,n=t.inputTensors,r=t.outputTensors,i=[];for(let e of n)e.id in a&&i.push(a[e.id]);if(i.length===n.length){let n,s,l,o,p={};if(null!=t.callArgs&&(p=t.callArgs),1===i.length){let[t,a]=i[0];null==p.mask&&(p.mask=a),l=p0(e.call(t,p)),o=p0(e.computeMask(t,a)),n=[t],s=[a]}else n=i.map(e=>e[0]),s=i.map(e=>e[1]),null==p.mask&&(p.mask=s),l=p0(e.call(n,p)),o=p0(e.computeMask(n,s));if(e.activityRegularizer)throw new pK("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){let t=r[e],n=l[e],i=o[e];a[t.id]=[n,i]}}}let n=[],r=[],i=[];for(let e of this.outputs){pZ(e.id in a,`Could not compute output ${e.name} : ${e.id}`);let[t,s]=a[e.id];i.push(t.shape),n.push(t),r.push(s)}return[n,r,i]}buildNodeConversionMap(e){let t,a={};for(let e of this.layers){t=+(e instanceof u8);for(let n=0;n<e.inboundNodes.length;n++){let r=u8.nodeKey(e,n);this.containerNodes.has(r)&&(a[r]=t,t+=1)}}return a}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new pq("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let t of this.layers)if(t.name===e)return t;throw new pq(`No such layer: ${e}`)}findLayer(e){if(!(this.layers.length<=e))return this.layers[e];throw new pq(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`)}calculateLosses(){return nj(()=>{let e=[];for(let t of this.layers)for(let a=0;a<t.inboundNodes.length;++a){let n=u8.nodeKey(t,a);this.containerNodes.has(n)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),a=[];for(let e of this.layers){let n=e.getClassName(),r=e.getConfig(),i=[];for(let a=0;a<e.inboundNodes.length;a++){let n=e.inboundNodes[a],r=u8.nodeKey(e,a),s={};if(this.containerNodes.has(r)){if(n.callArgs)try{JSON.stringify(n.callArgs),s=n.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${n.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),s={}}if(n.inboundLayers.length>0){let e=[];for(let a=0;a<n.inboundLayers.length;a++){let r=n.inboundLayers[a],i=n.nodeIndices[a],l=n.tensorIndices[a],o=t[u8.nodeKey(r,i)];null==o&&(o=0),e.push([r.name,o,l,s])}i.push(e)}}}let s={};s.name=e.name,s.className=n,s.config=r,s.inboundNodes=i,a.push(s)}e.layers=a;let n=[];for(let e=0;e<this.inputLayers.length;e++){let a=this.inputLayers[e],r=this.inputLayersNodeIndices[e],i=u8.nodeKey(a,r);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);let l=this.inputLayersTensorIndices[e];n.push([a.name,s,l])}e.inputLayers=n;let r=[];for(let e=0;e<this.outputLayers.length;e++){let a=this.outputLayers[e],n=this.outputLayersNodeIndices[e],i=u8.nodeKey(a,n);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);let l=this.outputLayersTensorIndices[e];r.push([a.name,s,l])}return e.outputLayers=r,e}static fromConfig(e,t,a={},n=!1){let r={},i={};function s(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}let l=t.name,o=t.layers;for(let e of o){let a=e.name,i=uB(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[a]=i,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new pq(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)})}for(;!function(e){if(null==e)throw new pq(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}(i);)for(let e of o){let t=r[e.name];if(t.name in i){let e=i[t.name];for(let a of(delete i[t.name],e))!function(e,t){let a,n=[];for(let i of t){let l=i[0],o=i[1],p=i[2];if(a=null==i[3]?{}:i[3],!(l in r))return void s(e,t);let d=r[l];if(d.inboundNodes.length<=o)return void s(e,t);let u=d.inboundNodes[o];n.push(u.outputTensors[p])}n.length>0&&e.apply(p1(n),a)}(t,a)}}let p=[],d=[];for(let e of t.inputLayers){let t=e[0],a=e[1],n=e[2];pZ(t in r);let i=r[t].inboundNodes[a].outputTensors;p.push(i[n])}for(let e of t.outputLayers){let t=e[0],a=e[1],n=e[2];pZ(t in r);let i=r[t].inboundNodes[a].outputTensors;d.push(i[n])}return new e({inputs:p,outputs:d,name:l})}get stateful(){if(this._stateful)throw new pq("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){nj(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function u7(e,t){var a=e,n=t,r="classWeight";let i=n.length;if(null==a||Array.isArray(a)&&0===a.length)return n.map(e=>null);if(1===i)if(Array.isArray(a)&&1===a.length)return a;else if("object"==typeof a&&n[0]in a)return[a[n[0]]];else return[a];if(Array.isArray(a)){if(a.length!==i)throw Error(`Provided ${r} is an array of ${a.length} element(s), but the model has ${i} outputs. Make sure a set of weights is provided for each model output.`);return a}if("object"==typeof a&&Object.keys(a).length>0&&"object"==typeof a[Object.keys(a)[0]]){let e=[];return n.forEach(t=>{t in a?e.push(a[t]):e.push(null)}),e}throw Error(`The model has multiple (${i}) outputs, so ${r} must be either an array with ${i} elements or an object with ${n} keys. Provided ${r} not understood: ${JSON.stringify(a)}`)}async function he(e,t,a,n){if(null!=t||null!=n)throw Error("Support sampleWeight is not implemented yet");if(null==a)return null;{let t=nj(()=>{if(1===e.shape.length)return ry(e);if(2===e.shape.length)if(e.shape[1]>1)return ix(e,1);else if(1===e.shape[1])return iM(e,[e.shape[0]]);else throw Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`);throw Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),n=Array.from(await t.data());nq(t);let r=[];return n.forEach(e=>{if(null==a[e])throw Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(a[e])}),s9(r,"float32")}}function ht(e,t){let a,n;a=t.xs,n=t.ys,V(null!=a&&null!=n,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let r=ha("input",e.inputNames,a),i=ha("output",e.outputNames,n),s=r[0].shape[0];V(r.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),V(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<r.length;t++)V(r[t].shape[0]===s,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${r[t].shape[0]}; expected  ${s} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)V(i[t].shape[0]===s,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${s} based on input ${e.inputNames[0]}.`);return{xs:r,ys:i}}function ha(e,t,a){if(a instanceof nf)return[a];if(Array.isArray(a))return V(a.length===t.length,()=>`Received an array of ${a.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),a;{let n=[];for(let r of t){if(null==a[r])throw new pq(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);n.push(a[r])}return n}}async function hn(e,t,a){let n=null!=a.batchesPerEpoch;if(V(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),V(null!=a,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),V(null!=a.epochs&&a.epochs>0&&Number.isInteger(a.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${a.epochs}`),V(!n||a.batchesPerEpoch>0&&Number.isInteger(a.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${a.batchesPerEpoch}`),V(null==a.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{var r,i;let s,l,o,p,d=null!=a.validationData;if(d)if(hr(a.validationData))V(null==a.validationBatches||a.validationBatches>0&&Number.isInteger(a.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${a.validationBatches}`);else{let e=function(e){if(3===e.length)throw new pK("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(a.validationData);s=e.xs,l=e.ys}let u=e.makeTrainFunction(),h=e.getDedupedMetricsNames();o=d?h.slice().concat(h.map(e=>"val_"+e)):h.slice();let m=uL(a.callbacks,a.yieldEvery),c=null==a.verbose?1:a.verbose,{callbackList:f,history:g}=uV(m,c,a.epochs,null,null,(r=t,i=a,p=null,null!=i.batchesPerEpoch?p=i.batchesPerEpoch:Number.isFinite(r.size)&&(p=r.size),p),null,d,o);f.setModel(e),e.history=g,await f.onTrainBegin(),e.stopTraining_=!1;let v=null==a.initialEpoch?0:a.initialEpoch,b=await t.iterator();for(;v<a.epochs;){let r={};await f.onEpochBegin(v);let i=0,o=0;for(n||(b=await t.iterator());!n||i<a.batchesPerEpoch;){let t=await b.next();if(n&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${a.batchesPerEpoch}, but your dataset iterator ran out of data after ${i} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${a.batchesPerEpoch*a.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:n,ys:r}=ht(e,t.value),s={};s.batch=o,s.size=n[0].shape[0],await f.onBatchBegin(o,s);let l=[];if(null!=a.classWeight){let t=u7(a.classWeight,e.outputNames);for(let e=0;e<t.length;++e)l.push(await he(r[e],null,t[e]))}let p=n.concat(r).concat(l),d=u(p);nq(p);for(let e=0;e<h.length;++e){let t=h[e],a=d[e];s[t]=a,nK(a)}await f.onBatchEnd(o,s),u_(s),o++,i++}if(n?i>=a.batchesPerEpoch:t.done){if(d){let t;t=hr(a.validationData)?p0(await e.evaluateDataset(a.validationData,{batches:a.validationBatches})):p0(e.evaluate(s,l,{batchSize:null==a.validationBatchSize?32:a.validationBatchSize,verbose:0}));for(let a=0;a<e.metricsNames.length;++a)r[`val_${e.metricsNames[a]}`]=t[a]}break}if(e.stopTraining_)break}if(await f.onEpochEnd(v,r),v++,e.stopTraining_)break}return await f.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function hr(e){return"function"==typeof e.iterator}async function hi(e,t,a){let n=null!=(a=a||{}).batches,r=e.testFunction,i=[];if(a.verbose>0)throw new pK("Verbose mode is not implemented yet.");V(!n||a.batches>0&&Number.isInteger(a.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(a.batches)}`);let s="function"==typeof t.next?t:await t.iterator(),l=0,o=0;for(;!n||o<a.batches;){let t=await s.next();if(i=nj(()=>{if(t.value){let{xs:a,ys:n}=ht(e,t.value),s=a.concat(n),p=nj(()=>r(s));if(nq(s),0===o)for(let e=0;e<p.length;++e)i.push(r$(0));let d=s[0].shape[0];for(let e=0;e<p.length;++e){let t=p[e],a=i[e];i[e]=nj(()=>rw(i[e],rN(d,t))),o>0&&nq(a)}nq(p),l+=d,++o}return i}),t.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${a.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){let t=i[e];i[e]=rk(i[e],l),nq(t)}return p1(i)}function hs(e){V(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function hl(e,t,a){return null==e?[null]:Array.isArray(e)?e.map(e=>dE(e,t,a-t)):dE(e,t,a-t)}function ho(e,t){return nj(()=>null==e?null:Array.isArray(e)?e.map(e=>ho(e,t)):dM(e,"int32"===t.dtype?t:rb(t,"int32")))}function hp(e,t){let a=[],n=0,r=null;for(;n<e;)(r=n+t)>=e&&(r=e),a.push([n,r]),n=r;return a}function hd(e){let t=[];e instanceof nf&&(e=[e]);for(let a=0;a<e.length;++a){let n=e[a];if(1===n.rank)t.push(d$(n,1));else if(0===n.rank)throw Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");else t.push(n)}return t}function hu(e,t){if(null==e)return;let a=[];if(t instanceof nf)a.push(t.id);else if(Array.isArray(t))t.forEach(e=>a.push(e.id));else if(null!=t)for(let e in t){let n=t[e];a.push(n.id)}let n=[];if(e instanceof nf)-1===a.indexOf(e.id)&&n.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===a.indexOf(e.id)&&n.push(e)});else if(null!=e)for(let t in e){let r=e[t];-1===a.indexOf(r.id)&&n.push(r)}n.forEach(e=>{e.isDisposed||e.dispose()})}function hh(e){return Array.isArray(e)}function hm(e){return!(e instanceof nf)&&!hh(e)}function hc(e,t,a,n=!0,r=""){let i;if(null==t||0===t.length){if(null!=e){let t=!1;if(hh(e)&&e.length>0)t=!0;else if(hm(e)){for(let a in e)if(e.hasOwnProperty(a)){t=!0;break}}else t=!0;if(t)throw new pq(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);if(hm(e))for(let a of(i=[],t)){if(null==e[a])throw new pq(`No data provided for "${a}". Need data for each key in: ${t}`);i.push(e[a])}else if(hh(e)){if(e.length!==t.length)throw new pq(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new pq(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=hd(i),null!=a)for(let e=0;e<t.length;++e){if(null==a[e])continue;let s=i[e];if(s.shape.length!==a[e].length)throw new pq(`Error when checking ${r}: expected ${t[e]} to have ${a[e].length} dimension(s). but got array with shape ${s.shape}`);for(let t=0;t<a[e].length;++t){if(0===t&&!n)continue;let i=s.shape[t],l=a[e][t];if(null!=l&&l>=0&&i!==l)throw new pq(`${r} expected a batch of elements where each example has shape [${a[e].slice(1,a[e].length)}] (i.e.,tensor shape [*,${a[e].slice(1,a[e].length)}]) but the ${r} received an input with ${s.shape[0]} examples, each with shape [${s.shape.slice(1,s.shape.length)}] (tensor shape [${s.shape}])`)}}return i}function hf(e,t,a,n=!0,r=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new pq(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new pq(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=a)for(let e=0;e<t.length;++e){if(null==a[e])continue;let s=i[e];if(s.shape.length!==a[e].length)throw new pq(`Error when checking ${r}: expected ${t[e]} to have ${a[e].length} dimension(s), but got array with shape ${JSON.stringify(s.shape)}`);for(let i=0;i<a[e].length;++i){if(0===i&&!n)continue;let l=s.shape[i],o=a[e][i];if(null!=o&&o!==l)throw new pq(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(a[e])} but got array with shape ${JSON.stringify(s.shape)}.`)}}}class hg extends u8{constructor(e){super(e),this.isTraining=!1}summary(e,t,a=console.log){if(!this.built)throw new pq("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,a,n=console.log){var r;let i,s,l=function(e){let t=!0,a=[],n=[];for(let t in e.nodesByDepth)a.push(e.nodesByDepth[t]);for(let e of a){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}n.push(...e)}if(t)for(let a of e.layers){let e=!1;for(let r of a.inboundNodes)if(-1!==n.indexOf(r))if(e){t=!1;break}else e=!0;if(!t)break}return t}(e),o=["Layer (type)","Input Shape","Output shape","Param #"];if(l?(t=t||90,a=a||[.32,.61,.89,1]):(t=t||115,a=a||[.24,.48,.7,.8,1]),a[a.length-1]<=1&&(a=a.map(e=>Math.floor(t*e))),!l)for(let t in o.push("Receives inputs"),i=[],e.nodesByDepth)i.push(...e.nodesByDepth[t]);n("_".repeat(t)),u4(o,a,n),n("=".repeat(t));let p=e.layers;for(let e=0;e<p.length;++e)l?function(e,t,a){let n,r;try{r=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){r="multiple"}try{n=JSON.stringify(e.outputShape)}catch(e){n="multiple"}let i=e.name,s=e.getClassName();u4([`${i} (${s})`,r,n,e.countParams().toString()],t,a)}(p[e],a,n):function(e,t,a,n){let r,i;try{i=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){i="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}let s=[];for(let t of e.inboundNodes)if(null==a||!(a.length>0)||-1!==a.indexOf(t))for(let e=0;e<t.inboundLayers.length;++e){let a=t.inboundLayers[e].name,n=t.nodeIndices[e],r=t.tensorIndices[e];s.push(`${a}[${n}][${r}]`)}let l=e.name,o=e.getClassName(),p=0===s.length?"":s[0];u4([`${l} (${o})`,i,r,e.countParams().toString(),p],t,n);for(let e=1;e<s.length;++e)u4(["","","","",s[e]],t,n)}(p[e],a,i,n),n((e===p.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let d=null!=(r=e).collectedTrainableWeights?ua(r.collectedTrainableWeights):ua(r.trainableWeights),u=ua(e.nonTrainableWeights);n(`Total params: ${d+u}`),n(`Trainable params: ${d}`),n(`Non-trainable params: ${u}`),n("_".repeat(t))}(this,e,t,a)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>lQ.adagrad(.01),Adadelta:()=>lQ.adadelta(1,.95,dT()),Adam:()=>lQ.adam(.001,.9,.999,dT()),Adamax:()=>lQ.adamax(.002,.9,.999,dT(),0),RMSProp:()=>lQ.rmsprop(.001,.9,0,dT()),SGD:()=>lQ.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new pq(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof rF))throw new pq("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new pq(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>uX(e))}else{let a=uX(e.loss);this.outputs.forEach(e=>{t.push(a)})}else{for(let t in e.loss=e.loss,e.loss)if(-1===this.outputNames.indexOf(t))throw new pq(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)null==e.loss[a]&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(uX(e.loss[a]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],a=this.outputNames[e];this.feedOutputNames.push(a),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let a=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],dv("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==a.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});let n=function(e,t){let a;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);if("string"==typeof e||"function"==typeof e)a=[e];else if(Array.isArray(e)||"object"==typeof e)a=e;else throw TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(a))return t.map(e=>a);{let e=[];for(let n of t){let t=a.hasOwnProperty(n)?a[n]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,a)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([a,e])};dv("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1===a.indexOf(e))(t=>{let a,n,i;for(let s of t){let t;if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){let t,r=this.internalOutputShapes[e];1===r[r.length-1]||this.lossFunctions[e]===uj?-1!==["accuracy","acc"].indexOf(s)?n=uY:-1!==["crossentropy","ce"].indexOf(s)&&(n=uZ):this.lossFunctions[e]===uH?-1!==["accuracy","acc"].indexOf(s)?n=uQ:-1!==["crossentropy","ce"].indexOf(s)&&(n=uH):-1!==["accuracy","acc"].indexOf(s)?n=uJ:-1!==["crossentropy","ce"].indexOf(s)&&(n=uG),-1!==["accuracy","acc"].indexOf(s)?t="acc":-1!==["crossentropy","ce"].indexOf(s)&&(t="ce"),i=n,a=""+t}else i=function(e){if("string"==typeof e&&e in u1)return u1[e];if("string"!=typeof e&&null!=e)return e;throw new pq(`Unknown metric ${e}`)}(s),a=""+u0(s);dv(a,()=>{t=i}),r(e,a,t)}})(n[e])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,a={}){let n=null==a.batchSize?32:a.batchSize;hs(n);let r=this.standardizeUserDataXY(e,t,!0,n);try{let e=r[0].concat(r[1]);this.makeTestFunction();let t=this.testFunction,i=this.testLoop(t,e,n,a.verbose,a.steps);return p1(i)}finally{hu(r[0],e),hu(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),hi(this,e,t)}checkNumSamples(e,t,a,n="steps"){let r;if(null!=a){if(r=null,null!=t)throw new pq(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(null!=e)r=Array.isArray(e)?e[0].shape[0]:e.shape[0];else throw new pq(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new pq("`outputs` is an empty Array, which is not allowed.");let a=Array.isArray(t),n=a?t:[t],r=this.retrieveSymbolicTensors(n),i=new uf;if(e instanceof nf&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new pq(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(let t of this.inputs){let a=e[t.name];if(null==a)throw new pq(`No value is provided for the model's input ${t.name}`);i.add(t,a)}let s=ub(r,i);return a?s:s[0]}retrieveSymbolicTensors(e){let t=pJ(null,e.length),a=e.length;for(let n of this.layers){let r=Array.isArray(n.output)?n.output:[n.output],i=r.map(e=>e.name);for(let n=0;n<e.length;++n){let s=i.indexOf(e[n]);if(-1!==s&&(t[n]=r[s],a--),0===a)break}if(0===a)break}if(a>0){let a=[];throw t.forEach((t,n)=>{null==t&&a.push(e[n])}),new pq(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return t}predictLoop(e,t=32,a=!1){return nj(()=>{let n=this.checkNumSamples(e);if(a)throw new pK("Verbose predictLoop() is not implemented yet.");let r=hp(n,t),i=this.outputs.map(e=>[]);for(let t=0;t<r.length;++t)nj(()=>{let a=hl(e,r[t][0],r[t][1]),n=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)n.push({key:this.inputs[e],value:a[e]});else n.push({key:this.inputs[0],value:a});let i=new uf(n);return ub(this.outputs,i)}).forEach((e,t)=>i[t].push(e));return p1(i.map(e=>ij(e,0)))})}predict(e,t={}){let a=hd(e);hf(a,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return hs(e),this.predictLoop(a,e)}finally{hu(a,e)}}predictOnBatch(e){hf(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,a=!0,n){if(null==this.optimizer_)throw new pj("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===uH?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}e=hc(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=hc(t,this.feedOutputNames,r,!1,"target");var i=e,s=t;let l=p8(i.map(e=>e.shape[0]));l.sort();let o=p8(s.map(e=>e.shape[0]));if(o.sort(),l.length>1)throw new pq(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(i.map(e=>e.shape))}`);if(o.length>1)throw new pq(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(e=>e.shape))}`);if(l.length>0&&o.length>0&&!U(l,o))throw new pq(`Input Tensors should have the same number of samples as target Tensors. Found ${l[0]} input sample(s) and ${o[0]} target sample(s).`);if(!function(e,t,a){let n=[uP,uj,uG];for(let r=0;r<e.length;++r){let i=e[r],s=t[r],l=a[r];if(null!=s){if(s===uG&&1===i.shape[i.shape.length-1])throw new pq(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==n.indexOf(s)){let e=i.shape.slice(1),t=l.slice(1);for(let a=0;a<e.length;++a){let n=e[a],r=t[a];if(null!=r&&n!==r)throw new pq(`A target Tensor with shape ${i.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!=0)throw new pq(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,a,n,r=!0,i){let[s,l]=this.standardizeUserDataXY(e,t,r,i);if(null!=a)throw Error("sample weight is not supported yet.");let o=null;if(null!=n){let e=u7(n,this.outputNames);o=[];for(let t=0;t<e.length;++t)o.push(await he(l[t],null,e[t]))}return[s,l,o]}testLoop(e,t,a,n=0,r){return nj(()=>{let i=this.checkNumSamples(t,a,r,"steps"),s=[];if(n>0)throw new pK("Verbose mode is not implemented yet.");if(null!=r)throw new pK("steps mode in testLoop() is not implemented yet");{let n=hp(i,a),r=s9(dS(0,i));for(let a=0;a<n.length;++a){let i=n[a][0],l=n[a][1],o=e(ho(t,dE(r,i,l-i)));if(0===a)for(let e=0;e<o.length;++e)s.push(r$(0));for(let e=0;e<o.length;++e){let t=o[e];s[e]=rw(s[e],rN(l-i,t))}}for(let e=0;e<s.length;++e)s[e]=rk(s[e],i)}return s})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let a=0;a<e.length;++a){let n=e[a],r=n;if(pQ(e,n)>1){let t=pQ(e.slice(0,a),n);r+=`_${t}`}t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],a=e.slice(0,this.inputs.length),n=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],s=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{let e,s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});let l=new uf(s),o=ub(this.outputs,l,{training:!0});for(let a=0;a<this.lossFunctions.length;++a){let i=(0,this.lossFunctions[a])(n[a],o[a]);null!=r[a]&&(i=rN(i,r[a]));let s=sT(i);t.push(s),e=0===a?i:rw(e,i)}for(let e=0;e<this.metricsTensors.length;++e){let a;if(this.outputs.length>1&&e<this.outputs.length)a=t[e];else{let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];a=sT(t(n[r],o[r]))}nK(a),i.push(a)}return e=sT(e),this.calculateLosses().forEach(t=>{e=rw(e,t)}),e},!0,s)].concat(i)}}makeTestFunction(){this.testFunction=e=>nj(()=>{let t,a=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:n[e]});let s=new uf(i),l=ub(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){let n=sT((0,this.lossFunctions[e])(r[e],l[e]));t=0===e?n:rw(t,n),a.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],n=this.metricsTensors[e][1],i=sT(t(r[n],l[n]));a.push(i)}return a})}async fit(e,t,a={}){let n,r,i,s,l,o,p,d,u;if(this.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{let h,m,c,f=null==a.batchSize?32:a.batchSize;hs(f);let g=await this.standardizeUserData(e,t,a.sampleWeight,a.classWeight,!1,f);n=g[0],r=g[1],u=g[2];let v=!1;if(null!=a.validationData&&a.validationData.length>0){if(v=!0,2===a.validationData.length)l=a.validationData[0],o=a.validationData[1];else if(3===a.validationData.length)throw new pK("validationData including sample weights is not supported yet.");else throw new pq(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);let e=await this.standardizeUserData(l,o,null,null,!0,f);p=e[0],d=e[1],h=p.concat(d)}else if(null!=a.validationSplit&&a.validationSplit>0&&a.validationSplit<1){v=!0;let e=Math.floor(n[0].shape[0]*(1-a.validationSplit)),t=n[0].shape[0];p=hl(n,e,t),i=n,n=hl(n,0,e),d=hl(r,e,t),s=r,r=hl(r,0,e),h=p.concat(d)}else null!=a.validationSteps&&(v=!0);let b=n.concat(r).concat(u);this.checkTrainableWeightsConsistency();let y=this.makeTrainFunction(),w=this.getDedupedMetricsNames();v?(this.makeTestFunction(),m=this.testFunction,c=w.slice().concat(w.map(e=>"val_"+e))):(m=null,h=[],c=w.slice());let x=uL(a.callbacks,a.yieldEvery);return await this.fitLoop(y,b,w,f,a.epochs,a.verbose,x,m,h,a.shuffle,c,a.initialEpoch,null,null)}finally{this.isTraining=!1,hu(n,e),hu(r,t),hu(i,e),hu(s,t),hu(p,l),hu(d,o),null!=u&&nq(u)}}async fitLoop(e,t,a,n,r,i,s,l,o,p,d,u,h,m){let c;null==n&&(n=32),null==r&&(r=1),null==p&&(p=!0),null==u&&(u=0);let f=!1;if(null!=l&&null!=o&&(f=!0),null!=m&&(f=!0,null==h))throw new pq("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(t,n,h,"steps_per_epoch");null!=g&&(c=dS(0,g)),null==i&&(i=1);let{callbackList:v,history:b}=uV(s,i,r,u,g,h,n,f,d);v.setModel(this),this.history=b,await v.onTrainBegin(),this.stopTraining_=!1;for(let i=u;i<r;++i){await v.onEpochBegin(i);let r={};if(null!=h)throw new pK("stepsPerEpoch mode is not implemented yet.");{if("batch"===p)throw new pK("batch shuffling is not implemneted yet");p&&function(e){let t=e.length,a=0;for(;t>0;)a=Math.random()*t|0,M(e,--t,a)}(c);let i=s9(c),s=hp(g,n);for(let p=0;p<s.length;++p){let d={};if(await v.onBatchBegin(p,d),nj(()=>{let u=s[p][0],h=s[p][1],m=dE(i,u,h-u);d.batch=p,d.size=h-u;let c=e(ho(t,m));for(let e=0;e<a.length;++e){let t=a[e],n=c[e];d[t]=n,nK(n)}if(p===s.length-1&&f){let e=this.testLoop(l,o,n);for(let t=0;t<a.length;++t){let n=a[t],i=e[t];nK(i),r["val_"+n]=i}}}),await v.onBatchEnd(p,d),u_(d),this.stopTraining_)break}i.dispose()}if(await v.onEpochEnd(i,r),this.stopTraining_)break}return await v.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return hn(this,e,t)}async trainOnBatch(e,t){let a=await this.standardizeUserData(e,t),n=a[0],r=a[1],i=this.makeTrainFunction()(n.concat(r)),s=[];for(let e of i){let t=await e.data();s.push(t[0])}return nq(i),hu(a[0],e),hu(a[1],t),p1(s)}getNamedWeights(e){let t=[],a=null!=e&&e.trainableOnly,n=a?this.trainableWeights:this.weights,r=this.getWeights(a);for(let e=0;e<n.length;++e)(!a||n[e].trainable)&&t.push({name:n[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=nH().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-nH().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=p2(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>p2(e))}else{let t=Object.keys(this.loss);e={};let a=this.loss;for(let n of t)if("string"==typeof a[n])e[n]=p2(a[n]);else throw Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[p2(u0(this.metrics))];{if(Array.isArray(this.metrics))return this.metrics.map(e=>p2(u0(e)));let e={};for(let t in this.metrics)e[t]=p2(u0(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){let t,a;if(null!=e.weighted_metrics)throw Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw Error("Loading sample_weight_mode is not supported yet.");let n=uB(u3(e.optimizer_config));if("string"==typeof e.loss)t=p4(e.loss);else if(Array.isArray(e.loss))t=e.loss.map(e=>p4(e));else if(null!=e.loss)for(let a in t={},e.loss)t[a]=p4(e.loss[a]);if(Array.isArray(e.metrics))a=e.metrics.map(e=>p4(e));else if(null!=e.metrics)for(let t in a={},e.metrics)a[t]=p4(e.metrics[t]);this.compile({loss:t,metrics:a,optimizer:n})}async save(e,t){if("string"==typeof e){let t=n3(e);if(0===t.length)throw new pq(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new pq(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new pq("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let a=await nY(this.getNamedWeights(t)),n={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${u9}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){var r;n.trainingConfig=this.getTrainingConfig();let{data:e,specs:t}=await nY(await this.optimizer.getWeights(),"optimizer");a.specs.push(...t),r=[a.data,e],a.data=nG.join(r)}return null!=this.userDefinedMetadata&&(u2(this.userDefinedMetadata,this.name,!0),n.userDefinedMetadata=this.userDefinedMetadata),n.weightData=a.data,n.weightSpecs=a.specs,e.save(n)}setUserDefinedMetadata(e){u2(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}hg.className="Model",rD(hg);class hv extends hg{}async function hb(e,t){if(null==t&&(t={}),"string"==typeof e){let a=n9(e,t);if(0===a.length)a.push(new r1(e,t));else if(a.length>1)throw new pq(`Found more than one (${a.length}) load handlers for URL '${e}'`);e=a[0]}return hy(e,void 0,t)}async function hy(e,t,a){if(null==a&&(a={}),null==e.load)throw new pq("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await e.load(),r=n.modelTopology;null!=r.model_config&&(r=r.model_config);let i=null==a.strict||a.strict,s=null!=n.weightData&&null!=n.weightSpecs&&i,l=uB(u3(r),t,s),o=n.trainingConfig;if(null!=o&&l.loadTrainingConfig(o),null!=n.userDefinedMetadata&&l.setUserDefinedMetadata(n.userDefinedMetadata),null!=n.weightData){if(null==n.weightSpecs)throw new pq("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let a=function(e,t){let a=new nG(e),n={},r=0;for(let e of t){let t=function(e,t){let a,n=P(e.shape);if("quantization"in e)a=nW[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=4+new Uint32Array(t(e,e+4))[0];return e}else a=nW[e.dtype];return n*a}(e,(e,t)=>a.slice(r+e,r+t));n[e.name]=function(e,t){let a,n=e.name,r=e.dtype,i=e.shape,s=P(i),l=0;if("quantization"in e){let i=e.quantization;if("uint8"===i.dtype||"uint16"===i.dtype){if(!("min"in i&&"scale"in i))throw Error(`Weight ${e.name} with quantization ${i.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===i.dtype){if("float32"!==r)throw Error(`Weight ${e.name} is quantized with ${i.dtype} which only supports weights of type float32 not ${r}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${i.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let o=nW[i.dtype],p="uint8"===i.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===i.dtype||"uint16"===i.dtype){a=new Float32Array(p.length);for(let e=0;e<p.length;e++){let t=p[e];a[e]=t*i.scale+i.min}}else if("float16"===i.dtype)a=(function(){let e=function(){let e=e=>{let t=e<<13,a=0;for(;(8388608&t)==0;)a-=8388608,t<<=1;return(t&=-8388609)|(a+=0x38800000)},t=new Uint32Array(2048);t[0]=0;for(let a=1;a<1024;a++)t[a]=e(a);for(let e=1024;e<2048;e++)t[e]=0x38000000+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=0x47800000,e[32]=0x80000000,e[63]=0xc7800000;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=0x80000000+(t-32<<23);return e}(),a=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return n=>{let r=new ArrayBuffer(4*n.length),i=new Uint32Array(r);for(let r=0;r<n.length;r++){let s=n[r],l=e[a[s>>10]+(1023&s)]+t[s>>10];i[r]=l}return new Float32Array(r)}})()(p);else throw Error(`Unsupported quantization type ${i.dtype} for weight type float32.`);else if("int32"===r){if("uint8"!==i.dtype&&"uint16"!==i.dtype)throw Error(`Unsupported quantization type ${i.dtype} for weight type int32.`);a=new Int32Array(p.length);for(let e=0;e<p.length;e++){let t=p[e];a[e]=Math.round(t*i.scale+i.min)}}else throw Error(`Unsupported dtype in weight '${n}': ${r}`);l+=s*o}else if("string"===r){let n=P(e.shape);a=[];for(let e=0;e<n;e++){let e=new Uint32Array(t.slice(l,l+4))[0];l+=4;let n=new Uint8Array(t.slice(l,l+e));a.push(n),l+=e}}else{let e=nW[r];if("float32"===r)a=new Float32Array(t);else if("int32"===r)a=new Int32Array(t);else if("bool"===r)a=new Uint8Array(t);else if("complex64"===r){a=new Float32Array(t);let e=new Float32Array(a.length/2),n=new Float32Array(a.length/2);for(let t=0;t<e.length;t++)e[t]=a[2*t],n[t]=a[2*t+1];let r=nU(e,i,"float32"),s=nU(n,i,"float32"),l=nz(r,s);return r.dispose(),s.dispose(),l}else throw Error(`Unsupported dtype in weight '${n}': ${r}`);l+=s*e}return nU(a,i,r)}(e,a.slice(r,r+t)),r+=t}return n}(e,t),n={},r=[];return t.forEach(e=>{"optimizer"===e.group?r.push({name:e.name,tensor:a[e.name]}):n[e.name]=a[e.name]}),{modelWeights:n,optimizerWeights:r}}(n.weightData,n.weightSpecs);l.loadWeights(e,i),null!=l.optimizer&&t.length>0&&await l.optimizer.setWeights(t),nq(e),nq(t.map(e=>e.tensor))}return l}hv.className="Functional",rD(hv);class hw extends hg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:di("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new pq(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,a=e instanceof hw||e instanceof hg;if(a){if(1!==(t=e).outputs.length)throw new pq("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new pq("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new pq("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=uc({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(a)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new pq(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new pq("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,a,n){if((null==a||null!=n&&n>0)&&(a=t.sourceLayer,n=t.nodeIndex),0===a.inboundNodes.length)return[t];{let t=a.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{let a=[];for(let n=0;n<t.inboundLayers.length;n++){let r=t.inputTensors[n];for(let i of e(r,t.inboundLayers[n],t.nodeIndices[n]))-1===a.indexOf(i)&&a.push(i)}return a}}}(this.outputs[0])}this.inboundNodes=[],new ud({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pJ(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ut(e),0===this.inputs.length||0===this.outputs.length)throw TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new hg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,a=console.log){this.built||this.build(),super.summary(e,t,a)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,a={}){if(!this.built)throw new pj("The model needs to be compiled before being used.");return this.model.evaluate(e,t,a)}async evaluateDataset(e,t){if(!this.built)throw new pj("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,a={}){if(!this.built)throw new pj("The model needs to be compiled before being used.");return this.model.fit(e,t,a)}async fitDataset(e,t){if(!this.built)throw new pj("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,a={},n=!1){let r,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new pq("Legacy serialization format not supported yet.");r=t}else V(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,i=t;let s=new e(i);if(!(s instanceof hw))throw new pK(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(let e of r){let t=uB(e,void 0,n);n&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new pq("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new pq("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let a={};a.className=t.getClassName(),a.config=t.getConfig(),e.push(a)}return{name:this.name,layers:e}}}function hx(e){return new hw(e)}function hk(e){return uc(e)}hw.className="Sequential",rD(hw);class hN extends rR{getConfig(){return{}}}class hI extends hN{apply(e,t=1){return function(e,t=1){if(1!==t)throw new pK(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return i9(e)}(e,t)}}hI.className="elu",rD(hI);class hS extends hN{apply(e){return sj(e)}}hS.className="selu",rD(hS);class hT extends hN{apply(e){return sG(e)}}hT.className="relu",rD(hT);class hC extends hN{apply(e){return nj(()=>s$(6,sG(e)))}}hC.className="relu6",rD(hC);class h$ extends hN{apply(e){return e}}h$.className="linear",rD(h$);class hE extends hN{apply(e){return sK(e)}}hE.className="sigmoid",rD(hE);class h_ extends hN{apply(e){return nj(()=>iH(rw(.5,rN(.2,e)),0,1))}}h_.className="hardSigmoid",rD(h_);class hR extends hN{apply(e){return s0(e)}}hR.className="softplus",rD(hR);class hA extends hN{apply(e){return nj(()=>rk(e,rw(rP(e),1)))}}hA.className="softsign",rD(hA);class hD extends hN{apply(e){return s3(e)}}hD.className="tanh",rD(hD);class hF extends hN{apply(e,t=-1){return s1(e,t)}}hF.className="softmax",rD(hF);class hO extends hN{apply(e,t=-1){return sh(e,t)}}hO.className="logSoftmax",rD(hO);class hL extends hN{apply(e){return nj(()=>nj(()=>{let t=rN(.5,rw(1,i8(rk(e,Math.sqrt(2)))));return rN(e,t)}))}}hL.className="gelu",rD(hL);class hM extends hN{apply(e){return nj(()=>rN(.5,rN(e,rw(1,s3(rN(rI(rk(2,Math.PI)),rw(e,rN(.044715,rV(e,3)))))))))}}hM.className="gelu_new",rD(hM);class hV extends hN{apply(e){return nj(()=>rN(e,s3(s0(e))))}}hV.className="mish",rD(hV);class hB extends hN{apply(e,t=1){return nj(()=>rN(sK(rN(e,t)),e))}}function hz(e){return e.getClassName()}function hP(e,t={}){return p9(e,rA.getMap().classNameMap,t,"activation")}function hU(e){if(null==e){let e={};return e.className="linear",e.config={},hP(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},hP(t)}return e instanceof hN?e:hP(e)}hB.className="swish",rD(hB);class hW extends rR{}class hG extends hW{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return nj(()=>{let t=sD([1]);return this.hasL1&&(t=rw(t,su(rN(this.l1,rP(e))))),this.hasL2&&(t=rw(t,su(rN(this.l2,rN(e,e))))),iM(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}hG.className="L1L2",rD(hG);let hH={l1l2:"L1L2"};function hj(e,t={}){return p9(e,rA.getMap().classNameMap,t,"regularizer")}function hq(e){return null==e?null:"string"==typeof e?hj({className:e in hH?hH[e]:e,config:{}}):e instanceof hW?e:hj(e)}class hK extends uh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){let a=sG(e=ue(e));return null!=this.maxValue&&(a=iH(a,0,this.maxValue)),a}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue};return Object.assign(e,super.getConfig()),e}}hK.className="ReLU",rD(hK);class hX extends uh{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return sl(ue(e),this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}}hX.className="LeakyReLU",rD(hX);class hY extends uh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=d5(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=hq(e.alphaRegularizer),this.alphaConstraint=u$(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if("number"==typeof e.sharedAxes)this.sharedAxes=[e.sharedAxes];else throw new pq(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){let t=(e=ut(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let a={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)a[t]=e[t];this.inputSpec=[new ul({ndim:e.length,axes:a})],this.built=!0}call(e,t){return sM(e=ue(e),this.alpha.read())}getConfig(){let e={alphaInitializer:p3(this.alphaInitializer),alphaRegularizer:p3(this.alphaRegularizer),alphaConstraint:p3(this.alphaConstraint),sharedAxes:this.sharedAxes};return Object.assign(e,super.getConfig()),e}}hY.className="PReLU",rD(hY);class hJ extends uh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new pK(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return i9(ue(e))}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}}hJ.className="ELU",rD(hJ);class hZ extends uh{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let a=ue(e);return rN(a,rb(si(a,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta};return Object.assign(e,super.getConfig()),e}}hZ.className="ThresholdedReLU",rD(hZ);class hQ extends uh{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=new hF().apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return nj(()=>{let a=ue(e),n=t.mask;if(null!=n){let e=rN(rB(sF(a.shape),rb(n,a.dtype)),r$(-1e9));a=rw(a,e)}if(this.axis instanceof Array)if(this.axis.length>1)return i7(rB(a,sx(a,this.axis,!0)));else return this.softmax(a,this.axis[0]);return this.softmax(a,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}function h1(e,t,a){if("number"==typeof e)return pJ(e,t);if(e.length!==t)throw new pq(`The ${a} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let n=0;n<t;++n){let r=e[n];if(r!==parseInt(r.toString(),10))throw new pq(`The ${a} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function h0(e,t,a,n,r=1){let i;return null==e?e:Math.floor((("same"===a?e:e-(t+(t-1)*(r-1))+1)+n-1)/n)}function h2(e,t,a,n){if(null==e)return null;if("valid"===n)e=e*t+dI([a-t,0]);else if("same"===n)e*=t;else throw new pq(`Unsupport padding mode: ${n}.`);return e}function h4(e,t){return nj(()=>(dm(t),"channelsFirst"===t)?ln(e,[0,2,3,1]):e)}function h6(e,t){return nj(()=>(dm(t),"channelsFirst"===t)?ln(e,[0,2,3,4,1]):e)}function h3(e,t,a,n=[1,1],r="valid",i,s,l=null){return nj(()=>{if(null==i&&(i=dC()),dm(i),3!==e.rank&&4!==e.rank)throw new pq(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new pq(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let o=h4(e,i);if("causal"===r)throw new pK("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return o=lg({x:o,filter:t,strides:n,pad:"same"===r?"same":"valid",dilations:s,dataFormat:"NHWC",bias:a,activation:l}),"channelsFirst"===i&&(o=ln(o,[0,3,1,2])),o})}hQ.className="Softmax",rD(hQ);class h9 extends uh{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",h9.verifyArgs(t),this.rank=e,dt(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new pK(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=h1(t.kernelSize,e,"kernelSize"),this.strides=h1(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,dc(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,dm(this.dataFormat),this.activation=hU(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=d5(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=u$(t.biasConstraint),this.biasRegularizer=hq(t.biasRegularizer),this.activityRegularizer=hq(t.activityRegularizer),this.dilationRate=h1(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new pq(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new pq(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new pq(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(pZ("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!de(e.kernelSize,"number",1,3))throw new pq(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:hz(this.activation),useBias:this.useBias,biasInitializer:p3(this.biasInitializer),biasRegularizer:p3(this.biasRegularizer),activityRegularizer:p3(this.activityRegularizer),biasConstraint:p3(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}}class h5 extends h9{constructor(e,t){super(e,t),this.kernel=null,h5.verifyArgs(t),this.filters=t.filters,dt(this.filters,"filters"),this.kernelInitializer=d5(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=u$(t.kernelConstraint),this.kernelRegularizer=hq(t.kernelRegularizer)}build(e){e=ut(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new pq(`The channel dimension of the input should be defined. Found ${e[t]}`);let a=e[t],n=this.kernelSize.concat([a,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:a}}],this.built=!0}call(e,t){return nj(()=>{let t;e=ue(e);let a=null==this.bias?null:this.bias.read(),n=da(this.activation.getClassName());if(null!=n&&2===this.rank)t=h3(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,n);else{if(1===this.rank)t=function(e,t,a,n=1,r="valid",i,s=1){return nj(()=>{if(null==i&&(i=dC()),dm(i),3!==e.shape.length)throw new pq(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new pq(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=a&&1!==a.shape.length)throw new pq(`The bias for a conv1dWithBias operation should be 1, but is ${a.shape.length} instead`);if("channelsFirst"===i&&(e=ln(e,[0,2,1])),"causal"===r)throw new pK("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=iZ(e,t,n,"same"===r?"same":"valid","NWC",s);return null!=a&&(l=dB(l,a)),l})}(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=h3(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(3===this.rank)t=function(e,t,a,n=[1,1,1],r="valid",i,s){return nj(()=>{if(null==i&&(i=dC()),dm(i),4!==e.rank&&5!==e.rank)throw new pq(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new pq(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let l=h6(e,i);if("causal"===r)throw new pK("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=i0(l,t,n,"same"===r?"same":"valid","NDHWC",s),null!=a&&(l=dB(l,a)),"channelsFirst"===i&&(l=ln(l,[0,4,1,2,3])),l})}(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new pK("convolutions greater than 3D are not implemented yet.");null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=ut(e);let t=[],a="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<a.length;++e){let n=h0(a[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(n)}let n=[e[0]];return"channelsLast"===this.dataFormat?(n=n.concat(t)).push(this.filters):(n.push(this.filters),n=n.concat(t)),n}getConfig(){let e={filters:this.filters,kernelInitializer:p3(this.kernelInitializer),kernelRegularizer:p3(this.kernelRegularizer),kernelConstraint:p3(this.kernelConstraint)};return Object.assign(e,super.getConfig()),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new pq(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class h8 extends h5{constructor(e){super(2,e),h8.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!de(e.kernelSize,"number",1,2))throw new pq(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}h8.className="Conv2D",rD(h8);class h7 extends h5{constructor(e){super(3,e),h7.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!(Array.isArray(e.kernelSize)&&(1===e.kernelSize.length||3===e.kernelSize.length)))throw new pq(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}h7.className="Conv3D",rD(h7);class me extends h8{constructor(e){if(super(e),this.inputSpec=[new ul({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new pq(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ut(e)).length)throw new pq("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new pq("The channel dimension of the inputs should be defined. Found `None`.");let a=e[t],n=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ul({ndim:4,axes:{[t]:a}})],this.built=!0}call(e,t){return nj(()=>{let t,a,n=ue(e);if(4!==n.shape.length)throw new pq(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,i=r[0];"channelsFirst"===this.dataFormat?(t=2,a=3):(t=1,a=2);let s=r[t],l=r[a],o=this.kernelSize[0],p=this.kernelSize[1],d=this.strides[0],u=this.strides[1],h=[i,h2(s,d,o,this.padding),h2(l,u,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(n=ln(n,[0,2,3,1]));let m=i1(n,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=ln(m,[0,3,1,2])),null!=this.bias&&(m=dB(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(e){let t,a,n,r=(e=ut(e)).slice();"channelsFirst"===this.dataFormat?(t=1,a=2,n=3):(t=3,a=1,n=2);let i=this.kernelSize[0],s=this.kernelSize[1],l=this.strides[0],o=this.strides[1];return r[t]=this.filters,r[a]=h2(r[a],l,i,this.padding),r[n]=h2(r[n],o,s,this.padding),r}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}me.className="Conv2DTranspose",rD(me);class mt extends h7{constructor(e){if(super(e),this.inputSpec=[new ul({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new pq(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ut(e)).length)throw new pq("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new pq("The channel dimension of the inputs should be defined. Found `None`.");let a=e[t],n=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ul({ndim:5,axes:{[t]:a}})],this.built=!0}call(e,t){return nj(()=>{let t,a,n,r=ue(e);if(5!==r.shape.length)throw new pq(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let i=r.shape,s=i[0];"channelsFirst"===this.dataFormat?(n=2,t=3,a=4):(n=1,t=2,a=3);let l=i[n],o=i[t],p=i[a],d=this.kernelSize[0],u=this.kernelSize[1],h=this.kernelSize[2],m=this.strides[0],c=this.strides[1],f=this.strides[2],g=h2(l,m,d,this.padding),v=[s,g,h2(o,c,u,this.padding),h2(p,f,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=ln(r,[0,2,3,4,1]));let b=i4(r,this.kernel.read(),v,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=ln(b,[0,4,1,2,3])),null!==this.bias&&(b=dB(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b})}computeOutputShape(e){let t,a,n,r,i=(e=ut(e)).slice();"channelsFirst"===this.dataFormat?(t=1,a=2,n=3,r=4):(t=4,a=1,n=2,r=3);let s=this.kernelSize[0],l=this.kernelSize[1],o=this.kernelSize[2],p=this.strides[0],d=this.strides[1],u=this.strides[2];return i[t]=this.filters,i[a]=h2(i[a],p,s,this.padding),i[n]=h2(i[n],d,l,this.padding),i[r]=h2(i[r],u,o,this.padding),i}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}mt.className="Conv3DTranspose",rD(mt);class ma extends h5{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new pq("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new pq("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new pq(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=d5(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=hq(t.depthwiseRegularizer),this.depthwiseConstraint=u$(t.depthwiseConstraint),this.pointwiseInitializer=d5(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=hq(t.pointwiseRegularizer),this.pointwiseConstraint=u$(t.pointwiseConstraint)}build(e){if((e=ut(e)).length<this.rank+2)throw new pq(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new pq(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let a=e[t],n=this.kernelSize.concat([a,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(a*this.depthMultiplier,this.filters),this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new ul({ndim:this.rank+2,axes:{[t]:a}})],this.built=!0}call(e,t){return nj(()=>{let t;if(e=ue(e),1===this.rank)throw new pK("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ln(e,[0,2,3,1])),t=sq(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=dB(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ln(t,[0,3,1,2])),t})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=p3(this.depthwiseInitializer),e.pointwiseInitializer=p3(this.pointwiseInitializer),e.depthwiseRegularizer=p3(this.depthwiseRegularizer),e.pointwiseRegularizer=p3(this.pointwiseRegularizer),e.depthwiseConstraint=p3(this.depthwiseConstraint),e.pointwiseConstraint=p3(this.pointwiseConstraint),e}}ma.className="SeparableConv";class mn extends ma{constructor(e){super(2,e)}}mn.className="SeparableConv2D",rD(mn);class mr extends h5{constructor(e){super(1,e),mr.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!de(e.kernelSize,"number",1,1))throw new pq(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}mr.className="Conv1D",rD(mr);class mi extends uh{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return nj(()=>{if(e=ue(e),"channelsLast"===this.dataFormat){let t=dR(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return dR(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=dR(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return dR(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}mi.className="Cropping2D",rD(mi);class ms extends uh{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dm(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,p7(dl,"InterpolationFormat",this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],a=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,a]}{let t=null==e[1]?null:this.size[0]*e[1],a=null==e[2]?null:this.size[1]*e[2];return[e[0],t,a,e[3]]}}call(e,t){return nj(()=>{let t=ue(e),a=t.shape;if("channelsFirst"===this.dataFormat){t=ln(t,[0,2,3,1]);let e=this.size[0]*a[2],n=this.size[1]*a[3];return ln("nearest"===this.interpolation?lJ.resizeNearestNeighbor(t,[e,n]):lJ.resizeBilinear(t,[e,n]),[0,3,1,2])}{let e=this.size[0]*a[1],n=this.size[1]*a[2];return"nearest"===this.interpolation?lJ.resizeNearestNeighbor(t,[e,n]):lJ.resizeBilinear(t,[e,n])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}}ms.className="UpSampling2D",rD(ms);class ml extends h9{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=d5(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=u$(e.depthwiseConstraint),this.depthwiseRegularizer=hq(e.depthwiseRegularizer)}build(e){if((e=ut(e)).length<4)throw new pq(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new pq(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let a=e[t],n=[this.kernelSize[0],this.kernelSize[1],a,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[a*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return nj(()=>{let t=function(e,t,a=[1,1],n="valid",r,i){return nj(()=>{null==r&&(r=dC()),dm(r);let i=h4(e,r);if(4!==e.rank)throw new pq(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new pq(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=i3(i,t,a,"same"===n?"same":"valid","NHWC",null),"channelsFirst"===r&&(i=ln(i,[0,3,1,2])),i})}(e=ue(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,0);return this.useBias&&(t=dB(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=ut(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],a="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=h0(t,this.kernelSize[0],this.padding,this.strides[0]),i=h0(a,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,i]:[e[0],r,i,n]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=p3(this.depthwiseInitializer),e.depthwiseRegularizer=p3(this.depthwiseRegularizer),e.depthwiseConstraint=p3(this.depthwiseRegularizer),e}}function mo(e,t,a,n){if(Array.isArray(e)){if(null!=t||null!=a)throw new pq("When inputs is an array, neither initialState or constants should be provided");null!=n&&(a=e.slice(e.length-n,e.length),e=e.slice(0,e.length-n)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:a=r(a)}}function mp(e,t,a,n=!1,r,i,s=!1,l=!1){return nj(()=>{let o,p,d,u=t.shape.length;if(u<3)throw new pq(`Input should be at least 3D, but is ${u}D.`);let h=[1,0].concat(dS(2,u));if(t=ln(t,h),null!=i)throw new pK("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=rb(rb(r,"bool"),"float32")).rank===u-1&&(r=se(r,-1)),r=ln(r,h)),n&&(t=sH(t,0),null!=r&&(r=sH(r,0)));let m=[],c=a,f=t.shape[0],g=s7(t);null!=r&&(p=s7(r));for(let t=0;t<f;++t){let a=g[t],n=nj(()=>e(a,c));if(null==r)o=n[0],c=n[1];else{let e=nj(()=>{let e=p[t],a=rB(sO(e),e);return{output:rw(rN(n[0],e),rN(c[0],a)),newStates:c.map((t,r)=>rw(rN(n[1][r],e),rN(t,a)))}});o=e.output,c=e.newStates}l&&m.push(o)}return l&&(d=s6(m,1)),[o,d,c]})}ml.className="DepthwiseConv2D",rD(ml);class md extends uh{constructor(e){let t;if(super(e),null==e.cell)throw new pq("cell property is missing for the constructor of RNN.");if(null==(t=Array.isArray(e.cell)?new mb({cells:e.cell}):e.cell).stateSize)throw new pq("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ul({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?dS(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){let t;d8(e)&&(e=e[0]);let a=this.cell.stateSize;Array.isArray(a)||(a=[a]);let n=a[0];if(t=this.returnSequences?[e[0],e[1],n]:[e[0],n],!this.returnState)return t;{let n=[];for(let t of a)n.push([e[0],t]);return[t].concat(n)}}computeMask(e,t){return nj(()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;return this.returnState?[e].concat(this.states.map(e=>null)):e})}get states(){if(null!=this.states_)return this.states_;{let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let a=0;a<e;++a)t.push(null);return t}}set states(e){this.states_=e}build(e){let t;if(null!=this.numConstants)throw new pK("Constants support is not implemented in RNN yet.");d8(e)&&(e=e[0]);let a=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ul({shape:[a,null,...n]});let r=[e[0]].concat(e.slice(2));if(this.cell.build(r),t=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!U(this.stateSpec.map(e=>e.shape[e.shape.length-1]),t))throw new pq(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=t.map(e=>new ul({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){nj(()=>{if(!this.stateful)throw new pH("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape[0];if(null==a)throw new pq("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>sD([a,e])):this.states_=[sD([a,this.cell.stateSize])];else if(null==e)nq(this.states_),null!=this.keptStates&&(nq(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>sD([a,e])):this.states_[0]=sD([a,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pq(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):nq(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=[a,Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize];if(!U(n.shape,r))throw new pq(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>nK(e.clone()))})}apply(e,t){let a=null==t?null:t.initialState,n=null==t?null:t.constants;null==t&&(t={});let r=mo(e,a,n,this.numConstants);e=r.inputs,a=r.initialState,n=r.constants;let i=[],s=[];if(null!=a){for(let e of(t.initialState=a,i=i.concat(a),this.stateSpec=[],a))this.stateSpec.push(new ul({shape:e.shape}));s=s.concat(this.stateSpec)}if(null!=n&&(t.constants=n,i=i.concat(n),this.numConstants=n.length),!(i[0]instanceof uo))return super.apply(e,t);{let a=[e].concat(i),n=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=n;let l=super.apply(a,t);return this.inputSpec=r,l}}call(e,t){return nj(()=>{let a=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;e=ue(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new pq(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let s={training:n},l=mp((e,t)=>{let a=this.cell.call([e].concat(t),s);return[a[0],a.slice(1)]},e,r,this.goBackwards,a,null,this.unroll,this.returnSequences),o=l[0],p=l[1],d=l[2];this.stateful&&this.resetStates(d,n);let u=this.returnSequences?p:o;return this.returnState?[u].concat(d):u})}getInitialState(e){return nj(()=>{let t=sD(e.shape);return(t=d$(t=su(t,[1,2])),Array.isArray(this.cell.stateSize))?this.cell.stateSize.map(e=>e>1?dF(t,[1,e]):t):this.cell.stateSize>1?[dF(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let a=this.cell.getConfig();return this.getClassName()===md.className&&(t.cell={className:this.cell.getClassName(),config:a}),Object.assign(Object.assign(Object.assign({},a),e),t)}static fromConfig(e,t,a={}){let n=uB(t.cell,a);return new e(Object.assign(t,{cell:n}))}}md.className="RNN",rD(md);class mu extends uh{}class mh extends mu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dt(this.units,"units"),this.activation=hU(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=d5(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=d5(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=d5(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hq(e.kernelRegularizer),this.recurrentRegularizer=hq(e.recurrentRegularizer),this.biasRegularizer=hq(e.biasRegularizer),this.kernelConstraint=u$(e.kernelConstraint),this.recurrentConstraint=u$(e.recurrentConstraint),this.biasConstraint=u$(e.biasConstraint),this.dropout=dN([1,dI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=dN([1,dI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ut(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return nj(()=>{let a;if(2!==e.length)throw new pq(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=my({ones:()=>sO(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=my({ones:()=>sO(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,s=this.recurrentDropoutMask;a=null!=i?dL(rN(e,i),this.kernel.read()):dL(e,this.kernel.read()),null!=this.bias&&(a=dB(a,this.bias.read())),null!=s&&(n=rN(n,s));let l=rw(a,dL(n,this.recurrentKernel.read()));return null!=this.activation&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:hz(this.activation),useBias:this.useBias,kernelInitializer:p3(this.kernelInitializer),recurrentInitializer:p3(this.recurrentInitializer),biasInitializer:p3(this.biasInitializer),kernelRegularizer:p3(this.kernelRegularizer),recurrentRegularizer:p3(this.recurrentRegularizer),biasRegularizer:p3(this.biasRegularizer),activityRegularizer:p3(this.activityRegularizer),kernelConstraint:p3(this.kernelConstraint),recurrentConstraint:p3(this.recurrentConstraint),biasConstraint:p3(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}mh.className="SimpleRNNCell",rD(mh);class mm extends md{constructor(e){e.cell=new mh(e),super(e)}call(e,t){return nj(()=>{null!=this.cell.dropoutMask&&(nq(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nq(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:a,training:n,initialState:r})})}static fromConfig(e,t){return new e(t)}}mm.className="SimpleRNN",rD(mm);class mc extends mu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new pq("GRUCell does not support reset_after parameter set to true.");this.units=e.units,dt(this.units,"units"),this.activation=hU(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hU(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=d5(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=d5(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=d5(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hq(e.kernelRegularizer),this.recurrentRegularizer=hq(e.recurrentRegularizer),this.biasRegularizer=hq(e.biasRegularizer),this.kernelConstraint=u$(e.kernelConstraint),this.recurrentConstraint=u$(e.recurrentConstraint),this.biasConstraint=u$(e.biasConstraint),this.dropout=dN([1,dI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=dN([1,dI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=ut(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return nj(()=>{let a,n;if(2!==e.length)throw new pq(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let r=null!=t.training&&t.training,i=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=my({ones:()=>sO(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=my({ones:()=>sO(i),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=rN(e,s[0]));let o=dL(e,this.kernel.read());this.useBias&&(o=dB(o,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=rN(i,l[0]));let p=this.recurrentKernel.read(),[d,u]=s2(p,[2*this.units,this.units],p.rank-1),h=dL(i,d),[m,c,f]=s2(o,3,o.rank-1),[g,v]=s2(h,2,h.rank-1);a=this.recurrentActivation.apply(rw(m,g));let b=dL(rN(this.recurrentActivation.apply(rw(c,v)),i),u);n=this.activation.apply(rw(f,b));let y=rw(rN(a,i),rN(rw(1,s_(a)),n));return[y,y]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:hz(this.activation),recurrentActivation:hz(this.recurrentActivation),useBias:this.useBias,kernelInitializer:p3(this.kernelInitializer),recurrentInitializer:p3(this.recurrentInitializer),biasInitializer:p3(this.biasInitializer),kernelRegularizer:p3(this.kernelRegularizer),recurrentRegularizer:p3(this.recurrentRegularizer),biasRegularizer:p3(this.biasRegularizer),activityRegularizer:p3(this.activityRegularizer),kernelConstraint:p3(this.kernelConstraint),recurrentConstraint:p3(this.recurrentConstraint),biasConstraint:p3(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}mc.className="GRUCell",rD(mc);class mf extends md{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mc(e),super(e)}call(e,t){return nj(()=>{null!=this.cell.dropoutMask&&(nq(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nq(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:a,training:n,initialState:r})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}mf.className="GRU",rD(mf);class mg extends mu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dt(this.units,"units"),this.activation=hU(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hU(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=d5(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=d5(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=d5(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=hq(e.kernelRegularizer),this.recurrentRegularizer=hq(e.recurrentRegularizer),this.biasRegularizer=hq(e.biasRegularizer),this.kernelConstraint=u$(e.kernelConstraint),this.recurrentConstraint=u$(e.recurrentConstraint),this.biasConstraint=u$(e.biasConstraint),this.dropout=dN([1,dI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=dN([1,dI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let a,n=(e=ut(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,n=this.units;a=new((t=class extends dW{apply(t,a){let r=e.apply([n]),i=new dH().apply([n]),s=e.apply([2*n]);return dD(dD(r,i),s)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return nj(()=>{let a,n,r=null!=t.training&&t.training;if(3!==e.length)throw new pq(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let i=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=my({ones:()=>sO(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=my({ones:()=>sO(i),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,o=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=rN(e,l[0]));let p=dL(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=rN(i,o[0])),p=rw(p,dL(i,this.recurrentKernel.read())),this.useBias&&(p=dB(p,this.bias.read()));let[d,u,h,m]=s2(p,4,p.rank-1);a=this.recurrentActivation.apply(d),n=rw(rN(this.recurrentActivation.apply(u),s),rN(a,this.activation.apply(h)));let c=rN(this.recurrentActivation.apply(m),this.activation.apply(n));return[c,c,n]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:hz(this.activation),recurrentActivation:hz(this.recurrentActivation),useBias:this.useBias,kernelInitializer:p3(this.kernelInitializer),recurrentInitializer:p3(this.recurrentInitializer),biasInitializer:p3(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:p3(this.kernelRegularizer),recurrentRegularizer:p3(this.recurrentRegularizer),biasRegularizer:p3(this.biasRegularizer),activityRegularizer:p3(this.activityRegularizer),kernelConstraint:p3(this.kernelConstraint),recurrentConstraint:p3(this.recurrentConstraint),biasConstraint:p3(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}mg.className="LSTMCell",rD(mg);class mv extends md{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mg(e),super(e)}call(e,t){return nj(()=>{null!=this.cell.dropoutMask&&(nq(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nq(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:a,training:n,initialState:r})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}mv.className="LSTM",rD(mv);class mb extends mu{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return nj(()=>{let a,n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let i=[];for(let s=0;s<this.cells.length;++s){let l=this.cells[s];n=r[s],a=0===s?[e[0]].concat(n):[a[0]].concat(n),a=l.call(a,t),i.push(a.slice(1))}for(let e of(n=[],i.slice().reverse()))n.push(...e);return[a[0]].concat(n)})}build(e){let t;d8(e)&&(e=e[0]),this.cells.forEach((a,n)=>{dv(`RNNCell_${n}`,()=>{a.build(e),t=Array.isArray(a.stateSize)?a.stateSize[0]:a.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign(Object.assign({},e),{cells:t})}static fromConfig(e,t,a={}){let n=[];for(let e of t.cells)n.push(uB(e,a));return new e({cells:n})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return ui(e)}setWeights(e){let t=[];for(let a of this.cells){let n=a.weights.length,r=e.splice(n);for(let e=0;e<a.weights.length;++e)t.push([a.weights[e],r[e]])}us(t)}}function my(e){let{ones:t,rate:a,training:n=!1,count:r=1,dropoutFunc:i}=e,s=()=>{var e;return null!=i?i(t(),a):(e=t(),nj(()=>lr(e,a,void 0,void 0)))},l=()=>dz(s,t,n);return!r||r<=1?nK(l().clone()):Array(r).fill(void 0).map(l).map(e=>nK(e.clone()))}mb.className="StackedRNNCells",rD(mb);var mw=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&0>t.indexOf(n)&&(a[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,n=Object.getOwnPropertySymbols(e);r<n.length;r++)0>t.indexOf(n[r])&&Object.prototype.propertyIsEnumerable.call(e,n[r])&&(a[n[r]]=e[n[r]]);return a};class mx extends md{constructor(e){if(e.unroll)throw new pK("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new pK("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ul({ndim:5})]}call(e,t){return nj(()=>{if(null!=this.cell.dropoutMask&&(nq(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nq(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new pq("ConvRNN2D cell does not support constants");let a=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:a,training:n,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...[,,].fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return nj(()=>{let{stateSize:t}=this.cell,a=e.shape,n=this.computeSingleOutputShape(a),r=sD([n[0],...n.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){nj(()=>{if(!this.stateful)throw new pH("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape,n=this.computeSingleOutputShape(a),r=[n[0],...n.slice(2)];if(null==a[0])throw new pq("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>sD(r)):this.states_=[sD(r)];else if(null==e)nq(this.states_),null!=this.keptStates&&(nq(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>sD(r)):this.states_[0]=sD(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pq(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):nq(this.states_);for(let t=0;t<this.states_.length;++t){let a=e[t];if(!U(a.shape,r))throw new pq(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map(e=>nK(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:a,kernelSize:n,padding:r,strides:i,dilationRate:s}=this.cell,l="channelsFirst"===t,o=e[l?3:2],p=e[l?4:3],d=h0(o,n[0],r,i[0],s[0]),u=h0(p,n[1],r,i[1],s[1]);return[...e.slice(0,2),...l?[a,d,u]:[d,u,a]]}}mx.className="ConvRNN2D";class mk extends mg{constructor(e){let{filters:t,kernelSize:a,strides:n,padding:r,dataFormat:i,dilationRate:s}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,dt(this.filters,"filters"),this.kernelSize=h1(a,2,"kernelSize"),this.kernelSize.forEach(e=>dt(e,"kernelSize")),this.strides=h1(n||1,2,"strides"),this.strides.forEach(e=>dt(e,"strides")),this.padding=r||"valid",dc(this.padding),this.dataFormat=i||"channelsLast",dm(this.dataFormat),this.dilationRate=h1(s||1,2,"dilationRate"),this.dilationRate.forEach(e=>dt(e,"dilationRate"))}build(e){var t;e=ut(e);let a="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[a])throw new pq(`The channel dimension of the input should be defined. Found ${e[a]}`);let n=e[a],r=this.kernelSize.concat([n,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let a=this.biasInitializer,n=this.filters;e=new((t=class extends dW{apply(e,t){let r=a.apply([n]);return dA([r,sF([n]),a.apply([2*n])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return nj(()=>{if(3!==e.length)throw new pq(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=t.training||!1,n=e[0],r=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=my({ones:()=>sO(n),rate:this.dropout,training:a,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,l=(e,t,a)=>t&&t[a]?rN(t[a],e):e,o=l(n,s,0),p=l(n,s,1),d=l(n,s,2),u=l(n,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=my({ones:()=>sO(r),rate:this.recurrentDropout,training:a,count:4,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,m=l(r,h,0),c=l(r,h,1),f=l(r,h,2),g=l(r,h,3),[v,b,y,w]=s2(this.kernel.read(),4,3),[x,k,N,I]=this.useBias?s2(this.bias.read(),4):[null,null,null,null];o=this.inputConv(o,v,x,this.padding),p=this.inputConv(p,b,k,this.padding),d=this.inputConv(d,y,N,this.padding),u=this.inputConv(u,w,I,this.padding);let[S,T,C,$]=s2(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,S),c=this.recurrentConv(c,T),f=this.recurrentConv(f,C),g=this.recurrentConv(g,$);let E=this.recurrentActivation.apply(rw(o,m)),_=this.recurrentActivation.apply(rw(p,c)),R=rw(rN(_,i),rN(E,this.activation.apply(rw(d,f)))),A=rN(this.recurrentActivation.apply(rw(u,g)),this.activation.apply(R));return[A,A,R]})}getConfig(){let e=super.getConfig(),{units:t}=e,a=mw(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},a),n)}inputConv(e,t,a,n){let r=iJ(e,t,this.strides,n||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return a?dB(r,a,this.dataFormat):r}recurrentConv(e,t){return iJ(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}mk.className="ConvLSTM2DCell",rD(mk);class mN extends mx{constructor(e){super(Object.assign(Object.assign({},e),{cell:new mk(e)}))}static fromConfig(e,t){return new e(t)}}mN.className="ConvLSTM2D",rD(mN);class mI extends uh{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,a=[];for(let e=0;e<this.noiseShape.length;++e)a.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return a}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,n=this.getNoiseShape(a);return dz(()=>{var e,t;return e=this.rate,t=this.seed,nj(()=>lr(a,e,n,t))},()=>a,e)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed};return Object.assign(e,super.getConfig()),e}dispose(){return super.dispose()}}mI.className="Dropout",rD(mI);class mS extends mI{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}}mS.className="SpatialDropout1D",rD(mS);class mT extends uh{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,dt(this.units,"units"),this.activation=hU(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=d5(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=d5(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=u$(e.kernelConstraint),this.biasConstraint=u$(e.biasConstraint),this.kernelRegularizer=hq(e.kernelRegularizer),this.biasRegularizer=hq(e.biasRegularizer),this.activityRegularizer=hq(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=ut(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=ut(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return nj(()=>{let a;this.invokeCallHook(e,t);let n=ue(e),r=da(this.activation.getClassName());return null!=r?a=dL(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=dL(n,this.kernel.read()),null!=this.bias&&(a=dB(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:hz(this.activation),useBias:this.useBias,kernelInitializer:p3(this.kernelInitializer),biasInitializer:p3(this.biasInitializer),kernelRegularizer:p3(this.kernelRegularizer),biasRegularizer:p3(this.biasRegularizer),activityRegularizer:p3(this.activityRegularizer),kernelConstraint:p3(this.kernelConstraint),biasConstraint:p3(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}}mT.className="Dense",rD(mT);class mC extends uh{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(let t of(e=ut(e)).slice(1))if(null==t)throw new pq(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],dk(e,1)]}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e);if("channelsFirst"===this.dataFormat&&a.rank>1){let e=[0];for(let t=2;t<a.rank;++t)e.push(t);e.push(1),a=ln(a,e)}var n=a;if(n.rank<=1)throw new pq(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);let r=[n.shape[0],dk(n.shape,1)];return iM(n,r)})}getConfig(){let e={};return null!=this.dataFormat&&(e.dataFormat=this.dataFormat),Object.assign(e,super.getConfig()),e}}mC.className="Flatten",rD(mC);class m$ extends uh{constructor(e){super(e),this.supportsMasking=!0,this.activation=hU(e.activation)}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e);return this.activation.apply(a)})}getConfig(){let e={activation:hz(this.activation)};return Object.assign(e,super.getConfig()),e}}m$.className="Activation",rD(m$);class mE extends uh{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return nj(()=>{var t,a;return t=e=ue(e),a=this.n,nj(()=>{if(2!==t.shape.length)throw new pq(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return dF(d$(t,1),[1,a,1])})})}getConfig(){let e={n:this.n};return Object.assign(e,super.getConfig()),e}}mE.className="RepeatVector",rD(mE);class m_ extends uh{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let a="Total size of new array must be unchanged.",n=t.slice(),r=1,i=null;for(let e=0;e<n.length;++e){let t=n[e];if(this.isUnknown(t))if(null===i)i=e;else throw new pq("Can only specifiy one unknown dimension.");else r*=t}let s=dk(e);if(null!==i){if(0===r||s%r!=0)throw new pq(a);n[i]=s/r}else if(s!==r)throw new pq(a);return n}computeOutputShape(e){let t=!1;for(let a=0;a<e.length;++a)if(this.isUnknown(e[a])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e),n=a.shape;return iM(a,n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape)))})}getConfig(){let e={targetShape:this.targetShape};return Object.assign(e,super.getConfig()),e}}m_.className="Reshape",rD(m_);class mR extends uh{constructor(e){if(super(e),null==e.dims)throw Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=dS(1,e.dims.length+1);if(!U(e.dims.slice().sort(),t))throw Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ul({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=ut(e)).slice();return this.dims.forEach((a,n)=>{t[n+1]=e[a]}),t}call(e,t){return ln(ue(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims};return Object.assign(e,super.getConfig()),e}}mR.className="Permute",rD(mR);class mA extends uh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e?this.maskValue=null==e.maskValue?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){return iw(sR(ue(e),this.maskValue),-1)}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e),n=iw(sR(a,this.maskValue),-1,!0);return rN(a,rb(n,a.dtype))})}}mA.className="Masking",rD(mA);class mD extends uh{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(p0(e.inputLength))}this.inputDim=e.inputDim,dt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,dt(this.outputDim,"outputDim"),this.embeddingsInitializer=d5(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=hq(e.embeddingsRegularizer),this.activityRegularizer=hq(e.activityRegularizer),this.embeddingsConstraint=u$(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return nj(()=>this.maskZero?sR(e=ue(e),rT(e)):null)}computeOutputShape(e){if(e=ut(e),null==this.inputLength)return[...e,this.outputDim];let t=p0(this.inputLength);if(t.length!==e.length-1)throw new pq(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let a=0;for(let n=0;n<t.length;++n){let r=t[n],i=e[n+1];if(null!=r&&null!=i&&r!==i)throw new pq(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[a]=i),a++}}return[e[0],...t,this.outputDim]}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e);"int32"!==a.dtype&&(a=rb(a,"int32"));let n=dM(this.embeddings.read(),iM(a,[a.size]));return iM(n,ut(this.computeOutputShape(a.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:p3(this.embeddingsInitializer),embeddingsRegularizer:p3(this.embeddingsRegularizer),activityRegularizer:p3(this.activityRegularizer),embeddingsConstraint:p3(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength};return Object.assign(e,super.getConfig()),e}}mD.className="Embedding",rD(mD);class mF extends uh{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new pK}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let a=e.slice(0,e.length-t.length);for(let n=0;n<t.length;++n){let r=e[e.length-t.length+n],i=t[n];if(null==r||null==i||r<0||i<0)a.push(null);else if(1===r)a.push(i);else if(1===i)a.push(r);else{if(r!==i)throw new pq("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));a.push(r)}}return a}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ut(e)]),e.length<2)throw new pq(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)null!=a&&null!==a[0]&&t.push(a[0]);if((t=p8(t)).length>1)throw new pq(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let a=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let n=null==e[t]?null:e[t].slice(1);a=this.computeElementwiseOpOutputShape(a,n)}let n=e.map(e=>e.length);-1===e.indexOf(null)&&1===p8(n).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return nj(()=>{if(!this.reshapeRequired)return this.mergeFunction(e);{let t=[],a=e.map(e=>e.rank);if(-1===a.indexOf(null)){let n=dI(a);for(let a of e){let e=a.rank;for(let t=0;t<n-e;++t)a=d$(a,1);t.push(a)}return this.mergeFunction(t)}{let a=!1;for(let n of e){let e=n.rank;if(null==e){let e=n.shape,r=e[0],i=e.slice(1).concat([r]),s=iM(n,[r].concat(dk(e.slice(1))));s=iM(s=ln(s,[1,0]),i),t.push(s),a=!0}else if(e>1){let r=dS(1,e).concat([0]);t.push(ln(n,r)),a=!0}else t.push(n)}let n=this.mergeFunction(t),r=n.rank;if(a)if(null==r){let e=n.shape,t=e.length,a=e[t-1],r=[a].concat(e.slice(0,e.length-1));n=iM(ln(iM(n,[-1,a]),[1,0]),r)}else r>1&&(n=ln(n,[r-1].concat(dS(0,r-1))));return n}}})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){let n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let a=[];for(let t of e)null!=t&&null!==t[0]&&a.push(t[0]);return 1===(a=p8(a)).length?a.concat(t):[null].concat(t)}computeMask(e,t){return nj(()=>{if(null==t)return null;if(!Array.isArray(t))throw new pq("`mask` should be an Array");if(!Array.isArray(e))throw new pq("`inputs` should be an Array");if(t.length!==e.length)throw new pq(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let a=(t=t.map(e=>null==e?e:se(e,0)))[0];for(let e=1;e<t.length-1;++e)a=sk(a,t[e]);return a})}}class mO extends mF{constructor(e){super(e)}mergeFunction(e){return nj(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=rw(t,e[a]);return t})}}mO.className="Add",rD(mO);class mL extends mF{constructor(e){super(e)}mergeFunction(e){return nj(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=rN(t,e[a]);return t})}}mL.className="Multiply",rD(mL);class mM extends mF{constructor(e){super(e)}mergeFunction(e){return nj(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=rw(t,e[a]);return rN(1/e.length,t)})}}mM.className="Average",rD(mM);class mV extends mF{constructor(e){super(e)}mergeFunction(e){return nj(()=>{let t=e[0];for(let a=1;a<e.length;++a)t=rH(t,e[a]);return t})}}mV.className="Maximum",rD(mV);class mB extends mF{constructor(e){super(e)}mergeFunction(e){return nj(()=>{let t=e[0];for(let a=1;a<e.length;++a)t=s$(t,e[a]);return t})}}mB.className="Minimum",rD(mB);class mz extends mF{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||1===e.length)throw new pq("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let a of e)if(null!=a){t=!1;break}if(t)return;let a=[];for(let t=0;t<e.length;++t){let n=e[t].slice();n.splice(this.axis,1);let r=!1;for(let e of a)if(U(e,n)){r=!0;break}r||a.push(n)}if(a.length>1)throw new pq("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return nj(()=>dA(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new pq("A `Concatenate` layer should be called on a list of inputs.");let t=e[0].slice(),a=this.axis<0?t.length+this.axis:this.axis;for(let n of e.slice(1)){if(null==t[a]||null==n[a]){t[a]=null;break}t[a]+=n[a]}return t}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new pq("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new pq("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new pq(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return nj(()=>{let a=!0;if(t.forEach(e=>{if(null!=e){a=!1;return}}),a)return null;let n=[];for(let a=0;a<e.length;++a)null==t[a]?n.push(rb(sO(e[a]),"bool")):t[a].rank<e[a].rank?n.push(se(t[a],-1)):n.push(t[a]);return iy(ij(n,this.axis),-1,!1)})}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}function mP(e,t){for(;e<0;)e+=t;return e}mz.className="Concatenate",rD(mz);class mU extends mF{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){V(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],a=e[1];if(t.length>3||a.length>3)throw new pK("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,a);if(t[n[0]]!==a[n[1]])throw new pq(`Dimension incompatibility: ${t[n[0]]} !== ${a[n[1]]}`)}mergeFunction(e){let t;if(2!==e.length)throw new pq(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let a=e[0],n=e[1];t=Array.isArray(this.axes)?this.axes.map((t,a)=>mP(t,e[a].shape.length)):[mP(this.axes,a.shape.length),mP(this.axes,n.shape.length)],this.normalize&&(a=uz(a,t[0]),n=uz(n,t[1]));var r=a,i=n,s=t;if(r.shape.length>3||i.shape.length>3)throw new pK("batchDot is not implemented for tensors of 4D or higher rank yet");if(V(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),V(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${i.shape.length}`),"number"==typeof s&&(s=[s,s]),"complex64"===r.dtype||"complex64"===i.dtype)throw new pK("batchDot is not implemented for complex64-type Tensors yet.");let l=r.shape.length,o=i.shape.length;null==s&&(s=[l-1,o-2]);let p=s;return nj(()=>{let e,t;if(l>o){e=l-o;let t=[];for(let a=0;a<e;++a)t.push(1);i=iM(i,i.shape.concat(t))}else if(o>l){e=o-l;let t=[];for(let a=0;a<e;++a)t.push(1);r=iM(r,r.shape.concat(t))}else e=0;if(2===r.shape.length&&2===i.shape.length)t=p[0]===p[1]?su(rN(r,i),p[0]):su(rN(ln(r,[1,0]),i),p[1]);else{let e=p[0]!==r.shape.length-1,a=p[1]===i.shape.length-1;t=sN(r,i,e,a)}if(e>0){let a;a=l>o?l+o-3:l-1;let n=[];for(let t=a;t<a+e;++t)n.push(t);t=s4(t,n)}return 1===t.shape.length&&(t=se(t,1)),t})}interpretAxes(e,t){let a;return Array.isArray(this.axes)?this.axes:[mP(this.axes,e.length),mP(this.axes,t.length)]}computeOutputShape(e){V(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),a=e[1].slice();if(t.length>3||a.length>3)throw new pK("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,a);t.splice(n[0],1),a.splice(n[1],1),a.splice(0,1);let r=t.concat(a);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize};return Object.assign(e,super.getConfig()),e}}mU.className="Dot",rD(mU);class mW extends uh{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e);return dz(()=>rw(dO(a.shape,0,this.stddev),a),()=>a,t.training||!1)})}}mW.className="GaussianNoise",rD(mW);class mG extends uh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return nj(()=>{this.invokeCallHook(e,t);let a=ue(e);return this.rate>0&&this.rate<1?dz(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return rN(a,dO(a.shape,1,e))},()=>a,t.training||!1):a})}}mG.className="GaussianDropout",rD(mG);class mH extends uh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ue(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return nj(()=>{if(this.rate<1&&this.rate>0){let a=this._getNoiseShape(e);return dz(()=>{let t=ue(e),n=ss(sU(a),this.rate);n=rb(n,"float32");let r=((1-this.rate)*(1+3.09091329228798*this.rate))**-.5,i=-(-1.7580993408473766*r)*this.rate,s=rw(rN(t,n),rN(rw(n,-1),-1.7580993408473766));return rw(rN(s,r),i)},()=>ue(e),t.training||!1)}return e})}}function mj(e,t,a,n,r,i=.001){let s;if(2===e.rank)s=iP(e,t,a,n,r,i);else if(3===e.rank)s=iU(e,t,a,n,r,i);else if(4===e.rank)s=iW(e,t,a,n,r,i);else throw new pK(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return s}mH.className="AlphaDropout",rD(mH);class mq extends uh{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=d5(e.betaInitializer||"zeros"),this.gammaInitializer=d5(e.gammaInitializer||"ones"),this.movingMeanInitializer=d5(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=d5(e.movingVarianceInitializer||"ones"),this.betaConstraint=u$(e.betaConstraint),this.gammaConstraint=u$(e.gammaConstraint),this.betaRegularizer=hq(e.betaRegularizer),this.gammaRegularizer=hq(e.gammaRegularizer)}build(e){e=ut(e);let t=this.axis>=0?this.axis:this.axis+e.length,a=e[t];if(null==a)throw new pq(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ul({ndim:e.length,axes:{[t]:a}})];let n=[a];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return nj(()=>{let a=null!=t.training&&t.training,n=ue(e),r=n.shape,i=r.length,s=dS(0,i),l=this.axis>=0?this.axis:this.axis+i;s.splice(l,1);let o=pJ(1,i);o[l]=r[l];let p=s.slice();p.sort();let d=!U(p,dS(0,i).slice(0,i-1));if(!a){if(!d)return mj(n,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon);{let e=iM(this.movingMean.read(),o),t=iM(this.movingVariance.read(),o);return mj(n,e,t,this.center?iM(this.beta.read(),o):null,this.scale?iM(this.gamma.read(),o):null,this.epsilon)}}let[u,h,m]=function(e,t,a,n,r=.001){return U(n.slice().sort(),dS(0,e.rank-1))?function(e,t,a,n,r=.001){return nj(()=>{let i=sE(e,n),s=i.mean,l=i.variance;return[mj(e,s,l,a,t,r),s,l]})}(e,t,a,n,r):function(e,t,a,n,r=.001){return nj(()=>{let i=sE(e,n),s=i.mean,l=i.variance,o=[];for(let t of dS(0,e.rank))-1!==n.indexOf(t)?o.push(1):o.push(e.shape[t]);let p=iM(s,o),d=iM(l,o),u=null==t?null:iM(t,o);return[mj(e,p,d,null==a?null:iM(a,o),u,r),s,l]})}(e,t,a,n,r)}(n,this.gamma.read(),this.beta.read(),s,this.epsilon),c=(e,t,a)=>{nj(()=>{let n=e.read(),r=rN(rB(n,t),1-a);e.write(rB(n,r))})};return c(this.movingMean,h,this.momentum),c(this.movingVariance,m,this.momentum),u})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:p3(this.betaInitializer),gammaInitializer:p3(this.gammaInitializer),movingMeanInitializer:p3(this.movingMeanInitializer),movingVarianceInitializer:p3(this.movingVarianceInitializer),betaRegularizer:p3(this.betaRegularizer),gammaRegularizer:p3(this.gammaRegularizer),betaConstraint:p3(this.betaConstraint),gammaConstraint:p3(this.gammaConstraint)};return Object.assign(e,super.getConfig()),e}}mq.className="BatchNormalization",rD(mq);class mK extends uh{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=d5(e.betaInitializer||"zeros"),this.gammaInitializer=d5(e.gammaInitializer||"ones"),this.betaRegularizer=hq(e.betaRegularizer),this.gammaRegularizer=hq(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=ut(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw Error(`Invalid axis: ${e}`);if(this.axis.length!==p8(this.axis).length)throw Error(`Found duplicate axes in: ${this.axis}`);let a=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",a,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",a,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let a=ue(e),n=a.shape,r=n.length;return nj(()=>{let{mean:e,variance:t}=sE(a,this.axis,!0),i=pJ(1,r);for(let e of this.axis)i[e]=n[e];let s=e=>null!=e&&e.shape.length!==r?iM(e,i):e,l=this.scale?s(this.gamma.read()):null,o=this.center?s(this.beta.read()):null,p=[],d=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(p.push(n[e]),d.push(1)):(p.push(1),d.push(n[e]));return e=st(e,p),t=st(t,p),null!=l&&(l=st(l,d)),null!=o&&(o=st(o,d)),mj(a,e,t,o,l,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:p3(this.betaInitializer),gammaInitializer:p3(this.gammaInitializer),betaRegularizer:p3(this.betaRegularizer),gammaRegularizer:p3(this.gammaRegularizer)};return Object.assign(e,super.getConfig()),e}}mK.className="LayerNormalization",rD(mK);class mX extends uh{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?dC():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{let t,a;if(e.padding=e.padding,2!==e.padding.length)throw new pq(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],a=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new pq(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new pq(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);a=e.padding[1]}this.padding=[t,a]}this.inputSpec=[new ul({ndim:4})]}computeOutputShape(e){let t,a;return(e=ut(e),"channelsFirst"===this.dataFormat)?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,a=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,a]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,a=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,a,e[3]])}call(e,t){return nj(()=>{var t,a,n;return t=ue(e),a=this.padding,n=this.dataFormat,nj(()=>{let e;if(4!==t.rank)throw new pq(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==a&&(a=[[1,1],[1,1]]),2!==a.length||2!==a[0].length||2!==a[1].length)throw new pq("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=dC()),"channelsLast"!==n&&"channelsFirst"!==n)throw new pq(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);return sL(t,"channelsFirst"===n?[[0,0],[0,0],a[0],a[1]]:[[0,0],a[0],a[1],[0,0]])})})}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}function mY(e,t,a,n,r,i){return nj(()=>{let s;dm(r),df(i),dc(n),null==a&&(a=[1,1]),null==n&&(n="valid"),null==r&&(r=dC()),null==i&&(i="max"),e=h4(e,r);let l="same"===n?"same":"valid";return s="max"===i?sI(e,t,a,l):iV(e,t,a,l),"channelsFirst"===r&&(s=ln(s,[0,3,1,2])),s})}function mJ(e,t,a,n,r,i){return nj(()=>{let s;dm(r),df(i),dc(n),null==a&&(a=[1,1,1]),null==n&&(n="valid"),null==r&&(r=dC()),null==i&&(i="max"),e=h6(e,r);let l="same"===n?"same":"valid";return s="max"===i?sS(e,t,a,l):iB(e,t,a,l),"channelsFirst"===r&&(s=ln(s,[0,4,1,2,3])),s})}mX.className="ZeroPadding2D",rD(mX);class mZ extends uh{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&1===e.poolSize.length&&"number"==typeof e.poolSize[0])this.poolSize=e.poolSize;else throw new pq(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(dt(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else if(Array.isArray(e.strides)&&1===e.strides.length&&"number"==typeof e.strides[0])this.strides=e.strides;else throw new pq(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);dt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,dc(this.padding),this.inputSpec=[new ul({ndim:3})]}computeOutputShape(e){let t=h0((e=ut(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return nj(()=>(this.invokeCallHook(e,t),e=d$(ue(e),2),s4(this.poolingFunction(ue(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast"),[2])))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides};return Object.assign(e,super.getConfig()),e}}class mQ extends mZ{constructor(e){super(e)}poolingFunction(e,t,a,n,r){return dm(r),dc(n),mY(e,t,a,n,r,"max")}}mQ.className="MaxPooling1D",rD(mQ);class m1 extends mZ{constructor(e){super(e)}poolingFunction(e,t,a,n,r){return dm(r),dc(n),mY(e,t,a,n,r,"avg")}}m1.className="AveragePooling1D",rD(m1);class m0 extends uh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new pq(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];dt(this.poolSize,"poolSize"),dt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dm(this.dataFormat),dc(this.padding),this.inputSpec=[new ul({ndim:4})]}computeOutputShape(e){e=ut(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],a="channelsFirst"===this.dataFormat?e[3]:e[2];return(t=h0(t,this.poolSize[0],this.padding,this.strides[0]),a=h0(a,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,a]:[e[0],t,a,e[3]]}call(e,t){return nj(()=>(this.invokeCallHook(e,t),this.poolingFunction(ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class m2 extends m0{constructor(e){super(e)}poolingFunction(e,t,a,n,r){return dm(r),dc(n),mY(e,t,a,n,r,"max")}}m2.className="MaxPooling2D",rD(m2);class m4 extends m0{constructor(e){super(e)}poolingFunction(e,t,a,n,r){return dm(r),dc(n),mY(e,t,a,n,r,"avg")}}m4.className="AveragePooling2D",rD(m4);class m6 extends uh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new pq(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];dt(this.poolSize,"poolSize"),dt(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dm(this.dataFormat),dc(this.padding),this.inputSpec=[new ul({ndim:5})]}computeOutputShape(e){e=ut(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],a="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[4]:e[3];return(t=h0(t,this.poolSize[0],this.padding,this.strides[0]),a=h0(a,this.poolSize[1],this.padding,this.strides[1]),n=h0(n,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,a,n]:[e[0],t,a,n,e[4]]}call(e,t){return nj(()=>(this.invokeCallHook(e,t),this.poolingFunction(ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class m3 extends m6{constructor(e){super(e)}poolingFunction(e,t,a,n,r){return dm(r),dc(n),mJ(e,t,a,n,r,"max")}}m3.className="MaxPooling3D",rD(m3);class m9 extends m6{constructor(e){super(e)}poolingFunction(e,t,a,n,r){return dm(r),dc(n),mJ(e,t,a,n,r,"avg")}}m9.className="AveragePooling3D",rD(m9);class m5 extends uh{constructor(e){super(e),this.inputSpec=[new ul({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new pK}}class m8 extends m5{constructor(e){super(e||{})}call(e,t){return nj(()=>sT(ue(e),1))}}m8.className="GlobalAveragePooling1D",rD(m8);class m7 extends m5{constructor(e){super(e||{})}call(e,t){return nj(()=>sd(ue(e),1))}}m7.className="GlobalMaxPooling1D",rD(m7);class ce extends uh{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dm(this.dataFormat),this.inputSpec=[new ul({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new pK}getConfig(){let e={dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class ct extends ce{call(e,t){return nj(()=>{let t=ue(e);return"channelsLast"===this.dataFormat?sT(t,[1,2]):sT(t,[2,3])})}}ct.className="GlobalAveragePooling2D",rD(ct);class ca extends ce{call(e,t){return nj(()=>{let t=ue(e);return"channelsLast"===this.dataFormat?sd(t,[1,2]):sd(t,[2,3])})}}ca.className="GlobalMaxPooling2D",rD(ca);class cn extends uh{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}};return Object.assign(e,super.getConfig()),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,a={}){let n=uB(t.layer,a);delete t.layer;let r={layer:n};return Object.assign(r,t),new e(r)}}class cr extends cn{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ut(e)).length<3)throw new pq(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=ut(e))[0]].concat(e.slice(2)),a=this.layer.computeOutputShape(t),n=e[1];return[a[0],n].concat(a.slice(1))}call(e,t){return nj(()=>mp((e,a)=>[ue(this.layer.call(e,t)),[]],e=ue(e),[],!1,null,null,!1,!0)[1])}}cr.className="TimeDistributed",rD(cr);class ci extends cn{constructor(e){super(e);let t=e.layer.getConfig(),a={};a.className=e.layer.getClassName(),a.config=t,this.forwardLayer=uB(a),t.goBackwards=!0!==t.goBackwards;let n={};if(n.className=e.layer.getClassName(),n.config=t,this.backwardLayer=uB(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,p7(du,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new pK("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,a,n,r=this.forwardLayer.computeOutputShape(e);return(Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState&&(n=r.slice(1)),t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,a=[t]):a=null==this.mergeMode?[t,t.slice()]:[t],this.returnState)?null==this.mergeMode?a.concat(n).concat(n.slice()):[t].concat(n).concat(n.slice()):p1(a)}apply(e,t){let a=null==t?null:t.initialState,n=null==t?null:t.constants;null==t&&(t={});let r=mo(e,a,n,this.numConstants);if(e=r.inputs,a=r.initialState,n=r.constants,Array.isArray(e)&&(a=e.slice(1),e=e[0]),(null==a||0===a.length)&&null==n)return super.apply(e,t);let i=[],s=[];if(null!=a){let e=a.length;if(e%2>0)throw new pq("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=a,i.push(...a);let n=a.map(e=>new ul({shape:e.shape}));this.forwardLayer.stateSpec=n.slice(0,e/2),this.backwardLayer.stateSpec=n.slice(e/2),s.push(...n)}if(null!=n)throw new pK("Support for constants in Bidirectional layers is not implemented yet.");let l=i[0]instanceof uo;for(let e of i)if(e instanceof uo!==l)throw new pq("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(!l)return super.apply(e,t);{let a=[e].concat(i),n=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=n;let l=super.apply(a,t);return this.inputSpec=r,l}}call(e,t){return nj(()=>{let a,n,r,i,s=t.initialState;if(null==s)a=this.forwardLayer.call(e,t),n=this.backwardLayer.call(e,t);else{let r=s.slice(0,s.length/2),i=s.slice(s.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),n=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return(this.returnState&&(Array.isArray(a)&&(r=a.slice(1).concat(n.slice(1))),a=a[0],n=n[0]),this.returnSequences&&(n=sH(n,1)),"concat"===this.mergeMode?i=dA([a,n]):"sum"===this.mergeMode?i=rw(a,n):"ave"===this.mergeMode?i=rN(.5,rw(a,n)):"mul"===this.mergeMode?i=rN(a,n):null==this.mergeMode&&(i=[a,n]),this.returnState)?null==this.mergeMode?i.concat(r):[i].concat(r):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){dv(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),dv(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let a;if(Array.isArray(t)&&(t=t[0]),a=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,!this.returnState)return a;{let e=this.forwardLayer.states.map(e=>null);return Array.isArray(a)?a.concat(e).concat(e):[a].concat(e).concat(e)}}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode};return Object.assign(e,super.getConfig()),e}static fromConfig(e,t){let a=uB(t.layer);if(delete t.layer,null!=t.numConstants)throw new pK("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");return t.layer=a,new e(t)}}ci.className="Bidirectional",rD(ci);class cs extends uh{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset};return Object.assign(e,super.getConfig()),e}call(e,t){return nj(()=>("float32"!==(e=ue(e)).dtype&&(e=rb(e,"float32")),rw(rN(e,this.scale),this.offset)))}}cs.className="Rescaling",rD(cs);let{resizeBilinear:cl,cropAndResize:co}=lJ;class cp extends uh{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,a,n,r,i,s,l){return nj(()=>{let o,p=!1,d=[t/i,a/s,(n+t)/i,(r+a)/s],u=[];3===e.rank?(p=!0,o=s6([e])):o=e;for(let e=0;e<o.shape[0];e++)u.push(d);let h=nU(u,[u.length,4]),m=co(o,h,sW(0,u.length,1,"int32"),[n,r],"nearest");if(p)return rb(ue(s7(m)),l);return rb(m,l)})}upsize(e,t,a,n){return nj(()=>rb(cl(e,[t,a]),n))}call(e,t){return nj(()=>{let t=ue(e),a=t.dtype,n=t.shape,r=n[n.length-3],i=n[n.length-2],s=0;r!==this.height&&(s=Math.floor((r-this.height)/2));let l=0;return(i!==this.width&&0===(l=Math.floor((i-this.width)/2))&&(l=1),s>=0&&l>=0)?this.centerCrop(t,s,l,this.height,this.width,r,i,a):this.upsize(e,this.height,this.width,a)})}getConfig(){let e={height:this.height,width:this.width};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=ut(e)).length-3,a=e.length-2;return e[t]=this.height,e[a]=this.width,e}}cp.className="CenterCrop",rD(cp);class cd extends uh{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){return null==(e=ut(e))?[this.numTokens]:("oneHot"===this.outputMode&&1!==e[e.length-1]?e.push(this.numTokens):e[e.length-1]=this.numTokens,e)}call(e,t){return nj(()=>{let a;if("int32"!==(e=ue(e)).dtype&&(e=rb(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new pq(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);a=ue(t.countWeights)}let n=sd(e),r=sC(e),i=si(this.numTokens,n).bufferSync().get(0),s=ss(r,0).bufferSync().get(0);if(!(i&&s))throw new pq(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,a,n){let r,i=ue(e);if("int32"!==i.dtype&&(i=rb(i,"int32")),"int"===t)return i;let s=i.shape;if(0===i.rank&&(i=se(i,-1)),"oneHot"===t&&1!==i.shape[i.shape.length-1]&&(i=se(i,-1)),i.rank>2)throw new pq(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${i.rank}.`);let l=["multiHot","oneHot"].includes(t),o=i;if(r=void 0!==n&&"count"===t?i6(o,n,a,l):i6(o,[],a,l),"tfIdf"!==t)return r;if(n)return rN(r,n);throw new pq("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,a)})}}cd.className="CategoryEncoding",rD(cd);let cu=new Set(["bilinear","nearest"]);class ch extends uh{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(cu.has(e.interpolation))this.interpolation=e.interpolation;else throw new pq(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){let t=(e=ut(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio};return Object.assign(e,super.getConfig()),e}call(e,t){return nj(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return lJ.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return lJ.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw Error(`Interpolation is ${this.interpolation} but only ${[...cu]} are supported`)})}}ch.className="Resizing",rD(ch);class cm{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}cm.className="RandomSeed";class cc extends uh{constructor(e){super(e),this.randomGenerator=new cm(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed};return Object.assign(e,super.getConfig()),e}}cc.className="BaseRandomLayer";let cf=new Set(["bilinear","nearest"]);class cg extends cc{constructor(e){super(e);let{factor:t,interpolation:a="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new pq(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new pq(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new pq(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(a)if(cf.has(a))this.interpolation=a;else throw new pq(`Invalid interpolation parameter: ${a} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=ut(e))[2];return[this.imgHeight,-1,t]}call(e,t){return nj(()=>{let t=ue(e);this.imgHeight=t.shape[t.shape.length-3];let a=t.shape[t.shape.length-2];this.widthFactor=sU([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let n=this.widthFactor.dataSync()[0]*a;n=Math.round(n);let r=[this.imgHeight,n];switch(this.interpolation){case"bilinear":return lJ.resizeBilinear(e,r);case"nearest":return lJ.resizeNearestNeighbor(e,r);default:throw Error(`Interpolation is ${this.interpolation}
          but only ${[...cf]} are supported`)}})}}function cv(e){return new um(e)}function cb(e){return new hJ(e)}function cy(e){return new hK(e)}function cw(e){return new hX(e)}function cx(e){return new hY(e)}function ck(e){return new hQ(e)}function cN(e){return new hZ(e)}function cI(e){return new mr(e)}function cS(e){return new h8(e)}function cT(e){return new me(e)}function cC(e){return new h7(e)}function c$(e){return new mt(e)}function cE(e){return new mn(e)}function c_(e){return new mi(e)}function cR(e){return new ms(e)}function cA(e){return new ml(e)}function cD(e){return new m$(e)}function cF(e){return new mT(e)}function cO(e){return new mI(e)}function cL(e){return new mS(e)}function cM(e){return new mC(e)}function cV(e){return new mE(e)}function cB(e){return new m_(e)}function cz(e){return new mR(e)}function cP(e){return new mD(e)}function cU(e){return new mO(e)}function cW(e){return new mM(e)}function cG(e){return new mz(e)}function cH(e){return new mV(e)}function cj(e){return new mB(e)}function cq(e){return new mL(e)}function cK(e){return new mU(e)}function cX(e){return new mq(e)}function cY(e){return new mK(e)}function cJ(e){return new mX(e)}function cZ(e){return new m1(e)}function cQ(e){return cZ(e)}function c1(e){return cZ(e)}function c0(e){return new m4(e)}function c2(e){return c0(e)}function c4(e){return c0(e)}function c6(e){return new m9(e)}function c3(e){return c6(e)}function c9(e){return c6(e)}function c5(e){return new m8(e)}function c8(e){return new ct(e)}function c7(e){return new m7(e)}function fe(e){return new ca(e)}function ft(e){return new mQ(e)}function fa(e){return new m2(e)}function fn(e){return new m3(e)}function fr(e){return new mf(e)}function fi(e){return new mc(e)}function fs(e){return new mv(e)}function fl(e){return new mg(e)}function fo(e){return new mm(e)}function fp(e){return new mh(e)}function fd(e){return new mN(e)}function fu(e){return new mk(e)}function fh(e){return new md(e)}function fm(e){return new mb(e)}function fc(e){return new ci(e)}function ff(e){return new cr(e)}cg.className="RandomWidth",rD(cg);let fg=c7,fv=fe,fb=ft,fy=fa;function fw(e){return new mW(e)}function fx(e){return new mG(e)}function fk(e){return new mH(e)}function fN(e){return new mA(e)}function fI(e){return new cs(e)}function fS(e){return new cp(e)}function fT(e){return new ch(e)}function fC(e){return new cd(e)}function f$(e){return new cg(e)}class fE extends uR{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof hg))throw Error("model must be a LayersModel, not some other Container");this.model=e}}function f_(e,t){return e<t}function fR(e,t){return e>t}ef.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(y||(y={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(w||(w={}));function fA(e,t,a,n){let[r,i]=function(e,t){let a;if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let a=t.parseNodeNameCache.get(e);if(null!=a)return a}let r=e.split(":");if(1===r.length)a=[e,0,void 0];else{let e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}(e,a);if(null!=n){let e=n.getHashTableHandleByName(r);if(null!=e)return e}let s=a.currentContextIds.find(e=>!!t[fD(r,e)]);return void 0!==s?t[fD(r,s)][i]:void 0}function fD(e,t){return t?`${e}-${t}`:e}class fF{get id(){return this.idTensor.id}constructor(e,t,a,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=a,null!=e&&e.forEach(e=>{if(a!==e.dtype)throw Error(`Invalid data types; op elements ${a}, but list elements ${e.dtype}`);assertShapesMatchAllowUndefinedSize(t,e.shape,"TensorList shape mismatch: "),keep(e)}),this.idTensor=scalar(0),this.maxNumElements=n,keep(this.idTensor)}copy(){return new fF([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,a=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==a&&this.tensors.length!==a)throw Error(`Operation expected a list with ${a} elements but got a list with ${this.tensors.length} elements.`);assertShapesMatchAllowUndefinedSize(e,this.elementShape,"TensorList shape mismatch: ");let n=inferElementShape(this.elementShape,this.tensors,e);return tidy(()=>stack(this.tensors.map(e=>reshape(e,n)),0))}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let a=inferElementShape(this.elementShape,this.tensors,e),n=this.tensors.pop();return n.kept=!1,assertShapesMatchAllowUndefinedSize(n.shape,e,"TensorList shape mismatch: "),reshape(n,a)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(assertShapesMatchAllowUndefinedSize(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");keep(e),this.tensors.push(e)}resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new fF([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let a=0;a<Math.min(this.tensors.length,e);++a)t.tensors[a]=this.tensors[a];return t}getItem(e,t,a){if(a!==this.elementDtype)throw Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);assertShapesMatchAllowUndefinedSize(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=inferElementShape(this.elementShape,this.tensors,t);return reshape(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorList shape mismatch: "),keep(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,a){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);assertShapesMatchAllowUndefinedSize(this.elementShape,a,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=inferElementShape(this.elementShape,this.tensors,a);return 0===e.length?tensor([],[0].concat(n)):tidy(()=>stack(e.map(e=>reshape(this.tensors[e],n)),0))}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);assertShapesMatchAllowUndefinedSize(this.elementShape,t,"TensorList shape mismatch: ");let a=inferElementShape(this.elementShape,this.tensors,t);return 0===this.size()?tensor([],[0].concat(a)):tidy(()=>concat(this.tensors.map(e=>reshape(e,a)),0))}}let fO=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]);function fL(e,t,a=new Map,n=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(n.has(e))throw Error("Circular references are not supported.");if(a.has(e))return a.get(e);let r=t(e);if(r.recurse&&null!==r.value)throw Error("A deep map function may not return both a value and recurse=true.");if(!r.recurse)return a.set(e,r.value),r.value;if(fB(e)){let r=Array.isArray(e)?[]:{};for(let i in n.add(e),e){let s=fL(e[i],t,a,n);r[i]=s}return n.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw Error(`Can't recurse into non-iterable type: ${e}`)}function fM(e){return null===e?null:fB(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function fV(e,t){let a=new Map;for(let n of(fL(e,t,a),Array.from(a.keys()))){let e=a.get(n);if(eu(e)){let t=await e;a.set(n,t)}}return fL(e,t,a)}function fB(e){let t=!1;if(ef.get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=a(1204);t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof nf)&&!(e instanceof Promise)&&!t)}function fz(e){return e instanceof nf?{value:e.clone(),recurse:!1}:fB(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class fP{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw RangeError("Can't create ring buffer of capacity < 1.");this.data=Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),a=this.get(t);return this.set(t,this.pop()),a}}class fU extends fP{constructor(){super(fU.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=Array(e),a=this.length();for(let e=0;e<a;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=a}}fU.INITIAL_CAPACITY=32;class fW{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],a=await e.next();for(;!a.done;)t.push(a.value),a=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),a=e(t.value);for(;!t.done&&a;)a=e((t=await this.next()).value)}handleErrors(e){return new fZ(this,e)}filter(e){return new fY(this,e)}map(e){return new fJ(this,e)}mapAsync(e){return new fQ(this,e)}serialMapAsync(e){return new fQ(this,e).serial()}flatmap(e){return new f0(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new fX(this,e,t)}columnMajorBatch(e,t=!0,a=fM){return this.rowMajorBatch(e,t).map(e=>(function(e,t=fM){return function e(t,a,n=new Set){let r=t[0];if(n.has(r))throw Error("Circular references are not supported.");let i=a(t);if(i.recurse&&null!==i.value)throw Error("A deep zip function may not return both a value and recurse=true.");if(!i.recurse)return i.value;if(fB(r)){let i=Array.isArray(r)?[]:{};for(let s in n.add(r),r){let r=e(t.map(e=>e[s]),a,n);i[s]=r}return n.delete(r),i}throw Error(`Can't recurse into non-iterable type: ${r}`)}(e,t)})(e,a))}concatenate(e,t){return new f2(new fG([this,e]),t)}take(e){return e<0||null==e?this:new fK(this,e)}skip(e){return e<0||null==e?this:new fq(this,e)}prefetch(e){return new f4(this,e)}shuffle(e,t){return new f6(this,e,t)}serial(){return new fj(this)}}class fG extends fW{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:fL(e,fz),done:!1}}}class fH extends fW{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class fj extends fW{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class fq extends fW{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;nq(e.value)}return this.upstream.next()}}class fK extends fW{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class fX extends fW{constructor(e,t,a=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=a,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done){if(this.enableSmallLastBatch&&e.length>0)return{value:e,done:!1};return{value:null,done:!0}}e.push(t.value)}return{value:e,done:!1}}}class fY extends fW{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;nq(e.value)}}}class fJ extends fW{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=nS(e.value),a=this.transform(e.value),n=nS(a);for(let e of t)nI(e,n)||e.dispose();return{value:a,done:!1}}}class fZ extends fW{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class fQ extends fW{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=nS(e.value),a=await this.transform(e.value),n=nS(a);for(let e of t)nI(e,n)||e.dispose();return{value:a,done:!1}}}class f1 extends fW{constructor(){super(),this.outputQueue=new fU,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class f0 extends f1{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=nS(e.value),a=this.transform(e.value),n=nS(a);for(let e of(this.outputQueue.pushAll(a),t))nI(e,n)||e.dispose();return!0}}class f2 extends fW{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(x||(x={}));class f4 extends fW{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new fP(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class f6 extends f4{constructor(e,t,a){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=sV.alea(a||na().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class f3{constructor(){this.size=null}batch(e,t=!0){let a,n=this;return V(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`),f9(async()=>(await n.iterator()).columnMajorBatch(e,t,f5),this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e))}concatenate(e){let t,a=this;return f9(async()=>(await a.iterator()).concatenate(await e.iterator()),this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null)}filter(e){let t,a=this;return f9(async()=>(await a.iterator()).filter(t=>nj(()=>e(t))),this.size===1/0?1/0:null)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return f9(async()=>(await t.iterator()).map(t=>nj(()=>e(t))),this.size)}mapAsync(e){let t=this;return f9(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return f9(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t,a=this;return f9(async()=>new f2(new fH(async()=>({value:await a.iterator(),done:!1})).take(e),void 0),null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null)}skip(e){let t,a=this;return f9(async()=>(await a.iterator()).skip(e),null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null)}shuffle(e,t,a=!0){if(null==e||e<0)if(null==this.size)throw RangeError("`Dataset.shuffle()` requires bufferSize to be specified.");else throw RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let n=this,r=sV.alea(t||na().toString());return f9(async()=>{let t=r.int32();return a&&(t+=r.int32()),(await n.iterator()).shuffle(e,t.toString())},this.size)}take(e){let t,a=this;return f9(async()=>(await a.iterator()).take(e),null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null)}async toArray(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function f9(e,t=null){return new class extends f3{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function f5(e){var t,a;if(null===e)return null;return null==(t=e[0])||null===(a=t)||"object"!=typeof a&&"function"!=typeof a||Array.isArray(t)||"object"==typeof t&&t instanceof nf||ni(t)?{value:function(e){if(0===e.length)throw Error("Can't make a batch of zero elements.");return e[0]instanceof nf?s6(e):nU(e)}(e),recurse:!1}:{value:null,recurse:!0}}f3.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");class f8 extends fW{split(e){return new f7(this,e)}}class f7 extends f8{constructor(e,t){super(),this.upstream=e,this.impl=new ge(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class ge extends f1{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);for(let e of(t[0]=this.carryover+t[0],t.slice(0,-1)))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class gt extends fW{decodeUTF8(){return new ga(this)}}class ga extends f8{constructor(e){super(),this.upstream=e,this.impl=new gn(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class gn extends f1{constructor(e){if(super(),this.upstream=e,ef.get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=a(1204);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,a=await this.upstream.next();return!a.done&&(e=a.value,t=ef.get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}}function gr(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&V("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}class gi extends D{nextDataId(){return gi.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new A(this,n_)}write(e,t,a){this.firstUse&&(this.firstUse=!1,ef.get("IS_NODE")&&aW("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:a,refCount:1}),n}makeTensorInfo(e,t,a){let n;if("string"===t&&null!=a&&a.length>0&&Z(a[0])){let r=a.map(e=>nn(e));n=this.write(r,e,t)}else n=this.write(a,e,t);return{dataId:n,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,a,n,r){this.data.set(e,{values:t,dtype:n,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:a}=this.data.get(e);if("complex64"===t)return ob(this.readSync(a.real.dataId),this.readSync(a.imag.dataId));var n=this.data.get(e).values;if(Array.isArray(n))return n;if("float32"===t)return n instanceof Float32Array?n:new Float32Array(n);if("int32"===t)return n instanceof Int32Array?n:new Int32Array(n);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(n));throw Error(`Unknown dtype ${t}`)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let a=t.map(e=>nr(e));return rv(e.shape,e.dtype,a)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return rv(e.shape,e.dtype,t)}makeOutput(e,t,a){return n_.makeTensorFromTensorInfo(this.makeTensorInfo(t,a,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:a}=this.data.get(e);null!=a&&(this.disposeData(a.real.dataId,!0),this.disposeData(a.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=na();return e(),{kernelMs:na()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){gr([e],"where");let t=this.readSync(e.dataId);return oY(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function gs(e){return(t,a,n)=>{let r=X(a,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],n);return r}}function gl(e,t,a){return go(e,gs(t),a)}function go(e,t,a){return({inputs:n,attrs:r,backend:i})=>{let s,{x:l}=n;gr(l,e);let o=i.data.get(l.dataId).values;if("string"===l.dtype){if(!Array.isArray(o))throw Error("String tensor's value was not an instance of Array");s=oK(o)}else s=o;let p=a||l.dtype,d=t(s,p,r);return i.makeTensorInfo(l.shape,p,d)}}gi.nextDataId=0,nX("cpu",()=>new gi,1);let gp=gl("Elu",e=>e>=0?e:Math.exp(e)-1);function gd(e){let{inputs:t,backend:a}=e,{x:n}=t;return a.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function gu(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:i}=n;gr([r],"leakyRelu");let s=P(r.shape),l=a.data.get(r.dataId).values,o=X("float32",s);for(let e=0;e<l.length;e++)o[e]=l[e]<0?i*l[e]:l[e];return a.makeTensorInfo(r.shape,"float32",o)}function gh(e){return(t,a,n,r,i)=>{let s=rG(t,a),l=s.length,o=en(s),p=X(i,P(s)),d=t.length,u=a.length,h=en(t),m=en(a),c=rU(t,s),f=rU(a,s);if(c.length+f.length===0)for(let t=0;t<p.length;++t)p[t]=e(n[t%n.length],r[t%r.length]);else for(let t=0;t<p.length;++t){let a=ed(t,l,o),i=a.slice(-d);c.forEach(e=>i[e]=0);let s=ep(i,d,h),g=a.slice(-u);f.forEach(e=>g[e]=0);let v=ep(g,u,m);p[t]=e(n[s],r[v])}return[p,s]}}let gm=gh((e,t)=>e<0?t*e:e);function gc(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t;gr([n,r],"prelu");let i=a.data.get(n.dataId).values,s=a.data.get(r.dataId).values,[l,o]=gm(n.shape,r.shape,i,s,"float32");return a.makeTensorInfo(o,"float32",l)}let gf=gl(t2,e=>Math.max(0,e)),gg=gl(t8,e=>Math.min(Math.max(0,e),6)),gv=gs(e=>1/(1+Math.exp(-e))),gb=gl(ad,e=>1/(1+Math.exp(-e)));function gy(e,t,a,n,r){if("linear"===a)return gd({inputs:{x:t},backend:e});if("relu"===a)return gf({inputs:{x:t},backend:e});if("elu"===a)return gp({inputs:{x:t},backend:e});if("relu6"===a)return gg({inputs:{x:t},backend:e});if("prelu"===a)return gc({inputs:{x:t,alpha:n},backend:e});else if("leakyrelu"===a)return gu({inputs:{x:t},backend:e,attrs:{alpha:r}});else if("sigmoid"===a)return gb({inputs:{x:t},backend:e});throw Error(`Activation ${a} has not been implemented for the CPU backend.`)}function gw(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,i=a.data.get(n.dataId).values,s=a.data.get(r.dataId).values,l=a.makeTensorInfo(n.shape,"complex64");return a.data.get(l.dataId).complexTensorInfos={real:a.makeTensorInfo(n.shape,"float32",i),imag:a.makeTensorInfo(r.shape,"float32",s)},l}function gx(e,t,a="float32"){if("complex64"===a)return gw({inputs:{real:gx(e,t,"float32"),imag:gx(e,t,"float32")},backend:e});let n=es(P(t),a);return e.makeTensorInfo(t,a,n)}function gk(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.data.get(n.dataId).complexTensorInfos.real,i=a.data.get(r.dataId).values;return a.makeTensorInfo(r.shape,r.dtype,i)}function gN(e,t,a,n){if("int32"===n)return[t,"int32",Int32Array.from(e)];if("bool"===n){let n=nt([0],a),[r,i]=gh((e,t)=>+(e!==t))(t,[],e,n,"bool");return[i,"bool",r]}throw Error(`Error in Cast: failed to cast ${a} to ${n}`)}function gI(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:i}=n;if("complex64"===i){if("complex64"===r.dtype)return gd({inputs:{x:r},backend:a});let e=gx(a,r.shape,r.dtype),t=gI({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),n=gw({inputs:{real:t,imag:e},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(t),n}if("complex64"===r.dtype){let e=gk({inputs:{input:r},backend:a}),t=gI({inputs:{x:e},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(e),t}if(!Y(r.dtype,i)){let e=gd({inputs:{x:r},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}let[s,l,o]=gN(a.data.get(r.dataId).values,r.shape,r.dtype,i);return a.makeTensorInfo(s,l,o)}function gS(e,t,a,n){return null==a?({inputs:a,backend:r})=>{let{a:i,b:s}=a;gr([i,s],e);let l=r.data.get(i.dataId).values,o=r.data.get(s.dataId).values,p="string"===i.dtype?oK(l):l,d="string"===i.dtype?oK(o):o,u=n||i.dtype,[h,m]=t(i.shape,s.shape,p,d,u);return r.makeTensorInfo(m,u,h)}:({inputs:e,backend:r})=>{let{a:i,b:s}=e;if("complex64"===i.dtype||"complex64"===s.dtype){let e=gI({inputs:{x:i},backend:r,attrs:{dtype:"complex64"}}),t=r.data.get(e.dataId),n=t.complexTensorInfos.real,l=t.complexTensorInfos.imag,o=r.data.get(n.dataId).values,p=r.data.get(l.dataId).values,d=gI({inputs:{x:s},backend:r,attrs:{dtype:"complex64"}}),u=r.data.get(d.dataId),h=u.complexTensorInfos.real,m=u.complexTensorInfos.imag,c=r.data.get(h.dataId).values,f=r.data.get(m.dataId).values,[g,v,b]=a(i.shape,s.shape,o,p,c,f),y=r.makeTensorInfo(b,"float32",g),w=r.makeTensorInfo(b,"float32",v),x=gw({inputs:{real:y,imag:w},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),x}{let e=r.data.get(i.dataId).values,a=r.data.get(s.dataId).values,l=n||i.dtype,[o,p]=t(i.shape,s.shape,e,a,l);return r.makeTensorInfo(p,l,o)}}}function gT(e){return(t,a,n,r,i,s)=>{let l=rG(t,a),o=P(l),p=l.length,d=en(l),u=X("float32",o),h=X("float32",o),m=rU(t,l),c=rU(a,l),f=ob(n,r),g=ob(i,s),v=t.length,b=en(t),y=a.length,w=en(a);if(m.length+c.length===0)for(let t=0;t<u.length;t++){let a=t%f.length,n=t%g.length,r=e(f[2*a],f[2*a+1],g[2*n],g[2*n+1]);u[t]=r.real,h[t]=r.imag}else for(let t=0;t<u.length;t++){let a=ed(t,p,d),n=a.slice(-v);m.forEach(e=>n[e]=0);let r=ep(n,v,b),i=a.slice(-y);c.forEach(e=>i[e]=0);let s=ep(i,y,w),l=e(f[2*r],f[2*r+1],g[2*s],g[2*s+1]);u[t]=l.real,h[t]=l.imag}return[u,h,l]}}let gC=gh((e,t)=>e+t),g$=gS("Add",gC,gT((e,t,a,n)=>({real:e+a,imag:t+n})));function gE(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{shape:i}=n,s=P(r.shape),l=j(i,s),o=P(l);V(s===o,()=>`The new shape (${l}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),a.incRef(r.dataId);let p=a.data.get(r.dataId);if(null!=p.complexTensorInfos){let e=p.complexTensorInfos.real,t=p.complexTensorInfos.imag;e.shape=l,t.shape=l}return{dataId:r.dataId,shape:l,dtype:r.dtype}}function g_(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:i}=t,{transposeA:s,transposeB:l}=n;gr([r,i],"matMul");let o=r.shape.length,p=i.shape.length,d=s?r.shape[o-2]:r.shape[o-1],u=l?i.shape[p-1]:i.shape[p-2],h=s?r.shape[o-1]:r.shape[o-2],m=l?i.shape[p-2]:i.shape[p-1],c=r.shape.slice(0,-2),f=i.shape.slice(0,-2),g=P(c),v=P(f),b=rG(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([h,m]);V(d===u,()=>`Error in matMul: inner shapes (${d}) and (${u}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${s} and transposeB=${l} must match.`);let y=gE({inputs:{x:r},backend:a,attrs:{shape:s?[g,d,h]:[g,h,d]}}),w=gE({inputs:{x:i},backend:a,attrs:{shape:l?[v,m,u]:[v,u,m]}}),x=s?y.shape[1]:y.shape[2],k=s?y.shape[2]:y.shape[1],N=l?w.shape[1]:w.shape[2],I=Math.max(g,v),S=a.data.get(y.dataId).values,T=a.data.get(w.dataId).values,C=en(y.shape),$=en(w.shape),[E,_,R]=s?[C[0],1,C[1]]:[C[0],C[1],1],[A,D,F]=l?[1,$[1],$[0]]:[$[1],1,$[0]],O=k*N,L=rv([I,k,N],y.dtype),M=L.values,B=a.blockSize;for(let e=0;e<I;e++){let t=e%g,a=e%v;for(let n=0;n<k;n+=B){let r=Math.min(n+B,k);for(let i=0;i<N;i+=B){let s=Math.min(i+B,N);for(let l=0;l<x;l+=B){let o=Math.min(l+B,x);for(let p=n;p<r;p++)for(let n=i;n<s;n++){let r=0;for(let e=l;e<o;e++)r+=S[t*E+p*_+e*R]*T[e*A+n*D+a*F];M[e*O+(p*N+n)]+=r}}}}}return a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(w),a.makeTensorInfo(b,L.dtype,L.values)}function gR(e){let t=new Float32Array(e.length);for(let a=0;a<e.length;++a)t[a]=Math.abs(e[a]);return t}let gA=gl(eb,e=>Math.acos(e)),gD=gl(ey,e=>Math.acosh(e));function gF(e,t,a,n,r){let i=t.length,s=P(t),l=en(t),o=en(r),p=X(a,P(r));for(let t=0;t<s;++t){let a=ed(t,i,l),r=Array(a.length);for(let e=0;e<r.length;e++)r[e]=a[n[e]];p[ep(r,i,o)]=e[t]}return p}function gO(e){let{inputs:t,attrs:a,backend:n}=e,{x:r}=t,{perm:i}=a;gr(r,"transpose");let s=Array(r.shape.length);for(let e=0;e<s.length;e++)s[e]=r.shape[i[e]];let l=gF(n.data.get(r.dataId).values,r.shape,r.dtype,i,s);return{dataId:n.write(l,s,r.dtype),shape:s,dtype:r.dtype}}let gL=gl(eN,e=>Math.asin(e)),gM=gl(eI,e=>Math.asinh(e)),gV=gl(eS,e=>Math.atan(e)),gB=gS(eC,gh((e,t)=>Math.atan2(e,t))),gz=gl(eT,e=>Math.atanh(e));function gP(e,t,a,n,r,i){let s=r.strideHeight,l=r.strideWidth,o=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterHeight,u=r.effectiveFilterWidth,h=r.padInfo.top,m=r.padInfo.left,c="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=rv(r.outShape,a),g=f.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let t=0;t<r.batchSize;++t){let a=t*v,f=t*n[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outHeight;++v){let w=v*s-h,x=Math.max(0,w),k=Math.min(r.inHeight,d+w),N=a+v*b;for(let a=0;a<r.outWidth;++a){let s=a*l-m,d=Math.max(0,s),h=Math.min(r.inWidth,u+s),v=c,b=0,w=0;for(let a=x;a<k;a+=o){let r=f+a*n[1];for(let a=d;a<h;a+=p){let s=e[r+a*n[2]+t];"max"===i&&s>v?v=s:"avg"===i&&(b+=s,w++)}if(isNaN(v))break}g[N+a*y+t]="avg"===i?b/w:v}}}return f}function gU(e,t,a,n,r=!1,i=!1){let s=rv(n.outShape,"int32"),l=n.strideHeight,o=n.strideWidth,p=n.dilationHeight,d=n.dilationWidth,u=n.effectiveFilterHeight,h=n.effectiveFilterWidth,m=n.padInfo.top,c=n.padInfo.left,f=rv(t,a,e);for(let e=0;e<n.batchSize;++e)for(let t=0;t<n.inChannels;++t)for(let a=0;a<n.outHeight;++a){let g=a*l-m,v=g;for(;v<0;)v+=p;let b=Math.min(n.inHeight,u+g);for(let l=0;l<n.outWidth;++l){let u=l*o-c,m=u;for(;m<0;)m+=d;let y=Math.min(n.inWidth,h+u),w=Number.NEGATIVE_INFINITY,x=-1;for(let a=v;a<b;a+=p){let s=a-g;for(let l=m;l<y;l+=d){let o=l-u,p=f.get(e,a,l,t);p>w&&(w=p,x=r?i?((e*n.inHeight+a)*n.inWidth+l)*n.inChannels+t:(a*n.inWidth+l)*n.inChannels+t:s*h+o)}}s.set(x,e,a,l,t)}}return s}function gW(e,t,a,n,r,i){let s=r.strideDepth,l=r.strideHeight,o=r.strideWidth,p=r.dilationDepth,d=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterDepth,m=r.effectiveFilterHeight,c=r.effectiveFilterWidth,f=r.padInfo.front,g=r.padInfo.top,v=r.padInfo.left,b="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=rv(r.outShape,a),w=y.values,x=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let t=0;t<r.batchSize;++t){let a=t*x,y=t*n[0];for(let t=0;t<r.inChannels;++t)for(let x=0;x<r.outDepth;++x){let S=x*s-f,T=S;for(;T<0;)T+=p;let C=Math.min(r.inDepth,h+S),$=a+x*k;for(let a=0;a<r.outHeight;++a){let s=a*l-g,h=s;for(;h<0;)h+=d;let f=Math.min(r.inHeight,m+s),x=$+a*N;for(let a=0;a<r.outWidth;++a){let s=a*o-v,l=s;for(;l<0;)l+=u;let m=Math.min(r.inWidth,c+s),g=x+a*I,k=b,N=0,S=0;for(let a=T;a<C;a+=p){let r=y+a*n[1];for(let a=h;a<f;a+=d){let s=r+a*n[2];for(let a=l;a<m;a+=u){let r=e[s+a*n[3]+t];if("max"===i&&r>k?k=r:"avg"===i&&(N+=r,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===i?N/Math.max(S,1):k}}}}return y}function gG(e,t,a,n,r){let i=im(n,t,a),s=P(a),l=en(n);if(i){let a=ic(t,l);return"string"===r?e.slice(a,a+s):e.subarray(a,a+s)}let o="string"===r?oK(e):e,p=rv(n,r,o),d=rv(a,r);for(let e=0;e<d.size;++e){let a=d.indexToLoc(e),n=a.map((e,a)=>e+t[a]);d.set(p.get(...n),...a)}return"string"===r?oX(d.values):d.values}function gH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:i,size:s}=n;gr(r,"slice");let[l,o]=ig(r,i,s);ie(r,l,o);let p=gG(a.data.get(r.dataId).values,l,o,r.shape,r.dtype);return a.makeTensorInfo(o,r.dtype,p)}function gj(e,t,a,n,r){let i=P(n),s=es(r,a);for(let a=0;a<e.length;a++){let n=e[a];if(n<0)throw Error("Input x must be non-negative!");n>=r||(i>0?s[n]+=t[a]:s[n]+=1)}return s}function gq(e,t,a,n=!1){let r=e.shape[0],i=e.shape[1],s=rv([r,a],t.dtype);for(let l=0;l<r;l++)for(let r=0;r<i;r++){let i=e.get(l,r);if(i<0)throw Error("Input x must be non-negative!");i>=a||(n?s.set(1,l,i):t.size>0?s.set(s.get(l,i)+t.get(l,r),l,i):s.set(s.get(l,i)+1,l,i))}return s}let gK=gh((e,t)=>e&t),gX=gS(eO,gK),gY=gs(e=>Math.ceil(e)),gJ=go(eV,gY),gZ=gl(eB,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e);function gQ(e,t,a,n){let r=X(a,P(t));if(n&&"string"!==a){let t=0;e.forEach(e=>{let a=P(e.shape);r.set(e.vals,t),t+=a})}else{let n=0;e.forEach(e=>{let i="string"===a?oK(e.vals):e.vals,s=0;for(let a=0;a<e.shape[0];++a){let l=a*t[1]+n;for(let t=0;t<e.shape[1];++t)r[l+t]=i[s++]}n+=e.shape[1]})}return r}function g1(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.data.get(n.dataId).complexTensorInfos.imag,i=a.data.get(r.dataId).values;return a.makeTensorInfo(r.shape,r.dtype,i)}function g0(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,i=q(r,t[0].shape)[0];l2(t.map(e=>e.shape),i);let s=l4(t.map(e=>e.shape),i);if(0===P(s))return a.makeTensorInfo(s,t[0].dtype,[]);let l=t.filter(e=>P(e.shape)>0);if(1===l.length)return gd({inputs:{x:l[0]},backend:a});if("complex64"===l[0].dtype){let e=l.map(e=>gk({inputs:{input:e},backend:a})),t=l.map(e=>g1({inputs:{input:e},backend:a})),n=g0({inputs:e,backend:a,attrs:{axis:i}}),r=g0({inputs:t,backend:a,attrs:{axis:i}}),s=gw({inputs:{real:n,imag:r},backend:a});return e.forEach(e=>a.disposeIntermediateTensorInfo(e)),t.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),s}let o=l.map(e=>{let t=P(e.shape.slice(i));return gE({inputs:{x:e},backend:a,attrs:{shape:[-1,t]}})}),p=o.map(e=>({vals:a.data.get(e.dataId).values,shape:e.shape}));s=l4(o.map(e=>e.shape),1);let d=1===o[0].shape[0],u=gQ(p,s,t[0].dtype,d),h=l4(l.map(e=>e.shape),i),m=a.makeTensorInfo(h,t[0].dtype,u);return o.forEach(e=>a.disposeIntermediateTensorInfo(e)),m}function g2(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:i}=t,{strides:s,pad:l,dataFormat:o,dilations:p,dimRoundingMode:d}=n;gr([r,i],"conv2d");let u=iO(o),h=iS(r.shape,i.shape,s,p,l,d,!1,u),m=h.filterHeight,c=h.filterWidth,f=h.dilationHeight,g=h.dilationWidth,v=h.padInfo.left,b=h.padInfo.top,y="channelsLast"===h.dataFormat,w=new nh(h.outShape,r.dtype),x=en(r.shape),k=en(i.shape),N=x[0],I=y?x[1]:x[2],S=y?x[2]:1,T=y?1:x[1],C=w.strides[0],$=y?w.strides[1]:w.strides[2],E=y?w.strides[2]:1,_=y?1:w.strides[1],R=a.data.get(r.dataId).values,A=a.data.get(i.dataId).values,D=w.values;for(let e=0;e<h.batchSize;++e){let t=e*N,a=e*C;for(let e=0;e<h.outHeight;++e){let n=a+e*$,r=e*h.strideHeight-b;for(let e=0;e<m;++e){let a=r+e*f;if(a<0||a>=h.inHeight)continue;let i=e*k[0],s=t+a*I;for(let e=0;e<h.outWidth;++e){let t=n+e*E,a=e*h.strideWidth-v;for(let e=0;e<c;++e){let n=a+e*g;if(n<0||n>=h.inWidth)continue;let r=i+e*k[1],l=s+n*S,o=r;for(let e=0;e<h.inChannels;++e){let a=R[l+e*T];for(let e=0;e<h.outChannels;++e)D[t+e*_]+=a*A[o+e];o+=h.outChannels}}}}}}return a.makeTensorInfo(w.shape,w.dtype,D)}let g4=gl("Cos",e=>Math.cos(e)),g6=gl(eX,e=>Math.cosh(e));function g3(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:i}=t,{strides:s,pad:l,dilations:o,dimRoundingMode:p}=n;gr([r,i],"depthwiseConv2DNative");let d=en(r.shape),u=en(i.shape),h=o;null==h&&(h=[1,1]),V(iD(s,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${h}'`);let m=iS(r.shape,i.shape,s,h,l,p,!0),{filterHeight:c,filterWidth:f,dilationHeight:g,dilationWidth:v,padInfo:b}=m,y=b.left,w=b.top,x=m.outChannels/m.inChannels,k=new nh(m.outShape,r.dtype),N=a.data.get(r.dataId).values,I=a.data.get(i.dataId).values,S=k.values;for(let e=0;e<m.batchSize;++e){let t=e*d[0],a=e*k.strides[0];for(let e=0;e<m.outHeight;++e){let n=a+e*k.strides[1],r=e*m.strideHeight-w;for(let e=0;e<c;++e){let a=r+e*g;if(a<0||a>=m.inHeight)continue;let i=e*u[0],s=t+a*d[1];for(let e=0;e<m.outWidth;++e){let t=n+e*k.strides[2],a=e*m.strideWidth-y;for(let e=0;e<f;++e){let n=a+e*v;if(n<0||n>=m.inWidth)continue;let r=i+e*u[1],l=s+n*m.inChannels,o=t,p=r;for(let e=0;e<m.inChannels;++e){let t=N[l+e];for(let e=0;e<x;++e)S[o+e]+=t*I[p+e];o+=x,p+=x}}}}}}return a.makeTensorInfo(k.shape,k.dtype,k.values)}let g9=gh((e,t)=>e*t),g5=gS(tB,g9,gT((e,t,a,n)=>({real:e*a-t*n,imag:e*n+t*a})));function g8(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{axis:s,keepDims:l}=r;gr(i,"sum");let o=(t="bool"===i.dtype?gI({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):gd({inputs:{x:i},backend:n})).shape.length,p=q(s,t.shape),d=sb(p,o),u=p,h=t;null!=d&&(h=gO({inputs:{x:t},backend:n,attrs:{perm:d}}),u=sw(u.length,o)),sv("sum",u,h.shape.length);let[m,c]=sf(h.shape,u),f=gx(n,m,ny(h.dtype,"int32")),g=P(c),v=n.data.get(f.dataId).values,b=n.data.get(h.dataId).values;for(let e=0;e<v.length;++e){let t=e*g,a=0;for(let e=0;e<g;++e)a+=b[t+e];v[e]=a}if(l){let e=sg(f.shape,p),t=f;f=gE({inputs:{x:f},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(t),null!=d&&n.disposeIntermediateTensorInfo(h),f}let g7=gh((e,t)=>+(e===t)),ve=gS(ta,g7,null,"bool"),vt=gl("Erf",e=>{let t=Math.sign(e),a=Math.abs(e),n=1/(1+oh*a);return t*(1-((((ov*n+og)*n+of)*n+oc)*n+om)*n*Math.exp(-a*a))}),va=gs(e=>Math.exp(e)),vn=go("Exp",va,"float32");function vr(e){let{inputs:t,backend:a,attrs:n}=e,{input:r}=t,{dim:i}=n,s=r.shape.length,l=r.shape.slice(),o=i;return i<0&&(V(-(s+1)<=i,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),o=s+i+1),l.splice(o,0,1),gE({inputs:{x:r},backend:a,attrs:{shape:l}})}let vi=gs(e=>Math.expm1(e)),vs=go(tr,vi),vl=gS(e7,gh((e,t)=>e/t)),vo={kernelName:e7,backendName:"cpu",kernelFunc:vl},vp=gh((e,t)=>e-t),vd=gS("Sub",vp,gT((e,t,a,n)=>({real:e-a,imag:t-n})));function vu(e,t,a){let n=e.shape,r=n[0],i=n[1],s=a.data.get(e.dataId),l=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,p=[r,i],d=P(p),u=X("float32",d),h=X("float32",d);for(let e=0;e<r;e++){let n=gH({inputs:{x:l},backend:a,attrs:{begin:[e,0],size:[1,i]}}),r=gH({inputs:{x:o},backend:a,attrs:{begin:[e,0],size:[1,i]}}),s=gw({inputs:{real:n,imag:r},backend:a}),{real:p,imag:d}=function(e,t,a){var n;let r=P(e.shape),i=a.data.get(e.dataId),s=a.data.get(i.complexTensorInfos.real.dataId).values,l=a.data.get(i.complexTensorInfos.imag.dataId).values;if(((n=r)&n-1)!=0)return oy(function(e,t,a){let n=new Float32Array(2*t);for(let r=0;r<t;r++){let i=0,s=0;for(let n=0;n<t;n++){let l=oS(r*n,t,a),o=ok(e,n);i+=o.real*l.real-o.imag*l.imag,s+=o.real*l.imag+o.imag*l.real}a&&(i/=t,s/=t),oN(n,i,s,r)}return n}(ob(s,l),r,t));{let n=function e(t,a,n,r,i){if(1===n)return{real:t,imag:a};let s=ob(t,a),l=n/2,o=ow(s),p=o.real,d=o.imag,u=[p.length],h=i.makeTensorInfo(u,"float32",p),m=i.makeTensorInfo(u,"float32",d),c=gw({inputs:{real:h,imag:m},backend:i}),f=ox(s),g=f.real,v=f.imag,b=[g.length],y=i.makeTensorInfo(b,"float32",g),w=i.makeTensorInfo(b,"float32",v),x=gw({inputs:{real:y,imag:w},backend:i}),k=e(p,d,l,r,i),N=k.real,I=k.imag,S=[N.length],T=i.makeTensorInfo(S,"float32",N),C=i.makeTensorInfo(S,"float32",I),$=gw({inputs:{real:T,imag:C},backend:i}),E=e(g,v,l,r,i),_=E.real,R=E.imag,A=[_.length],D=i.makeTensorInfo(A,"float32",_),F=i.makeTensorInfo(A,"float32",R),O=gw({inputs:{real:D,imag:F},backend:i}),L=oI(n,r),M=[L.real.length],V=i.makeTensorInfo(M,"float32",L.real),B=i.makeTensorInfo(M,"float32",L.imag),z=gw({inputs:{real:V,imag:B},backend:i}),P=g5({inputs:{a:z,b:O},backend:i}),U=g$({inputs:{a:$,b:P},backend:i}),W=vd({inputs:{a:$,b:P},backend:i}),G=gk({inputs:{input:U},backend:i}),H=gk({inputs:{input:W},backend:i}),j=g1({inputs:{input:U},backend:i}),q=g1({inputs:{input:W},backend:i}),K=g0({inputs:[G,H],backend:i,attrs:{axis:0}}),X=g0({inputs:[j,q],backend:i,attrs:{axis:0}}),Y=i.data.get(K.dataId).values,J=i.data.get(X.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(m),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(w),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(C),i.disposeIntermediateTensorInfo($),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(F),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(K),i.disposeIntermediateTensorInfo(X),{real:Y,imag:J}}(s,l,r,t,a),i=[e.shape[0],e.shape[1]];if(t){let e=a.makeTensorInfo(i,"float32",n.real),t=a.makeTensorInfo(i,"float32",n.imag),s=a.makeTensorInfo([],"float32",ne(r,"float32")),l=gd({inputs:{x:s},backend:a}),o=vo.kernelFunc({inputs:{a:e,b:s},backend:a}),p=vo.kernelFunc({inputs:{a:t,b:l},backend:a}),d=a.data.get(o.dataId).values,u=a.data.get(p.dataId).values;return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(p),{real:d,imag:u}}return n}}(s,t,a),m=ob(p,d);for(let t=0;t<i;t++){let a=ok(m,t);u[e*i+t]=a.real,h[e*i+t]=a.imag}a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s)}let m=a.makeTensorInfo(p,"float32",u),c=a.makeTensorInfo(p,"float32",h),f=gw({inputs:{real:m,imag:c},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(c),f}function vh(e){var t,a,n;let{backend:r,attrs:i}=e,{shape:s,value:l,dtype:o}=i,p=o||ee(l),d=X(p,P(s));return t=d,a=l,n=0,t.fill(a),r.makeTensorInfo(s,p,d)}let vm=gs(e=>Math.floor(e)),vc=go(tl,vm),vf=gS(to,gh((e,t)=>Math.floor(e/t)),null,"int32");function vg(e,t,a,n,r,i,s,l,o){let p=rv([n,i],a);for(let a=0;a<n;a++){let n=[],d=0;for(let t=0;t<r;t++){let i=e[a*r+t];d+=i*s[t],n.push(i)}if(d<0||d>=o/i)throw Error(`Invalid indices: ${n} does not index into ${l}`);for(let e=0;e<i;e++)p.values[a*i+e]=t.get(...t.indexToLoc(d*i+e))}return p}function vv(e,t,a){let n=rv(a,e.dtype);for(let a=0;a<n.size;++a){let r=n.indexToLoc(a).slice(),i=r[0],s=r[2],l=t.locToIndex([i,s]);r[2]=t.values[l];let o=e.locToIndex(r);0<=o&&o<e.values.length&&(n.values[a]=e.values[o])}return n}let vb=gh((e,t)=>+(e>t)),vy=gS(th,vb,null,"bool"),vw=gh((e,t)=>+(e>=t)),vx=gS(tm,vw,null,"bool"),vk=gl(tv,e=>+!!Number.isFinite(e),"bool"),vN=gl(tb,e=>+(Math.abs(e)===1/0),"bool"),vI=gl(ty,e=>+!!Number.isNaN(e),"bool"),vS=gh((e,t)=>+(e<t)),vT=gS(tx,vS,null,"bool"),vC=gh((e,t)=>+(e<=t)),v$=gS(tk,vC,null,"bool");function vE(e,t,a){let n=(t-e)/(a-1),r=es(a,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}let v_=gs(e=>Math.log(e)),vR=go("Log",v_),vA=gl(tI,e=>Math.log1p(e)),vD=gS(tS,gh((e,t)=>e&&t),null,"bool"),vF=gl(tT,e=>+!e,"bool"),vO=gS(tC,gh((e,t)=>e||t),null,"bool");function vL(e,t,a,n){let r=X(n,P(a));for(let a=0;a<r.length;++a){let n=a*t,i=e[n];for(let a=0;a<t;++a){let t=e[n+a];(Number.isNaN(t)||t>i)&&(i=t)}r[a]=i}return r}function vM(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=n,l=r.shape,o=l.length,p=q(i,l),d=p,u=sb(d,o),h=a.data.get(r.dataId).values;if(null!=u){let e=Array(o);for(let t=0;t<e.length;t++)e[t]=l[u[t]];h=gF(h,l,r.dtype,u,e),d=sw(d.length,o),l=e}gr(r,"max"),sv("max",d,o);let[m,c]=sf(l,d),f=vL(h,P(c),m,r.dtype),g=a.write(f,m,r.dtype),v=m;return s&&(v=sg(m,p)),{dataId:g,shape:v,dtype:r.dtype}}let vV=gh((e,t)=>Math.max(e,t)),vB=gS(tE,vV),vz=gh((e,t)=>Math.min(e,t)),vP=gS(tL,vz),vU=gS("Mod",gh((e,t)=>{let a=e%t;return e<0&&t<0||e>=0&&t>=0?a:(a+t)%t}));function vW(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:i}=n,s=r.shape.length,l=i;if(-1===l&&(l=s-1),l!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${l}`);let o=q([l],r.shape),p=vM({inputs:{x:r},backend:a,attrs:{reductionIndices:o,keepDims:!1}}),d=sg(p.shape,o),u=gE({inputs:{x:p},backend:a,attrs:{shape:d}}),h=vd({inputs:{a:r,b:u},backend:a}),m=vn({inputs:{x:h},backend:a}),c=g8({inputs:{x:m},backend:a,attrs:{axis:o,keepDims:!1}}),f=gE({inputs:{x:c},backend:a,attrs:{shape:d}}),g=vl({inputs:{a:m,b:f},backend:a});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),g}function vG(e,t,a){return g9([],t,ne(-1,a),e,a)}let vH=gh((e,t)=>+(e!==t)),vj=gS(tz,vH,null,"bool");function vq(e){let{inputs:t,backend:a}=e,{x:n}=t;if("string"===n.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==n.dtype)return vh({backend:a,attrs:{shape:n.shape,value:0,dtype:n.dtype}});{let e=gk({inputs:{input:n},backend:a}),t=vq({inputs:{x:e},backend:a}),r=g1({inputs:{input:n},backend:a}),i=vq({inputs:{x:r},backend:a}),s=gw({inputs:{real:t,imag:i},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),s}}function vK(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(1===t.length)return vr({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{B(i,e.shape,"All tensors passed to stack must have matching shapes"),V(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let l=[],o=g0({inputs:t.map(e=>{let t=vr({inputs:{input:e},backend:a,attrs:{dim:r}});return l.push(t),t}),backend:a,attrs:{axis:r}});return l.forEach(e=>a.disposeIntermediateTensorInfo(e)),o}let vX={kernelName:tq,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:i,constantValue:s}=n;gr(r,"pad");let l=i.map((e,t)=>e[0]+r.shape[t]+e[1]),o=i.map(e=>e[0]),p=a.data.get(r.dataId).values,d=P(r.shape),u=r.shape.length,h=en(r.shape),m=P(l),c=l.length,f=en(l),g=X(r.dtype,m);0!==s&&g.fill(s);for(let e=0;e<d;e++)g[ep(ed(e,u,h).map((e,t)=>e+o[t]),c,f)]=p[e];return{dataId:a.write(g,l,r.dtype),shape:l,dtype:r.dtype}}},vY=gS("Pow",gh((e,t)=>Math.pow(e,t)));function vJ(e,t,a,n){let[r,i]=sf(e,n),s=ny(t,"int32"),l=es(P(r),s),o=P(i);for(let e=0;e<l.length;++e){let t=e*o,n=1;for(let e=0;e<o;++e)n*=a[t+e];l[e]=n}return{outVals:l,outShape:r,outDtype:s}}function vZ(e,t){let a=e.slice(0,t);for(;a.length<t;)a.push(1);for(let n=t;n<e.length;n++)a[t-1]*=e[n];return a}function vQ(e,t,a,n,r,i,s,l){if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");let o=t[0][0]-1;if(i.forEach((e,t)=>{if(e<0||e>=o){let a=ed(t,s.length,en(s)).join(",");throw Error(`indices[${a}] = ${e} is not in [0, ${o})`)}}),0===n.length)throw Error("params.rank must be nonzero");let{outSplits:p,valueSlices:d,numValues:u}=function(e,t,a,n){let r=[],i=0,s=Array(t.length-1+a.length).fill(null).map(()=>[0]);for(let e=0;e<a.length;++e){let t=a[e],r=e===a.length-1?n:a[e+1].length;if(0===t.length)throw Error("Ragged splits may not be empty");if(t[0]<0)throw Error("Ragged splits must be non-negative");if(t[t.length-1]>r)throw Error("Ragged splits must not point past values");for(let e=1;e<t.length;++e)if(t[e-1]>t[e])throw Error("Ragged splits must be sorted in ascending order")}let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];let a=t[e+1];for(let t=1;t<l+1;++t)s[e].push(t*a)}for(let n=0;n<e.length;++n){let l=e[n],o=e[n]+1;for(let e=0;e<a.length;++e){let n=a[e],r=e+t.length-1;if(r>=0){let e=s[r],t=e[e.length-1]-n[l];for(let e=l;e<o;++e)s[r].push(n[e+1]+t)}l=n[l],o=n[o]}o!==l&&(r.push([l,o]),i+=o-l)}return{outSplits:s,valueSlices:r,numValues:i}}(i,s,e,n[0]),h=function(e){let t=[];for(let a=0;a<e.length;++a){let n=X("int32",e[a].length);t.push(n),e[a].forEach((e,t)=>n[t]=e)}return t}(p),m=function(e,t,a,n,r){let i=t.slice();i[0]=r;let s=X(a,P(i)),l=e.length,o=0===l?0:l/t[0];return!function(e,t,a,n,r,i){let s=vZ(t,2)[1],l=vZ(i,2)[1],o=0;for(let t of a)for(let a=t[0];a<t[1];++a){for(let t=0;t<n;++t)r[o*l+t]=e[a*s+t];++o}}(e,t,n,o,s,i),[s,i]}(a,n,r,d,u);return[h,m[0],m[1]]}function v1(e,t,a,n,r,i,s){if(t.length>1)throw Error("starts must be a scalar or vector");if(r.length>1)throw Error("limits must be a scalar or vector");if(s.length>1)throw Error("deltas must be a scalar or vector");let l=0===t.length,o=0===r.length,p=0===s.length,d=[];l||d.push(t[0]),o||d.push(r[0]),p||d.push(s[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw Error("starts, limits, and deltas must have the same shape");let u=0===d.length?1:d[0],h=X("int32",u+1);h[0]=0;for(let t=0;t<u;++t){let a,r=l?e[0]:e[t],s=o?n[0]:n[t],d=p?i[0]:i[t];if(0===d)throw Error("Requires delta != 0");if(d>0&&s<r||d<0&&s>r)a=0;else if((a=Math.ceil(Math.abs((s-r)/d)))>0x7fffffff)throw Error("Requires ((limit - start) / delta) <= 2147483647");h[t+1]=h[t]+a}let m=X(a,h[u]),c=0;for(let t=0;t<u;++t){let a=h[t+1]-h[t],n=l?e[0]:e[t],r=p?i[0]:i[t];for(let e=0;e<a;++e)m[c++]=n,n+=r}return[h,m]}var v0=v;class v2{constructor(e,t,a,n,r,i,s,l,o,p){this.shape=e,this.shapeShape=t,this.values=a,this.valuesShape=n,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=l,this.rowPartitionValuesShapes=o,this.rowPartitionTypes=l3(p),this.raggedRank=l9(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===v0.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===v0.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case v0.VALUE_ROWIDS:return v2.getMaxWidthValueRowID(t);case v0.ROW_SPLITS:return v2.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${v0[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let a=0;for(let n=0;n<t-1;++n){let t=e[n+1]-e[n];t>a&&(a=t)}return a}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let a=0,n=e[0],r=0;for(let i=1;i<t;++i){let t=e[i];t!==n&&(n=t,r=Math.max(i-a,r),a=i)}return Math.max(t-a,r)}tensorShapeFromTensor(e,t,a=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return v6(e,a)}calculateOutputSize(e){let t=this.valuesShape;l5(this.defaultValueShape,t);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),n=l6(this.raggedRank,a,t);n[0]<0&&(n[0]=e);for(let e=1;e<=this.raggedRank;++e)n[e]<0&&(n[e]=this.getMaxWidth(e));return n}calculateFirstParentOutputIndex(e,t,a){let n=Math.min(e,a),r=[],i=0;for(let e=0;e<n;++e,i+=t)r.push(i);for(let t=n;t<e;++t)r.push(-1);return V(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,a,n){let r=e.length,i=[];for(let s=0;s<r-1;++s){let r=e[s+1]-e[s],l=Math.min(n,r),o=t[s];-1===o&&(l=0);for(let e=0;e<l;++e)i.push(o),o+=a;for(let e=0;e<r-l;++e)i.push(-1)}if(r>0&&i.length!==e[r-1])throw Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,a,n){let r=e.length,i=[];if(0===r)return[];let s=0,l=e[0];if(l>=t.length)throw Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let o=t[l];i.push(o);for(let p=1;p<r;++p){let r=e[p];if(r===l)o>=0&&(++s<n?o+=a:o=-1);else{if(s=0,l=r,r>=t.length)throw Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);o=t[r]}i.push(o)}if(i.length!==e.length)throw Error("Invalid row ids.");return i}calculateOutputIndex(e,t,a,n){let r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case v0.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,a,n);case v0.ROW_SPLITS:if(r.length-1>t.length)throw Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,a,n);default:throw Error(`Unsupported partition type: ${v0[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case v0.FIRST_DIM_SIZE:return e[0];case v0.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case v0.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${v0[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),a=Array(this.raggedRank+1);a[a.length-1]=1;for(let e=a.length-2;e>=0;--e)a[e]=a[e+1]*t[e+1];let n=v6(t,!1),r=X(this.valuesDType,P(n));if(a[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,a[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,a[e],t[e]);this.setOutput(this.raggedRank,i,r,n)}return[n,r]}setOutput(e,t,a,n){if(0===a.length)return;let r=this.values,i=n.slice(),s=P(i=i.slice(e+1)),l=t.length,o=this.defaultValue;if(o.length!==s&&1!==o.length){let e=this.defaultValueShape;nj(()=>{o=iG(iM(o,e),i).dataSync()})}let p=0,d=0,u=0;for(let e=0;e<=l;++e){let n=e<l?t[e]:-1;if(n===u){++u;continue}if(d<u){let e=r.subarray(p*s);v4(a.subarray(d*s),e,(u-d)*s)}if(e>=l&&(n=Math.floor(a.length/s)),n>u)if(1===this.defaultValue.length)a.subarray(u*s,n*s).fill(this.defaultValue[0]),u=n;else for(;n>u;)v4(a.slice(u*s),o,s),++u;n<0?(p=e+1,d=u):(p=e,u=(d=u)+1)}}}function v4(e,t,a){for(let n=0;n<a;n++)e[n]=t[n]}function v6(e,t){let a=[];for(let n of e){if(n<0){if(!t)throw Error(`Dimension ${n} must be >= 0`);if(n<-1)throw Error(`Dimension ${n} must be >= -1`);n=-1}a.push(n)}return a}function v3(e,t,a,n,r,i,s,l,o,p){return new v2(e,t,a,n,r,i,s,l,o,p).compute()}function v9(e,t,a,n){let r=e===t,i=e<t&&a<0,s=t<e&&a>1;if(r||i||s)return es(0,n);let l=es(Math.abs(Math.ceil((t-e)/a)),n);t<e&&1===a&&(a=-1),l[0]=e;for(let e=1;e<l.length;e++)l[e]=l[e-1]+a;return l}let v5=gl(t0,e=>1/e),v8=gl(ae,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),v7=gs(e=>1/Math.sqrt(e)),be=go(at,v7);function bt(e,t,a,n,r,i,s,l,o,p){let d=e.values,u=t.values;if(0===n)return rv(a,t.dtype);let h=o instanceof nh?o:rv([n/r,r],t.dtype);"string"==typeof o||"number"==typeof o?h.values.fill(o):"boolean"==typeof o&&h.values.fill(+o);for(let e=0;e<i;e++){let i=[],o=0;for(let t=0;t<s;t++){let a=d[e*s+t];i.push(a),o+=a*l[t]}if(o<0||o>=n/r)throw Error(`Invalid indices: ${i} does not index into ${a}`);for(let a=0;a<r;a++)p?h.values[o*r+a]+=u[e*r+a]:h.values[o*r+a]=0===t.rank?u[0]:u[e*r+a]}return h}let ba=gl(as,e=>e>=0?ou*e:od*(Math.exp(e)-1)),bn=gl(ap,e=>e<0?-1:+(e>0)),br=gl("Sin",e=>Math.sin(e)),bi=gl(ao,e=>Math.sinh(e)),bs=Math.log(11920928955078125e-23)+2,bl=gl(au,e=>{let t,a=Math.exp(e);return e<bs?a:e>-bs?e:Math.log(1+a)});function bo(e,t,a,n,r,i,s){let l=t[0],o=i[0],p=Array(o),d=Array(l),u=t[1];if(0===o){if(0!==l)throw Error(oD(l));return[X(a,0),[0,u],X(r,0),p,d]}let h=!0,m=0,c=Array(o).fill(0);for(let t=0;t<l;++t){let a=e[t*u];if(a<0)throw Error(oF(t,a));if(a>=o)throw Error(oO(t,a,o));++c[a],h=h&&a>=m,m=a}let f=!0;for(let e=0;e<o;++e){let t=0===c[e];p[e]=t,f=f&&!t,c[e]=Math.max(c[e],1),e>0&&(c[e]+=c[e-1])}if(f&&h){for(let e=0;e<l;++e)d[e]=e;return[e,[l,u],n,p,d]}{let t=c[o-1],i=X(a,t*u),h=X(r,t),m=Array(o).fill(0);for(let t=0;t<l;++t){let a=e[t*u],r=m[a],s=(0===a?0:c[a-1])+r;m[a]++;for(let a=0;a<u;++a)i[s*u+a]=e[t*u+a];h[s]=n[t],d[t]=s}for(let e=0;e<o;++e)if(0===m[e]){let t=0===e?0:c[e-1];i[t*u+0]=e;for(let e=1;e<u;++e)i[t*u+e]=0;h[t]=s}return[i,[t,u],h,p,d]}}function bp(e,t,a,n,r){let i=P(n),s=t[0],l=r.length,o=[],p=1,d=-1;for(let e=0;e<l;++e){let t=r[e];if(-1===t){if(-1!==d)throw Error(oL(d,e));d=e,o.push(1)}else{if(t<0)throw Error(oM(e,t));p*=t,o.push(t)}}if(-1!==d){if(p<=0)throw Error(oV());let e=Math.trunc(i/p);if(p*e!==i)throw Error(oB(n,o));o[d]=e}if(P(o)!==i)throw Error(oz(n,o));let u=n.length,h=[];if(u>0){h[u-1]=1;for(let e=u-2;e>=0;--e)h[e]=h[e+1]*n[e+1]}let m=[];if(l>0){m[l-1]=1;for(let e=l-2;e>=0;--e)m[e]=m[e+1]*o[e+1]}let c=X(a,s*l);for(let t=0;t<s;++t){let a=0;for(let n=0;n<u;++n)a+=e[t*u+n]*h[n];for(let e=0;e<l;++e)c[t*l+e]=Math.trunc(a/m[e]),a%=m[e]}return[c,[s,l],o]}function bd(e,t,a,n,r,i=!1,s=0){let l=n.length,o=[t[0],e.length/t[0]],p=o[1],d=l>0?r[l-1]+1:0;if(d<0)throw Error(oP());let u=t.slice();u[0]=d;let h=X(a,u.reduce((e,t)=>e*t,1));if(0===l)return d>0&&h.fill(s),[h,u];if(d<=0)throw Error(oP());let m=0,c=1,f=0,g=r[0];for(;;){let t=0;if(c<l){if(g===(t=r[c])){++c;continue}if(g>=t)throw Error(oU())}if(g<0||g>=d)throw Error(oW(g,d));g>f&&h.fill(s,f*p,g*p);for(let t=m;t<c;++t){let a=n[t];if(a<0||a>=o[0])throw Error(oG(t,n[t],o[0]));for(let t=0;t<p;t++)h[g*p+t]+=e[a*p+t]}if(i)for(let e=0;e<p;e++)h[g*p+e]/=c-m;if(m=c,++c,f=g+1,g=t,c>l)break}return f<d&&h.fill(s,f*p,d*p),[h,u]}let bu=gs(e=>Math.sqrt(e)),bh=gl(ah,e=>Math.sqrt(e)),bm=gS(ax,gh((e,t)=>{let a=e-t;return a*a})),bc=gs((e,t)=>{let{pattern:a,replaceGlobal:n,rewrite:r}=t;return e.replace(new RegExp(a,n?"g":""),r)}),bf=go(aN,bc),bg=gl(aM,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha);function bv(e,t,a,n){let r=rv(e,t.dtype);for(let e=0;e<r.size;e++){let i=r.indexToLoc(e),s=Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*a[e]+n[e];r.set(t.get(...s),...i)}return r}class bb{constructor(e,t,a,n,r,i){this.separator=nn(e),this.nGramWidths=t,this.leftPad=nn(a),this.rightPad=nn(n),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,a,n,r,i){for(let s=0;s<r;++s){let l,o=this.getPadWidth(i),p=Math.max(0,o-s),d=Math.max(0,o-(r-(s+1))),u=i-(p+d),h=t+(p>0?0:s-o);l=0+p*this.leftPad.length;for(let t=0;t<u;++t)l+=e[h+t].length;l+=d*this.rightPad.length,l+=(p+d+u-1)*this.separator.length,a[n+s]=new Uint8Array(l);let m=a[n+s],c=0,f=e=>e.forEach(e=>m[c++]=e);for(let e=0;e<p;++e)f(this.leftPad),f(this.separator);for(let t=0;t<u-1;++t)f(e[h+t]),f(this.separator);if(u>0){f(e[h+u-1]);for(let e=0;e<d;++e)f(this.separator),f(this.rightPad)}else{for(let e=0;e<d-1;++e)f(this.rightPad),f(this.separator);f(this.rightPad)}}}compute(e,t){let a=e.length,n=t.length;if(n>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let r=1;r<n;++r){let n=t[r]>=e;if(!(n=n&&t[r]<=a))throw Error(`Invalid split value ${t[r]}, must be in [${e}, ${a}]`);e=t[r]}if(e!==a)throw Error(`Last split value must be data size. Expected ${a}, got ${e}`)}let r=n-1,i=X("int32",n);if(0===a||0===n){let e=Array(a);for(let e=0;e<=r;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=r;++e){let a=t[e]-t[e-1],n=0;this.nGramWidths.forEach(e=>{n+=this.getNumNGrams(a,e)}),this.preserveShort&&a>0&&0===n&&(n=1),i[e]=i[e-1]+n}let s=Array(i[r]);for(let a=0;a<r;++a){let n=t[a],r=i[a];if(this.nGramWidths.forEach(i=>{let l=t[a+1]-t[a],o=this.getNumNGrams(l,i);this.createNGrams(e,n,s,r,o,i),r+=o}),this.preserveShort&&r===i[a]){let i=t[a+1]-t[a];if(0===i)continue;let l=i+2*this.padWidth;this.createNGrams(e,n,s,r,1,l)}}return[s,i]}}function by(e,t,a,n,r,i,s,l){return new bb(a,n,r,i,s,l).compute(e,t)}function bw(e,t,a){let n=e.length,r=[],i=0,s=0,l=Array(n);for(let o=0;o<n;++o){let n=r.length;!function(e,t,a,n){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)n.push(e.subarray(t,t+1));return}if(1===t.length){let r=t[0],i=e.indexOf(r);for(;-1!==i;){let t=e.subarray(0,i);a&&0===t.length||n.push(t),i=(e=e.subarray(i+1)).indexOf(r)}a&&0===e.length||n.push(e);return}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){let t=e.subarray(r,i);a&&0===t.length||n.push(t),r=i+1}}(e[o],t,a,r);let p=r.length-n;l[o]=p,i+=p,s=Math.max(s,p)}let o=X("int32",2*i),p=Array(i),d=[n,s],u=0;for(let e=0;e<n;++e)for(let t=0;t<l[e];++t)o[2*u]=e,o[2*u+1]=t,p[u]=r[u],++u;return[o,p,d]}function bx(e,t){let a=X("int32",e.length);for(let n=0;n<e.length;++n)a[n]=(function(e,t=e.length){let a=aQ.fromNumber(81,!0);if(t<=32)if(t<=16)return function(e,t=e.length){if(t>=8){let a=a4.add(2*t),n=a9(e,0).add(a4),r=a9(e,t-8);return a8(a5(r,37).mul(a).add(n),a5(n,25).add(r).mul(a),a)}if(t>=4){let a=a4.add(2*t);return a8(a3(e,0,4).shl(3).add(t),a3(e,t-4,4),a)}if(t>0){let a=e[0],n=e[t>>1],r=e[t-1];return a6(a4.mul(a+(n<<8)).xor(a0.mul(t+(r<<2)))).mul(a4)}return a4}(e,t);else return function(e,t=e.length){let a=a4.add(2*t),n=a9(e,0).mul(a2),r=a9(e,8),i=a9(e,t-8).mul(a),s=a9(e,t-16).mul(a4);return a8(a5(n.add(r),43).add(a5(i,30)).add(s),n.add(a5(r.add(a4),18)).add(i),a)}(e,t);if(t<=64)return function(e,t=e.length){let a=a4.add(2*t),n=a9(e,0).mul(a4),r=a9(e,8),i=a9(e,t-8).mul(a),s=a9(e,t-16).mul(a4),l=a5(n.add(r),43).add(a5(i,30)).add(s),o=a8(l,n.add(a5(r.add(a4),18)).add(i),a),p=a9(e,16).mul(a),d=a9(e,24),u=l.add(a9(e,t-32)).mul(a),h=o.add(a9(e,t-24)).mul(a);return a8(a5(p.add(d),43).add(a5(u,30)).add(h),p.add(a5(d.add(n),18)).add(u),a)}(e,t);let n=a,r=a.mul(a2).add(113),i=a6(r.mul(a4).add(113)).mul(a4),s=[aQ.UZERO,aQ.UZERO],l=[aQ.UZERO,aQ.UZERO];n=n.mul(a4).add(a9(e,0));let o=0,p=(t-1>>6)*64,d=p+(t-1&63)-63;do n=a5(n.add(r).add(s[0]).add(a9(e,o+8)),37).mul(a2),r=a5(r.add(s[1]).add(a9(e,o+48)),42).mul(a2),n=n.xor(l[1]),r=r.add(s[0]).add(a9(e,o+40)),i=a5(i.add(l[0]),33).mul(a2),s=a7(e,o,s[1].mul(a2),n.add(l[0])),l=a7(e,o+32,i.add(l[1]),r.add(a9(e,o+16))),[i,n]=[n,i],o+=64;while(o!==p);let u=a2.add(i.and(255).shl(1));return o=d,l[0]=l[0].add(t-1&63),s[0]=s[0].add(l[0]),l[0]=l[0].add(s[0]),n=a5(n.add(r).add(s[0]).add(a9(e,o+8)),37).mul(u),r=a5(r.add(s[1]).add(a9(e,o+48)),42).mul(u),n=n.xor(l[1].mul(9)),r=r.add(s[0].mul(9).add(a9(e,o+40))),i=a5(i.add(l[0]),33).mul(u),s=a7(e,o,s[1].mul(u),n.add(l[0])),l=a7(e,o+32,i.add(l[1]),r.add(a9(e,o+16))),[i,n]=[n,i],a8(a8(s[0],l[0],u).add(a6(r).mul(a0)).add(i),a8(s[1],l[1],u).add(n),u)})(e[n]).modulo(t).getLowBitsUnsigned();return a}let bk=gl("Tan",e=>Math.tan(e)),bN=gl(a$,e=>Math.tanh(e));function bI(e,t){let a=Array(e.rank);for(let n=0;n<a.length;n++)a[n]=e.shape[n]*t[n];let n=rv(a,e.dtype);for(let t=0;t<n.values.length;++t){let a=n.indexToLoc(t),r=Array(e.rank);for(let t=0;t<r.length;t++)r[t]=a[t]%e.shape[t];let i=e.locToIndex(r);n.values[t]=e.values[i]}return n}let bS=(e,t)=>{let a=t.value-e.value;return 0===a?e.index-t.index:a};function bT(e,t,a,n,r){let i=t[t.length-1],[s,l]=[e.length/i,i],o=X(a,s*n),p=X("int32",s*n);for(let t=0;t<s;t++){let a=t*l,i=e.subarray(a,a+l),s=Array(i.length);i.forEach((e,t)=>s[t]={value:e,index:t}),n<s.length&&(!function e(t,a,n=0,r=t.length-1){for(;r>n;){if(r-n>600){let i=r-n+1,s=a-n+1,l=Math.log(i),o=.5*Math.exp(2*l/3),p=.5*Math.sqrt(l*o*(i-o)/i)*Math.sign(s-i/2),d=Math.max(n,Math.floor(a-s*o/i+p)),u=Math.min(r,Math.floor(a+(i-s)*o/i+p));e(t,a,d,u)}let i=t[a],s=n,l=r;for(M(t,n,a),bS(t[r],i)>0&&M(t,n,r);s<l;){for(M(t,s,l),s++,l--;0>bS(t[s],i);)s+=1;for(;bS(t[l],i)>0;)l-=1}0===bS(t[n],i)?M(t,n,l):M(t,l+=1,r),l<=a&&(n=l+1),a<=l&&(r=l-1)}}(s,n),s=s.slice(0,n)),r&&s.sort(bS);let d=t*n,u=o.subarray(d,d+n),h=p.subarray(d,d+n);for(let e=0;e<n;e++)u[e]=s[e].value,h[e]=s[e].index}let d=t.slice();return d[d.length-1]=n,[rv(d,a,o),rv(d,"int32",p)]}function bC(e,t,a){switch(a){case"reflect":var n,r,i,s=e,l=t;let o=s;if(o<0)if(l<=1)o=0;else{let e=2*l;o<e&&(o=e*Math.trunc(-o/e)+o),o=o<-l?o+e:-o-1}else if(o>l-1)if(l<=1)o=0;else{let e=2*l;(o-=e*Math.trunc(o/e))>=l&&(o=e-o-1)}return O(0,o,l-1);case"wrap":let p;return n=e,r=t,(p=n)<0?r<=1?p=0:p+=r*(Math.trunc(-p/(r-1))+1):p>r-1&&(r<=1?p=0:p-=r*Math.trunc(p/(r-1))),O(0,p,r-1);case"nearest":return O(0,e,t-1);default:return i=0,e}}function b$(e,t,a,n,r,i,s,l,o,p,d){return 0<=l&&l<t&&0<=o&&o<a?e[s*n+l*r+o*i+p]:d}function bE(e,t,a,n){let r=q(t,a)[0],i=[1,a[0],1];for(let e=0;e<r;e++)i[0]*=a[e];i[1]=a[r];for(let e=r+1;e<a.length;e++)i[2]*=a[e];let s=new Map,l=new Int32Array(a[r]),o=new nh(i,n,e),p=[],d=1===i[0]&&1===i[2];for(let t=0;t<a[r];t++){let a;if(d)a=e[t].toString();else{let e=[];for(let a=0;a<i[0];a++)for(let n=0;n<i[2];n++)e.push(o.get(a,t,n));a=e.join(",")}let n=s.get(a);if(null!=n)l[t]=n;else{let e=s.size;s.set(a,e),l[t]=e,p.push(t)}}let u=i.slice();u[1]=s.size;let h=new nh(u,n);p.forEach((e,t)=>{for(let a=0;a<i[0];a++)for(let n=0;n<i[2];n++)h.set(o.get(a,e,n),a,t,n)});let m=a.slice();return m[r]=u[1],{outputValues:h.values,outputShape:m,indices:l}}for(let e of[{kernelName:az,backendName:"cpu",kernelFunc:function(e){let t,a,n,{inputs:r,backend:i,attrs:s}=e,{a:l,b:o,bias:p,preluActivationWeights:d}=r,{transposeA:u,transposeB:h,activation:m,leakyreluAlpha:c}=s,f=[];for(let e of(t=g_({inputs:{a:l,b:o},attrs:{transposeA:u,transposeB:h},backend:i}),p&&(a=g$({inputs:{a:t,b:p},backend:i}),f.push(t),t=a),m&&(n=gy(i,t,m,d,c),f.push(t),t=n),f))i.disposeIntermediateTensorInfo(e);return t}},{kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,a=e.backend;gr(t,"abs");let n=new Float32Array(P(t.shape));return n=gR(a.data.get(t.dataId).values),a.makeOutput(n,t.shape,t.dtype)}},{kernelName:eb,backendName:"cpu",kernelFunc:gA},{kernelName:ey,backendName:"cpu",kernelFunc:gD},{kernelName:"Add",backendName:"cpu",kernelFunc:g$},{kernelName:ew,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e;gr(t,"addN");let n=t.map(e=>a.data.get(e.dataId).values),r=rv(t[0].shape,t[0].dtype),i=r.values;for(let e=0;e<t.length;e++){let t=n[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return a.makeTensorInfo(r.shape,r.dtype,r.values)}},{kernelName:"All",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,keepDims:s}=n;gr(r,"all");let l=q(i,r.shape),o=l,p=sb(o,r.shape.length),d=r;null!=p&&(d=gO({inputs:{x:r},backend:a,attrs:{perm:p}}),o=sw(o.length,r.shape.length)),sv("all",o,d.shape.length);let[u,h]=sf(d.shape,o),m=P(h),c=es(P(u),d.dtype),f=a.data.get(d.dataId).values;for(let e=0;e<c.length;++e){let t=e*m,a=f[t];for(let e=0;e<m;++e){let n=f[t+e];a=a&&n}c[e]=a}null!=p&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(u,d.dtype,c);if(s){let e=gE({inputs:{x:g},backend:a,attrs:{shape:sg(u,l)}});return a.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:"Any",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,keepDims:s}=n;gr(r,"any");let l=q(i,r.shape),o=l,p=sb(o,r.shape.length),d=r;null!=p&&(d=gO({inputs:{x:r},backend:a,attrs:{perm:p}}),o=sw(o.length,r.shape.length)),sv("any",o,d.shape.length);let[u,h]=sf(d.shape,o),m=P(h),c=es(P(u),d.dtype),f=a.data.get(d.dataId).values;for(let e=0;e<c.length;++e){let t=e*m,a=f[t];for(let e=0;e<m;++e){let n=f[t+e];a=a||n}c[e]=a}null!=p&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(u,d.dtype,c);if(s){let e=gE({inputs:{x:g},backend:a,attrs:{shape:sg(u,l)}});return a.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:ex,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i}=n;gr(r,"argMax");let s=q(i,r.shape),l=sb(s,r.shape.length),o=r,p=[];null!=l&&(p.push(o=gO({inputs:{x:r},backend:a,attrs:{perm:l}})),s=sw(s.length,o.shape.length)),sv("argMax",s=[s[0]],o.shape.length);let[d,u]=sf(o.shape,s),h=es(P(d),"int32"),m=P(u),c=a.data.get(o.dataId).values;for(let e=0;e<h.length;++e){let t=e*m,a=c[t],n=0;for(let e=0;e<m;++e){let r=c[t+e];r>a&&(a=r,n=e)}h[e]=n}return p.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.makeTensorInfo(d,"int32",h)}},{kernelName:ek,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i}=n;gr(r,"argMin");let s=q(i,r.shape),l=sb(s,r.shape.length),o=r,p=[];null!=l&&(p.push(o=gO({inputs:{x:r},backend:a,attrs:{perm:l}})),s=sw(s.length,o.shape.length)),sv("argMin",s=[s[0]],o.shape.length);let[d,u]=sf(o.shape,s),h=es(P(d),"int32"),m=P(u),c=a.data.get(o.dataId).values;for(let e=0;e<h.length;++e){let t=e*m,a=c[t],n=0;for(let e=0;e<m;++e){let r=c[t+e];r<a&&(a=r,n=e)}h[e]=n}return p.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.makeTensorInfo(d,"int32",h)}},{kernelName:eN,backendName:"cpu",kernelFunc:gL},{kernelName:eI,backendName:"cpu",kernelFunc:gM},{kernelName:eS,backendName:"cpu",kernelFunc:gV},{kernelName:eC,backendName:"cpu",kernelFunc:gB},{kernelName:eT,backendName:"cpu",kernelFunc:gz},{kernelName:e$,backendName:"cpu",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a;gr(i,"avgPool");let{filterSize:s,strides:l,pad:o,dimRoundingMode:p}=r;V(iD(l,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`);let d=iN(i.shape,s,l,1,o,p);if(1===d.filterWidth&&1===d.filterHeight&&U(d.inShape,d.outShape))t=gd({inputs:{x:i},backend:n});else{let e=n.data.get(i.dataId).values,a=en(i.shape),r=gP(e,i.shape,i.dtype,a,d,"avg");t=n.makeTensorInfo(d.outShape,i.dtype,r.values)}return t}},{kernelName:e_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:i,strides:s,pad:l,dimRoundingMode:o,dataFormat:p}=n;gr(r,"avgPool3d");let d=iI(r.shape,i,s,1,l,o,p),u=gW(a.data.get(r.dataId).values,r.shape,r.dtype,en(r.shape),d,"avg");return a.makeTensorInfo(u.shape,"float32",u.values)}},{kernelName:eR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i}=t,{filterSize:s,strides:l,pad:o,dimRoundingMode:p}=n;gr([r,i],"avgPool3DGrad");let d=iI(i.shape,s,l,1,o,p),u=d.strideDepth,h=d.strideHeight,m=d.strideWidth,c=d.filterDepth,f=d.filterHeight,g=d.filterWidth,v=d.dilationDepth,b=d.dilationHeight,y=d.dilationWidth,w=d.effectiveFilterDepth,x=d.effectiveFilterHeight,k=d.effectiveFilterWidth,N=w-1-d.padInfo.front,I=k-1-d.padInfo.left,S=x-1-d.padInfo.top,T=rv(i.shape,"float32"),C=1/(c*f*g),$=a.bufferSync(r);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let a=0;a<d.inDepth;++a)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let i=a-N,s=n-S,l=r-I,o=0;for(let a=0;a<w;a+=v){let n=(i+a)/u;if(!(n<0)&&!(n>=d.outDepth)&&Math.floor(n)===n)for(let a=0;a<x;a+=b){let r=(s+a)/h;if(!(r<0)&&!(r>=d.outHeight)&&Math.floor(r)===r)for(let a=0;a<k;a+=y){let i=(l+a)/m;i<0||i>=d.outWidth||Math.floor(i)!==i||(o+=$.get(e,n,r,i,t))}}}T.set(o*C,e,a,n,r,t)}return a.makeTensorInfo(T.shape,T.dtype,T.values)}},{kernelName:eE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i}=t;gr([r,i],"avgPoolGrad");let{filterSize:s,strides:l,pad:o}=n,p=iN(i.shape,s,l,1,o),d=p.strideHeight,u=p.strideWidth,h=p.filterHeight,m=p.filterWidth,c=p.dilationHeight,f=p.dilationWidth,g=p.effectiveFilterHeight,v=p.effectiveFilterWidth,b=v-1-p.padInfo.left,y=g-1-p.padInfo.top,w=rv(i.shape,"float32"),x=1/(h*m),k=a.data.get(r.dataId).values,N=rv(r.shape,"float32",k);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let a=0;a<p.inHeight;++a)for(let n=0;n<p.inWidth;++n){let r=a-y,i=n-b,s=0;for(let a=0;a<g;a+=c){let n=(r+a)/d;if(!(n<0)&&!(n>=p.outHeight)&&Math.floor(n)===n)for(let a=0;a<v;a+=f){let r=(i+a)/u;r<0||r>=p.outWidth||Math.floor(r)!==r||(s+=N.get(e,n,r,t))}}w.set(s*x,e,a,n,t)}return a.makeTensorInfo(w.shape,w.dtype,w.values)}},{kernelName:eA,backendName:"cpu",kernelFunc:g_},{kernelName:tp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,scale:i,offset:s,mean:l,variance:o}=t;V(l.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),V(null==s||l.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),V(null==i||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),gr([r,l,o,i,s],"batchNorm");let{varianceEpsilon:p}=n;null==p&&(p=.001);let d=a.data.get(r.dataId).values,u=a.data.get(l.dataId).values,h=a.data.get(o.dataId).values,m=i?a.data.get(i.dataId).values:new Float32Array([1]),c=s?a.data.get(s.dataId).values:new Float32Array([0]),f=new Float32Array(d.length),g=c.length,v=m.length,b=h.length,y=u.length,w=0,x=0,k=0,N=0;for(let e=0;e<d.length;++e)f[e]=c[w++]+(d[e]-u[x++])*m[k++]/Math.sqrt(h[N++]+p),w>=g&&(w=0),x>=y&&(x=0),k>=v&&(k=0),N>=b&&(N=0);return a.makeTensorInfo(r.shape,r.dtype,f)}},{kernelName:eD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:i,crops:s}=n;gr([r],"batchToSpaceND");let l=i.reduce((e,t)=>e*t),o=ot(r.shape,i,l),p=oa(o.length,i.length),d=on(r.shape,i,l),u=or(s,i.length),h=oi(d,s,i.length),m=gE({inputs:{x:r},backend:a,attrs:{shape:o}}),c=gO({inputs:{x:m},backend:a,attrs:{perm:p}}),f=gE({inputs:{x:c},backend:a,attrs:{shape:d}}),g=gH({inputs:{x:f},backend:a,attrs:{begin:u,size:h}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),g}},{kernelName:eF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:i}=t,{size:s}=n,l=gj(a.data.get(r.dataId).values,a.data.get(i.dataId).values,i.dtype,i.shape,s);return a.makeTensorInfo([s],i.dtype,l)}},{kernelName:eO,backendName:"cpu",kernelFunc:gX},{kernelName:eL,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t,i=a.data.get(n.dataId).values,s=a.data.get(r.dataId).values,l=rG(Array.from(i),Array.from(s));return a.makeTensorInfo([l.length],"int32",Int32Array.from(l))}},{kernelName:eM,backendName:"cpu",kernelFunc:gI},{kernelName:eV,backendName:"cpu",kernelFunc:gJ},{kernelName:eB,backendName:"cpu",kernelFunc:gZ},{kernelName:ez,backendName:"cpu",kernelFunc:gw},{kernelName:eP,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,a=e.backend,n=new Float32Array(P(t.shape)),r=a.data.get(t.dataId),i=r.complexTensorInfos.real,s=r.complexTensorInfos.imag,l=a.data.get(i.dataId).values,o=a.data.get(s.dataId).values;for(let e=0;e<l.length;e++){let t=l[e],a=o[e];n[e]=Math.hypot(t,a)}return a.makeOutput(n,t.shape,"float32")}},{kernelName:eU,backendName:"cpu",kernelFunc:g0},{kernelName:eW,backendName:"cpu",kernelFunc:g2},{kernelName:eG,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:i}=t,{strides:s,pad:l,dataFormat:o,dimRoundingMode:p,filterShape:d}=n;gr([r,i],"conv2dBackpropFilter");let u=iO(o),h=iS(r.shape,d,s,1,l,p,!1,u),{strideHeight:m,strideWidth:c,filterHeight:f,filterWidth:g}=h,v="channelsLast"===h.dataFormat,b=new nh(h.filterShape,"float32"),y=h.padInfo.left,w=h.padInfo.top,x=a.data.get(r.dataId).values,k=a.data.get(i.dataId).values,N=new nh(r.shape,r.dtype,x),I=new nh(i.shape,i.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((w-e)/m)),a=Math.min(h.outHeight,(h.inHeight+w-e)/m);for(let n=0;n<g;++n){let r=Math.max(0,Math.ceil((y-n)/c)),i=Math.min(h.outWidth,(h.inWidth+y-n)/c);for(let s=0;s<h.inChannels;++s)for(let l=0;l<h.outChannels;++l){let o=0;for(let p=0;p<h.batchSize;++p)for(let d=t;d<a;++d){let t=e+d*m-w;for(let e=r;e<i;++e){let a=n+e*c-y;v?o+=N.get(p,t,a,s)*I.get(p,d,e,l):o+=N.get(p,s,t,a)*I.get(p,l,d,e)}}b.set(o,e,n,s,l)}}}return a.makeTensorInfo(b.shape,b.dtype,b.values)}},{kernelName:eH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:i}=t,{inputShape:s,strides:l,pad:o,dataFormat:p,dimRoundingMode:d}=n;gr([r,i],"conv2dBackpropInput");let u=en(i.shape),h=en(r.shape),m=iO(p),c=iS(s,i.shape,l,1,o,d,!1,m),f=new nh(c.inShape,"float32"),g=f.values,v=a.data.get(r.dataId).values,b=a.data.get(i.dataId).values,[y,w,x]=u,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:S,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:_,strideHeight:R,strideWidth:A}=c;m=c.dataFormat;let D=N-1-c.padInfo.top,F=I-1-c.padInfo.left,O="channelsLast"===m,L=f.strides[0],M=O?f.strides[1]:f.strides[2],V=O?f.strides[2]:1,B=O?1:f.strides[1],z=h[0],P=O?h[1]:h[2],U=O?h[2]:1,W=O?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let a=0;a<T;++a){let n=a-D,r=Math.max(0,Math.ceil(n/R)),i=Math.min(E,(N+n)/R);for(let s=0;s<C;++s){let l=s-F,o=Math.max(0,Math.ceil(l/A)),p=Math.min(_,(I+l)/A),d=0;for(let a=r;a<i;++a){let r=a*R-n;for(let n=o;n<p;++n){let i=n*A-l,s=z*e+P*a+U*n,o=y*(N-1-r)+w*(I-1-i)+x*t;for(let e=0;e<$;++e)d+=v[s+W*e]*b[o+e]}}g[L*e+M*a+V*s+B*t]=d}}return a.makeTensorInfo(f.shape,f.dtype,f.values)}},{kernelName:ej,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:i}=t,{strides:s,pad:l,dilations:o}=n;gr([r,i],"conv3d");let p=iT(r.shape,i.shape,s,o,l),{filterDepth:d,filterHeight:u,filterWidth:h,dilationDepth:m,dilationHeight:c,dilationWidth:f,padInfo:g}=p,v=g.front,b=g.left,y=g.top,w=new nh(p.outShape,r.dtype),x=a.data.get(r.dataId).values,k=a.data.get(i.dataId).values,N=w.values,I=en(r.shape),S=en(i.shape);for(let e=0;e<p.batchSize;++e){let t=e*I[0],a=e*w.strides[0];for(let e=0;e<p.outDepth;++e){let n=a+e*w.strides[1],r=e*p.strideDepth-v;for(let e=0;e<d;++e){let a=r+e*m;if(a<0||a>=p.inDepth)continue;let i=e*S[0],s=t+a*I[1];for(let e=0;e<p.outHeight;++e){let t=n+e*w.strides[2],a=e*p.strideHeight-y;for(let e=0;e<u;++e){let n=a+e*c;if(n<0||n>=p.inHeight)continue;let r=i+e*S[1],l=s+n*I[2];for(let e=0;e<p.outWidth;++e){let a=t+e*p.outChannels,n=e*p.strideWidth-b;for(let e=0;e<h;++e){let t=n+e*f;if(t<0||t>=p.inWidth)continue;let i=r+e*S[2],s=l+t*p.inChannels,o=i;for(let e=0;e<p.inChannels;++e){let t=x[s+e];for(let e=0;e<p.outChannels;++e)N[a+e]+=t*k[o+e];o+=p.outChannels}}}}}}}}return a.makeTensorInfo(w.shape,w.dtype,w.values)}},{kernelName:eq,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:i}=t,{strides:s,pad:l,filterShape:o}=n;gr([r,i],"conv3dBackpropFilterV2");let p=en(r.shape),d=en(i.shape),u=iT(r.shape,o,s,1,l),h=u.strideDepth,m=u.strideHeight,c=u.strideWidth,f=u.filterDepth,g=u.filterHeight,v=u.filterWidth,b=new nh(u.filterShape,"float32"),y=b.values,[w,x,k,N]=b.strides,I=a.data.get(i.dataId).values,[S,T,C,$]=d,E=a.data.get(r.dataId).values,[_,R,A,D]=p,F=u.padInfo.front,O=u.padInfo.left,L=u.padInfo.top;for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((F-e)/h)),a=Math.min(u.outDepth,(u.inDepth+F-e)/h),n=e*w;for(let r=0;r<g;++r){let i=Math.max(0,Math.ceil((L-r)/m)),s=Math.min(u.outHeight,(u.inHeight+L-r)/m),l=r*x+n;for(let n=0;n<v;++n){let o=Math.max(0,Math.ceil((O-n)/c)),p=Math.min(u.outWidth,(u.inWidth+O-n)/c),d=n*k+l;for(let l=0;l<u.inChannels;++l){let f=l*N+d;for(let d=0;d<u.outChannels;++d){let g=0;for(let f=0;f<u.batchSize;++f){let u=f*_,v=f*S;for(let f=t;f<a;++f){let t=(e+f*h-F)*R+u,a=f*T+v;for(let e=i;e<s;++e){let i=(r+e*m-L)*A+t,s=e*C+a;for(let e=o;e<p;++e){let t=(n+e*c-O)*D+i,a=e*$+s;g+=E[t+l]*I[a+d]}}}}y[f+d]=g}}}}}return a.makeTensorInfo(b.shape,b.dtype,b.values)}},{kernelName:eK,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:i}=t,{pad:s,strides:l,inputShape:o}=n;gr([r],"conv3dBackpropInputV2");let p=en(r.shape),d=en(i.shape),u=iT(o,i.shape,l,1,s),h=new nh(u.inShape,"float32"),m=h.values,[c,f,g,v]=h.strides,b=a.data.get(r.dataId).values,[y,w,x,k]=p,N=a.data.get(i.dataId).values,[I,S,T,C]=d,{batchSize:$,filterDepth:E,filterHeight:_,filterWidth:R,inChannels:A,inDepth:D,inHeight:F,inWidth:O,outChannels:L,outDepth:M,outHeight:V,outWidth:B,strideDepth:z,strideHeight:P,strideWidth:U}=u,W=E-1-u.padInfo.front,G=_-1-u.padInfo.top,H=R-1-u.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<A;++t)for(let a=0;a<D;++a){let n=a-W,r=Math.max(0,Math.ceil(n/z)),i=Math.min(M,(E+n)/z);for(let s=0;s<F;++s){let l=s-G,o=Math.max(0,Math.ceil(l/P)),p=Math.min(V,(_+l)/P);for(let d=0;d<O;++d){let u=d-H,h=Math.max(0,Math.ceil(u/U)),$=Math.min(B,(R+u)/U),A=0;for(let a=r;a<i;++a){let r=a*z-n;for(let n=o;n<p;++n){let i=n*P-l;for(let s=h;s<$;++s){let l=s*U-u,o=y*e+w*a+x*n+k*s,p=I*(E-1-r)+S*(_-1-i)+T*(R-1-l)+C*t;for(let e=0;e<L;++e)A+=b[o+e]*N[p+e]}}}m[c*e+f*a+g*s+v*d+t]=A}}}return a.makeTensorInfo(h.shape,h.dtype,h.values)}},{kernelName:"Cos",backendName:"cpu",kernelFunc:g4},{kernelName:eX,backendName:"cpu",kernelFunc:g6},{kernelName:eZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:l,method:o,extrapolationValue:p}=n,[d,u,h,m]=r.shape,c=i.shape[0],[f,g]=l,v=rv([c,f,g,m],"float32"),b=a.data.get(i.dataId).values,y=a.data.get(s.dataId).values,w=a.data.get(r.dataId).values,x=en(r.shape),k=en(v.shape);for(let e=0;e<c;e++){let t=4*e,a=b[t],n=b[t+1],r=b[t+2],i=b[t+3],s=y[e];if(s>=d)continue;let l=f>1?(r-a)*(u-1)/(f-1):0,c=g>1?(i-n)*(h-1)/(g-1):0;for(let t=0;t<f;t++){let d=f>1?a*(u-1)+t*l:.5*(a+r)*(u-1);if(d<0||d>u-1){for(let a=0;a<g;a++)for(let n=0;n<m;n++){let r=n+a*k[2]+t*k[1]+e*k[0];v.values[r]=p}continue}if("bilinear"===o){let a=Math.floor(d),r=Math.ceil(d),l=d-a;for(let o=0;o<g;o++){let d=g>1?n*(h-1)+o*c:.5*(n+i)*(h-1);if(d<0||d>h-1){for(let a=0;a<m;a++){let n=a+o*k[2]+t*k[1]+e*k[0];v.values[n]=p}continue}let u=Math.floor(d),f=Math.ceil(d),b=d-u;for(let n=0;n<m;n++){let i=n+u*x[2]+a*x[1]+s*x[0],p=w[i],d=w[i=n+f*x[2]+a*x[1]+s*x[0]],h=w[i=n+u*x[2]+r*x[1]+s*x[0]],m=w[i=n+f*x[2]+r*x[1]+s*x[0]],c=p+(d-p)*b,g=h+(m-h)*b;i=n+o*k[2]+t*k[1]+e*k[0],v.values[i]=c+(g-c)*l}}}else for(let a=0;a<g;++a){let r=g>1?n*(h-1)+a*c:.5*(n+i)*(h-1);if(r<0||r>h-1){for(let n=0;n<m;n++){let r=n+a*k[2]+t*k[1]+e*k[0];v.values[r]=p}continue}let l=Math.round(r),o=Math.round(d);for(let n=0;n<m;n++){let r=n+l*x[2]+o*x[1]+s*x[0],i=n+a*k[2]+t*k[1]+e*k[0];v.values[i]=w[r]}}}}return a.makeTensorInfo(v.shape,v.dtype,v.values)}},{kernelName:eY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,exclusive:s,reverse:l}=n;gr(r,"cumprod");let o=sb([i],r.shape.length),p=r;null!=o&&(p=gO({inputs:{x:r},backend:a,attrs:{perm:o}}));let d=sw(1,r.shape.length)[0];if(d!==p.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${d}`);let u=ny(p.dtype,"int32"),h=ei(P(p.shape),u),m=a.data.get(p.dataId).values,c=p.shape[p.shape.length-1],f=l?(e,t)=>e+c-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=c)for(let t=0;t<c;t++){let a=f(e,t);if(0===t)h[a]=s?1:m[a];else{let n=f(e,t-1);h[a]=s?m[n]*h[n]:m[a]*h[n]}}let g=a.makeTensorInfo(p.shape,u,h);if(null!=o){let e=gO({inputs:{x:g},backend:a,attrs:{perm:sy(o)}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(p),e}return g}},{kernelName:eJ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,exclusive:s,reverse:l}=n;gr(r,"cumsum");let o=sb([i],r.shape.length),p=r;null!=o&&(p=gO({inputs:{x:r},backend:a,attrs:{perm:o}}));let d=sw(1,r.shape.length)[0];if(d!==p.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${d}`);let u=ny(p.dtype,"int32"),h=es(P(p.shape),u),m=a.data.get(p.dataId).values,c=p.shape[p.shape.length-1],f=l?(e,t)=>e+c-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=c)for(let t=0;t<c;t++){let a=f(e,t);if(0===t)h[a]=s?0:m[a];else{let n=f(e,t-1);h[a]=s?m[n]+h[n]:m[a]+h[n]}}let g=a.makeTensorInfo(p.shape,u,h);if(null!=o){let e=gO({inputs:{x:g},backend:a,attrs:{perm:sy(o)}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(p),e}return g}},{kernelName:eQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:i}=t,{size:s,binaryOutput:l}=n;if(1===r.shape.length){let e=gj(a.data.get(r.dataId).values,a.data.get(i.dataId).values,i.dtype,i.shape,s);return a.makeTensorInfo([s],i.dtype,e)}if(2===r.shape.length){let e=gq(a.bufferSync(r),a.bufferSync(i),s,l);return a.makeTensorInfo(e.shape,i.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},{kernelName:e1,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:i,dataFormat:s}=n;V("NHWC"===s,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`);let l=r.shape[0],o=r.shape[1],p=r.shape[2],d=r.shape[3],u=o*i,h=p*i,m=d/(i*i),c=a.data.get(r.dataId).values,f=new Float32Array(l*u*h*m),g=0;for(let e=0;e<l;++e)for(let t=0;t<u;++t){let a=Math.floor(t/i),n=t%i;for(let t=0;t<h;++t){let r=Math.floor(t/i),s=t%i,l=(n*i+s)*m;for(let t=0;t<m;++t){let n=t+l+d*(r+p*(a+o*e));f[g++]=c[n]}}}return a.makeTensorInfo([l,u,h,m],r.dtype,f)}},{kernelName:e0,backendName:"cpu",kernelFunc:g3},{kernelName:e2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:i}=t,{strides:s,dilations:l,pad:o,dimRoundingMode:p,filterShape:d}=n;gr([r,i],"depthwiseConv2dNativeBackpropFilter");let u=iS(r.shape,d,s,l,o,p,!0),{strideHeight:h,strideWidth:m,filterHeight:c,filterWidth:f}=u,g=new nh(u.filterShape,"float32"),v=u.padInfo.left,b=u.padInfo.top,y=u.outChannels/u.inChannels,w=a.data.get(r.dataId).values,x=new nh(r.shape,r.dtype,w),k=a.data.get(i.dataId).values,N=new nh(i.shape,i.dtype,k);for(let e=0;e<c;++e){let t=Math.max(0,Math.ceil((b-e)/h)),a=Math.min(u.outHeight,(u.inHeight+b-e)/h);for(let n=0;n<f;++n){let r=Math.max(0,Math.ceil((v-n)/m)),i=Math.min(u.outWidth,(u.inWidth+v-n)/m);for(let s=0;s<u.outChannels;++s){let l=Math.trunc(s/y),o=s%y,p=0;for(let o=0;o<u.batchSize;++o)for(let d=t;d<a;++d){let t=e+d*h-b;for(let e=r;e<i;++e){let a=n+e*m-v;p+=x.get(o,t,a,l)*N.get(o,d,e,s)}}g.set(p,e,n,l,o)}}}return a.makeTensorInfo(g.shape,g.dtype,g.values)}},{kernelName:e4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:i}=t,{strides:s,dilations:l,pad:o,dimRoundingMode:p,inputShape:d}=n;gr([r,i],"depthwiseConv2DNativeBackpropInput");let u=en(r.shape),h=en(i.shape),m=iS(d,i.shape,s,l,o,p,!0),c=new nh(m.inShape,"float32"),f=c.values,[g,v,b]=c.strides,y=a.data.get(r.dataId).values,[w,x,k]=u,N=a.data.get(i.dataId).values,[I,S,T]=h,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:_,inHeight:R,inWidth:A,outChannels:D,outHeight:F,outWidth:O,strideHeight:L,strideWidth:M}=m,V=$-1-m.padInfo.top,B=E-1-m.padInfo.left,z=D/_;for(let e=0;e<C;++e)for(let t=0;t<_;++t)for(let a=0;a<R;++a){let n=a-V,r=Math.max(0,Math.ceil(n/L)),i=Math.min(F,($+n)/L);for(let s=0;s<A;++s){let l=s-B,o=Math.max(0,Math.ceil(l/M)),p=Math.min(O,(E+l)/M),d=0;for(let a=r;a<i;++a){let r=a*L-n;for(let n=o;n<p;++n){let i=n*M-l,s=w*e+x*a+k*n,o=I*($-1-r)+S*(E-1-i)+T*t;for(let e=0;e<z;++e)d+=y[s+(t*z+e)]*N[o+e]}}f[g*e+v*a+b*s+t]=d}}return a.makeTensorInfo(c.shape,c.dtype,c.values)}},{kernelName:e6,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{x:n}=t,r=P(n.shape),i=a.data.get(n.dataId).values,s=rv([r,r],n.dtype),l=s.values;for(let e=0;e<i.length;e++)l[e*r+e]=i[e];let o=[...n.shape,...n.shape];return a.makeTensorInfo(o,s.dtype,s.values)}},{kernelName:e3,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r}=e,{strides:i,pad:s,dilations:l}=a,o=t.data.get(n.dataId).values,p=n.shape.length,d=t.data.get(r.dataId).values,u=r.shape.length,{batchSize:h,inHeight:m,inWidth:c,inChannels:f,outHeight:g,outWidth:v,padInfo:b,strideHeight:y,strideWidth:w,filterHeight:x,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=ik(n.shape,r.shape,i,s,"NHWC",l),T=P(S),C=S.length,$=X(n.dtype,T);for(let e=0;e<h;++e)for(let t=0;t<g;++t){let a=t*y-b.top;for(let i=0;i<v;++i){let s=i*w-b.left;for(let l=0;l<f;++l){let h=Number.MIN_SAFE_INTEGER;for(let t=0;t<x;++t){let i=a+t*N;if(i>=0&&i<m)for(let a=0;a<k;++a){let m=s+a*I;if(m>=0&&m<c){let s=ep([e,i,m,l],p,en(n.shape)),c=ep([t,a,l],u,en(r.shape)),f=o[s]+d[c];f>h&&(h=f)}}}$[ep([e,t,i,l],C,en(S))]=h}}}return{dataId:t.write(nt($,n.dtype),S,n.dtype),shape:S,dtype:n.dtype}}},{kernelName:e5,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r,dy:i}=e,{strides:s,pad:l,dilations:o}=a,p=er(n.shape,t.data.get(n.dataId).values),d=er(r.shape,t.data.get(r.dataId).values),{batchSize:u,inHeight:h,inWidth:m,inChannels:c,outHeight:f,outWidth:g,padInfo:v,strideHeight:b,strideWidth:y,filterHeight:w,filterWidth:x,dilationHeight:k,dilationWidth:N,outShape:I}=ik(n.shape,r.shape,s,l,"NHWC",o);V(i.rank===I.length,()=>`Error in ${e5}, dy must have the same rank as output ${I.length}, but got ${i.rank}`);let S=er(I,t.data.get(i.dataId).values),T=el(r.shape,r.dtype);for(let e=0;e<u;++e)for(let t=0;t<f;++t){let a=t*b-v.top;for(let n=0;n<g;++n){let r=n*y-v.left;for(let i=0;i<c;++i){let s=Number.MIN_SAFE_INTEGER,l=0,o=0;for(let t=0;t<w;++t){let n=a+t*k;if(n>=0&&n<h)for(let a=0;a<x;++a){let u=r+a*N;if(u>=0&&u<m){let r=p[e][n][u][i]+d[t][a][i];r>s&&(s=r,l=t,o=a)}}}T[l][o][i]+=S[e][t][n][i]}}}return{dataId:t.write(nt(T,n.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:e9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r,dy:i}=e,{strides:s,pad:l,dilations:o}=a,p=er(n.shape,t.data.get(n.dataId).values),d=er(r.shape,t.data.get(r.dataId).values),{batchSize:u,inHeight:h,inWidth:m,inChannels:c,outHeight:f,outWidth:g,padInfo:v,strideHeight:b,strideWidth:y,filterHeight:w,filterWidth:x,dilationHeight:k,dilationWidth:N,outShape:I}=ik(n.shape,r.shape,s,l,"NHWC",o);V(i.rank===I.length,()=>`Error in ${e9}, dy must have the same rank as output ${I.length}, but got ${i.rank}`);let S=er(I,t.data.get(i.dataId).values),T=el(n.shape,n.dtype);for(let e=0;e<u;++e)for(let t=0;t<f;++t){let a=t*b-v.top;for(let n=0;n<g;++n){let r=n*y-v.left;for(let i=0;i<c;++i){let s=Number.MIN_SAFE_INTEGER,l=a<0?0:a,o=r<0?0:r;for(let t=0;t<w;++t){let n=a+t*k;if(n>=0&&n<h)for(let a=0;a<x;++a){let u=r+a*N;if(u>=0&&u<m){let r=p[e][n][u][i]+d[t][a][i];r>s&&(s=r,l=n,o=u)}}}T[e][l][o][i]+=S[e][t][n][i]}}}return{dataId:t.write(nt(T,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},{kernelName:e8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{image:r}=t,{canvas:i,options:s}=n,{contextOptions:l,imageOptions:o}=s||{},p=(null==o?void 0:o.alpha)||1,d=(null==l?void 0:l.contextType)||"2d";if("2d"!==d)throw Error(`Context type ${l.contextType} is not supported by the CPU backend.`);let u=i.getContext(d,(null==l?void 0:l.contextAttributes)||{});if(null==u)throw Error(`Could not get the context with ${d} type.`);let[h,m]=r.shape.slice(0,2),c=2===r.shape.length?1:r.shape[2],f=a.data.get(r.dataId).values,g="float32"===r.dtype?255:1,v=new Uint8ClampedArray(m*h*4);for(let e=0;e<h*m;++e){let t=[0,0,0,255*p];for(let a=0;a<c;a++){let n=f[e*c+a];if("float32"===r.dtype){if(n<0||n>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${n}.`)}else if("int32"===r.dtype&&(n<0||n>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${n}.`);1===c?(t[0]=n*g,t[1]=n*g,t[2]=n*g):t[a]=n*g}let a=4*e;v[a+0]=Math.round(t[0]),v[a+1]=Math.round(t[1]),v[a+2]=Math.round(t[2]),v[a+3]=Math.round(t[3])}i.width=m,i.height=h;let b=new ImageData(v,m,h);return u.putImageData(b,0,0),r}},{kernelName:te,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,{allDims:i,summedDims:s,idDims:l}=oC(r,t.length);oE(i.length,l,t);let{path:o,steps:p}=o_(s,l),d=p.length,u=null,h=i.length,m=[];for(let e=0;e<d;++e){for(let n of p[e]){let e,{permutationIndices:r,expandDims:i}=o$(h,l[n]);oR(r)?e=t[n]:(e=gO({inputs:{x:t[n]},backend:a,attrs:{perm:r}}),m.push(e));let s=e.shape.slice();for(let e=0;e<i.length;++e)s.splice(i[e],0,1);U(e.shape,s)||(e=gE({inputs:{x:e},backend:a,attrs:{shape:s}}),m.push(e)),null===u?u=e:(u=g5({inputs:{a:e,b:u},backend:a}),m.push(u))}e<d-1&&(o[e]>=0&&(u=g8({inputs:{x:u},backend:a,attrs:{axis:o[e]-(i.length-h),keepDims:!1}}),m.push(u)),h--)}for(let e of m)e!==u&&a.disposeIntermediateTensorInfo(e);return u}},{kernelName:"Elu",backendName:"cpu",kernelFunc:gp},{kernelName:tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{dy:n,y:r}=t;gr([n,r],"eluGrad");let i=new Float32Array(P(r.shape)),s=a.data.get(r.dataId).values,l=a.data.get(n.dataId).values;for(let e=0;e<s.length;++e){let t=s[e];t>=0?i[e]=l[e]:i[e]=l[e]*(t+1)}return a.makeTensorInfo(r.shape,"float32",i)}},{kernelName:ta,backendName:"cpu",kernelFunc:ve},{kernelName:"Erf",backendName:"cpu",kernelFunc:vt},{kernelName:"Exp",backendName:"cpu",kernelFunc:vn},{kernelName:tn,backendName:"cpu",kernelFunc:vr},{kernelName:tr,backendName:"cpu",kernelFunc:vs},{kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{input:n}=t,r=P(n.shape),i=n.shape[n.shape.length-1],s=gE({inputs:{x:n},backend:a,attrs:{shape:[r/i,i]}}),l=vu(s,!1,a),o=gE({inputs:{x:l},backend:a,attrs:{shape:n.shape}});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(l),o}},{kernelName:ti,backendName:"cpu",kernelFunc:vh},{kernelName:ts,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,r=X(n.dtype,P(n.shape)),[i,s,l,o]=n.shape,p=a.data.get(n.dataId).values;for(let e=0;e<i;e++){let t=e*l*s*o;for(let e=0;e<s;e++){let a=l*o*e;for(let e=0;e<l;e++){let n=e*o;for(let i=0;i<o;i++){let s=Math.round(l-e-1),d=t+a+n+i,u=p[d];s>=0&&s<l&&(u=p[t+a+s*o+i]),r[d]=u}}}}return{dataId:a.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},{kernelName:tl,backendName:"cpu",kernelFunc:vc},{kernelName:to,backendName:"cpu",kernelFunc:vf},{kernelName:aP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:i,bias:s,preluActivationWeights:l}=t,{strides:o,pad:p,dataFormat:d,dilations:u,dimRoundingMode:h,activation:m,leakyreluAlpha:c}=n,f=g2({inputs:{x:r,filter:i},backend:a,attrs:{strides:o,pad:p,dataFormat:d,dilations:u,dimRoundingMode:h}});if(s){let e=f;if("NCHW"===d&&1===s.shape.length&&1!==s.shape[0]){let e=gE({inputs:{x:s},backend:a,attrs:{shape:[s.shape[0],1,1]}});f=g$({inputs:{a:f,b:e},backend:a}),a.disposeIntermediateTensorInfo(e)}else f=g$({inputs:{a:f,b:s},backend:a});a.disposeIntermediateTensorInfo(e)}if(m){let e=f;if("NCHW"===d&&"prelu"===m&&1===l.shape.length&&1!==l.shape[0]){let e=gE({inputs:{x:l},backend:a,attrs:{shape:[l.shape[0],1,1]}});f=gy(a,f,m,e,c),a.disposeIntermediateTensorInfo(e)}else f=gy(a,f,m,l,c);a.disposeIntermediateTensorInfo(e)}return f}},{kernelName:aU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:i,bias:s,preluActivationWeights:l}=t,{strides:o,pad:p,dataFormat:d,dilations:u,dimRoundingMode:h,activation:m,leakyreluAlpha:c}=n,f=g3({inputs:{x:r,filter:i},backend:a,attrs:{strides:o,pad:p,dataFormat:d,dilations:u,dimRoundingMode:h}});if(s){let e=f;f=g$({inputs:{a:f,b:s},backend:a}),a.disposeIntermediateTensorInfo(e)}if(m){let e=f;f=gy(a,f,m,l,c),a.disposeIntermediateTensorInfo(e)}return f}},{kernelName:tu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,i=P(n.shape),s=r.shape,l=s[s.length-1],[o,p,d,u]=os(n,r);if(0===p)return a.makeTensorInfo(o,n.dtype,[]);let h=vg(a.data.get(r.dataId).values,a.bufferSync(n),n.dtype,p,l,d,u,n.shape,i);return a.makeTensorInfo(o,n.dtype,h.values)}},{kernelName:td,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:i}=t,{axis:s,batchDims:l}=n;gr([r,i],"gatherV2");let o=q(s,r.shape)[0],p=a.data.get(i.dataId).values,d=r.shape[o];for(let e=0;e<p.length;++e){let t=p[e];V(t<=d-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`)}let u=l;null==l&&(u=0);let h=P(i.shape),m=oq(r,i,o,u),c=gE({inputs:{x:r},backend:a,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),f=gE({inputs:{x:i},backend:a,attrs:{shape:[m.batchSize,h/m.batchSize]}}),g=[m.batchSize,m.outerSize,h/m.batchSize,m.sliceSize],v=a.bufferSync(f),b=vv(a.bufferSync(c),v,g);return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.makeTensorInfo(m.outputShape,b.dtype,b.values)}},{kernelName:th,backendName:"cpu",kernelFunc:vy},{kernelName:tm,backendName:"cpu",kernelFunc:vx},{kernelName:tc,backendName:"cpu",kernelFunc:gd},{kernelName:tf,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{input:n}=t,r=P(n.shape),i=n.shape[n.shape.length-1],s=gE({inputs:{x:n},backend:a,attrs:{shape:[r/i,i]}}),l=vu(s,!0,a),o=gE({inputs:{x:l},backend:a,attrs:{shape:n.shape}});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(l),o}},{kernelName:tg,backendName:"cpu",kernelFunc:g1},{kernelName:tv,backendName:"cpu",kernelFunc:vk},{kernelName:tb,backendName:"cpu",kernelFunc:vN},{kernelName:ty,backendName:"cpu",kernelFunc:vI},{kernelName:tw,backendName:"cpu",kernelFunc:gu},{kernelName:tx,backendName:"cpu",kernelFunc:vT},{kernelName:tk,backendName:"cpu",kernelFunc:v$},{kernelName:tN,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:a}=e,{start:n,stop:r,num:i}=a,s=vE(n,r,i);return t.makeTensorInfo([s.length],"float32",s)}},{kernelName:"Log",backendName:"cpu",kernelFunc:vR},{kernelName:tI,backendName:"cpu",kernelFunc:vA},{kernelName:tS,backendName:"cpu",kernelFunc:vD},{kernelName:tT,backendName:"cpu",kernelFunc:vF},{kernelName:tC,backendName:"cpu",kernelFunc:vO},{kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:l,beta:o}=n;gr(r,"LRN");let p=r.shape[3],d=p-1,u=a.data.get(r.dataId).values,h=P(r.shape),m=new Float32Array(h);for(let e=0;e<h;e++){let t=function(e){let t=e%p,a=e-t+Math.max(0,t-i),n=e-t+Math.min(t+i,d),r=0;for(;a<=n;a++){let e=u[a];r+=e*e}return r}(e),a=u[e]*Math.pow(s+l*t,-o);m[e]=a}return a.makeTensorInfo(r.shape,r.dtype,m)}},{kernelName:t$,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,y:i,dy:s}=t,{depthRadius:l,bias:o,alpha:p,beta:d}=n;gr(s,"LRNGrad");let u=P(s.shape),h=s.shape[3],m=a.data.get(s.dataId).values,c=a.data.get(r.dataId).values,f=a.data.get(i.dataId).values,g=new Float32Array(u);for(let e=0;e<u;e++){let t=e%h,a=e-t+Math.max(0,t-l),n=e-t+Math.min(h,t+l+1),r=0;for(let e=a;e<n;e++)r+=Math.pow(c[e],2);r=p*r+o;for(let t=a;t<n;t++){let a=-2*p*d*c[t]*f[e]/r;e===t&&(a+=Math.pow(r,-d)),a*=m[e],g[t]+=a}}return a.makeTensorInfo(s.shape,r.dtype,g)}},{kernelName:"Max",backendName:"cpu",kernelFunc:vM},{kernelName:tE,backendName:"cpu",kernelFunc:vB},{kernelName:t_,backendName:"cpu",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a;gr(i,"maxPool");let{filterSize:s,strides:l,pad:o,dimRoundingMode:p}=r;V(iD(l,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`);let d=iN(i.shape,s,l,1,o,p);if(1===d.filterWidth&&1===d.filterHeight&&U(d.inShape,d.outShape))t=gd({inputs:{x:i},backend:n});else{let e=n.data.get(i.dataId).values,a=en(i.shape),r=gP(e,i.shape,i.dtype,a,d,"max");t=n.makeTensorInfo(d.outShape,i.dtype,r.values)}return t}},{kernelName:tA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:i,strides:s,pad:l,dimRoundingMode:o,dataFormat:p}=n;gr(r,"maxPool3d");let d=iI(r.shape,i,s,1,l,o,p),u=gW(a.data.get(r.dataId).values,r.shape,r.dtype,en(r.shape),d,"max");return a.makeTensorInfo(u.shape,"float32",u.values)}},{kernelName:tD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i}=t,{filterSize:s,strides:l,pad:o,dimRoundingMode:p}=n;gr([r,i],"maxPool3DGrad");let d=iI(i.shape,s,l,1,o,p),u=function(e,t){let a=rv(t.outShape,"int32"),n=t.strideDepth,r=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,l=t.dilationHeight,o=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=t.padInfo.front,m=t.padInfo.top,c=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let v=0;v<t.outDepth;++v){let b=v*n-h,y=b;for(;y<0;)y+=s;let w=Math.min(t.inDepth,p+b);for(let n=0;n<t.outHeight;++n){let p=n*r-m,h=p;for(;h<0;)h+=l;let x=Math.min(t.inHeight,d+p);for(let r=0;r<t.outWidth;++r){let m=r*i-c,k=m;for(;k<0;)k+=o;let N=Math.min(t.inWidth,u+m),I=Number.NEGATIVE_INFINITY,S=-1;for(let t=y;t<w;t+=s){let a=t-b;for(let n=h;n<x;n+=l){let r=n-p;for(let i=k;i<N;i+=o){let s=i-m,l=e.get(f,t,n,i,g);l>=I&&(I=l,S=a*d*u+r*d+s)}}}a.set(S,f,v,n,r,g)}}}return a}(a.bufferSync(i),d),h=d.strideDepth,m=d.strideHeight,c=d.strideWidth,f=d.dilationDepth,g=d.dilationHeight,v=d.dilationWidth,b=d.effectiveFilterDepth,y=d.effectiveFilterHeight,w=d.effectiveFilterWidth,x=b-1-d.padInfo.front,k=w-1-d.padInfo.left,N=y-1-d.padInfo.top,I=rv(i.shape,"float32"),S=a.bufferSync(r);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let a=0;a<d.inDepth;++a)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let i=a-x,s=n-N,l=r-k,o=0;for(let a=0;a<b;a+=f){let n=(i+a)/h;if(!(n<0)&&!(n>=d.outDepth)&&Math.floor(n)===n)for(let r=0;r<y;r+=g){let i=(s+r)/m;if(!(i<0)&&!(i>=d.outHeight)&&Math.floor(i)===i)for(let s=0;s<w;s+=v){let p=(l+s)/c;if(p<0||p>=d.outWidth||Math.floor(p)!==p)continue;let h=+(b*y*w-1-u.get(e,n,i,p,t)===a*y*w+r*w+s);0!==h&&(o+=S.get(e,n,i,p,t)*h)}}}I.set(o,e,a,n,r,t)}return a.makeTensorInfo(I.shape,I.dtype,I.values)}},{kernelName:tR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i,output:s}=t;gr([i,s],"maxPoolGrad");let{filterSize:l,strides:o,pad:p,dimRoundingMode:d}=n,u=iN(i.shape,l,o,1,p,d),h=a.data.get(i.dataId).values,m=rv(u.outShape,i.dtype,gU(h,i.shape,i.dtype,u).values),c=u.strideHeight,f=u.strideWidth,g=u.dilationHeight,v=u.dilationWidth,b=u.effectiveFilterHeight,y=u.effectiveFilterWidth,w=y-1-u.padInfo.left,x=b-1-u.padInfo.top,k=rv(i.shape,"float32"),N=a.data.get(r.dataId).values,I=rv(r.shape,"float32",N);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let a=0;a<u.inHeight;++a)for(let n=0;n<u.inWidth;++n){let r=a-x,i=n-w,s=0;for(let a=0;a<b;a+=g){let n=(r+a)/c;if(!(n<0)&&!(n>=u.outHeight)&&Math.floor(n)===n)for(let r=0;r<y;r+=v){let l=(i+r)/f;if(l<0||l>=u.outWidth||Math.floor(l)!==l)continue;let o=+(b*y-1-m.get(e,n,l,t)===a*y+r);0!==o&&(s+=I.get(e,n,l,t)*o)}}k.set(s,e,a,n,t)}return a.makeTensorInfo(k.shape,k.dtype,k.values)}},{kernelName:tF,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:l}=t;gr(n,"MaxPoolWithArgmax");let o=a.data.get(n.dataId).values,p=iN(n.shape,r,i,[1,1],s),[d,u]=function(e,t,a,n,r){let i=en(t),s=gP(e,t,a,i,r,"max"),l=gU(e,t,a,r,!0,n);return[s.values,l.values]}(o,n.shape,n.dtype,l,p),h=a.write(d,p.outShape,n.dtype),m=a.write(u,p.outShape,n.dtype);return[{dataId:h,shape:p.outShape,dtype:n.dtype},{dataId:m,shape:p.outShape,dtype:"int32"}]}},{kernelName:tO,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,keepDims:s}=n,l=q(i,r.shape),o=P(sf(r.shape,l)[1]),p=[],d=a.makeTensorInfo([],"float32",new Float32Array([o]));p.push(d);let u=gI({inputs:{x:r},backend:a,attrs:{dtype:"float32"}});p.push(u);let h=vl({inputs:{a:u,b:d},backend:a});p.push(h);let m=g8({inputs:{x:h},backend:a,attrs:{axis:i,keepDims:s}});return p.forEach(e=>a.disposeIntermediateTensorInfo(e)),m}},{kernelName:"Min",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,keepDims:s}=n;gr(r,"min");let l=q(i,r.shape),o=l,p=sb(o,r.shape.length),d=r;null!=p&&(d=gO({inputs:{x:r},backend:a,attrs:{perm:p}}),o=sw(o.length,r.shape.length)),sv("min",o,d.shape.length);let[u,h]=sf(d.shape,o),m=P(h),c=es(P(u),d.dtype),f=a.data.get(d.dataId).values;for(let e=0;e<c.length;++e){let t=e*m,a=f[t];for(let e=0;e<m;++e){let n=f[t+e];(Number.isNaN(n)||n<a)&&(a=n)}c[e]=a}null!=p&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(u,d.dtype,c);if(s){let e=gE({inputs:{x:g},backend:a,attrs:{shape:sg(u,l)}});return a.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:tL,backendName:"cpu",kernelFunc:vP},{kernelName:tM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:i,mode:s}=n;gr(r,"mirrorPad");let l=i.map((e,t)=>e[0]+r.shape[t]+e[1]),o=i.map(e=>e[0]),p=i.map((e,t)=>e[0]+r.shape[t]),d=+("reflect"!==s),u=a.data.get(r.dataId).values,h=r.shape.length,m=en(r.shape),c=P(l),f=l.length,g=en(l),v=X(r.dtype,c);for(let e=0;e<c;e++){let t=ed(e,f,g);for(let e=0;e<f;e++)t[e]<o[e]?t[e]=2*o[e]-t[e]-d:t[e]>=p[e]&&(t[e]=(p[e]-1)*2-t[e]+d);let a=ep(t=t.map((e,t)=>e-o[t]),h,m);v[e]=u[a]}return{dataId:a.write(v,l,r.dtype),shape:l,dtype:r.dtype}}},{kernelName:"Mod",backendName:"cpu",kernelFunc:vU},{kernelName:tV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:l}=n;gr(r,"multinomial");let o=l?r:vW({inputs:{logits:r},backend:a,attrs:{dim:-1}}),p=o.shape[0],d=o.shape[1],u=a.data.get(o.dataId).values,h=[p,i],m=es(P(h),"int32");for(let e=0;e<p;++e){let t=e*d,a=new Float32Array(d-1);a[0]=u[t];for(let e=1;e<a.length;++e)a[e]=a[e-1]+u[t+e];let n=sV.alea(s.toString()),r=e*i;for(let e=0;e<i;++e){let t=n();m[r+e]=a.length;for(let n=0;n<a.length;n++)if(t<a[n]){m[r+e]=n;break}}}return l||a.disposeIntermediateTensorInfo(o),a.makeTensorInfo(h,"int32",m)}},{kernelName:tB,backendName:"cpu",kernelFunc:g5},{kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{x:n}=t;gr(n,"neg");let[r,i]=vG(a.data.get(n.dataId).values,n.shape,n.dtype);return a.makeTensorInfo(i,n.dtype,r)}},{kernelName:tP,backendName:"cpu",kernelFunc:function(e){var t,a;let{inputs:n,backend:r,attrs:i}=e,{boxes:s,scores:l}=n,{maxOutputSize:o,iouThreshold:p,scoreThreshold:d}=i;gr(s,"NonMaxSuppression");let{selectedIndices:u}=(t=r.data.get(s.dataId).values,a=r.data.get(l.dataId).values,lA(t,a,o,p,d,0));return r.makeTensorInfo([u.length],"int32",new Int32Array(u))}},{kernelName:tU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:l,scoreThreshold:o,padToMaxOutputSize:p}=n;gr(r,"NonMaxSuppressionPadded");let{selectedIndices:d,validOutputs:u}=l_(a.data.get(r.dataId).values,a.data.get(i.dataId).values,s,l,o,p);return[a.makeTensorInfo([d.length],"int32",new Int32Array(d)),a.makeTensorInfo([],"int32",new Int32Array([u]))]}},{kernelName:tW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:l,scoreThreshold:o,softNmsSigma:p}=n;gr(r,"NonMaxSuppressionWithScore");let d=a.data.get(r.dataId).values,{selectedIndices:u,selectedScores:h}=lA(d,a.data.get(i.dataId).values,s,l,o,p,!0);return[a.makeTensorInfo([u.length],"int32",new Int32Array(u)),a.makeTensorInfo([h.length],"float32",new Float32Array(h))]}},{kernelName:tz,backendName:"cpu",kernelFunc:vj},{kernelName:tH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:i,depth:s,onValue:l,offValue:o}=n;gr(r,"oneHot");let p=P(r.shape),d=new Float32Array(p*s);d.fill(o);let u=a.data.get(r.dataId).values;for(let e=0;e<p;++e)u[e]>=0&&u[e]<s&&(d[e*s+u[e]]=l);return a.makeTensorInfo([...r.shape,s],i,d)}},{kernelName:tG,backendName:"cpu",kernelFunc:function e(t){let{inputs:a,backend:n}=t,{x:r}=a;if("string"===r.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==r.dtype)return vh({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}});{let t=gk({inputs:{input:r},backend:n}),a=e({inputs:{x:t},backend:n}),i=g1({inputs:{input:r},backend:n}),s=vq({inputs:{x:i},backend:n}),l=gw({inputs:{real:a,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),l}}},{kernelName:tj,backendName:"cpu",kernelFunc:vK},vX,{kernelName:"Pow",backendName:"cpu",kernelFunc:vY},{kernelName:tK,backendName:"cpu",kernelFunc:gc},{kernelName:tX,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,keepDims:s}=n;gr(r,"prod");let l=r.shape.length,o=q(i,r.shape),p=sb(o,l),d=o,u=r,h=[];null!=p&&(h.push(u=gO({inputs:{x:r},backend:a,attrs:{perm:p}})),d=sw(d.length,l));let m=a.data.get(u.dataId).values,{outVals:c,outShape:f,outDtype:g}=vJ(u.shape,u.dtype,m,d),v=f;return s&&(v=sg(f,o)),h.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.makeTensorInfo(v,g,c)}},{kernelName:tY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:l}=n,o=r.map(e=>a.data.get(e.dataId).values),p=r.map(e=>e.shape),d=a.data.get(i.dataId).values,u=a.data.get(s.dataId).values,[h,m,c]=vQ(o,p,d,i.shape,i.dtype,u,s.shape,l),f=h.map(e=>a.makeTensorInfo([e.length],"int32",e)),g=a.makeTensorInfo(c,i.dtype,m);return f.concat([g])}},{kernelName:tJ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{starts:n,limits:r,deltas:i}=t,s=a.data.get(n.dataId).values,l=a.data.get(r.dataId).values,o=a.data.get(i.dataId).values,[p,d]=v1(s,n.shape,n.dtype,l,r.shape,o,i.shape);return[a.makeTensorInfo([p.length],"int32",p),a.makeTensorInfo([d.length],n.dtype,d)]}},{kernelName:tZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:l}=t,{rowPartitionTypes:o}=n,p=a.data.get(r.dataId).values,d=a.data.get(i.dataId).values,u=a.data.get(s.dataId).values,h=l.map(e=>a.data.get(e.dataId).values),m=l.map(e=>e.shape),[c,f]=v3(p,r.shape,d,i.shape,i.dtype,u,s.shape,h,m,o);return a.makeTensorInfo(c,i.dtype,f)}},{kernelName:tQ,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:a}=e,{start:n,stop:r,dtype:i,step:s}=a,l=v9(n,r,s,i);return t.makeTensorInfo([l.length],i,l)}},{kernelName:t1,backendName:"cpu",kernelFunc:gk},vo,{kernelName:t0,backendName:"cpu",kernelFunc:v5},{kernelName:t2,backendName:"cpu",kernelFunc:gf},{kernelName:t8,backendName:"cpu",kernelFunc:gg},{kernelName:t4,backendName:"cpu",kernelFunc:gE},{kernelName:t9,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:l}=n;gr(r,"resizeBilinear");let o=en(r.shape),[p,d]=l,[u,h,m,c]=r.shape,f=a.data.get(r.dataId).values,g=new Float32Array(P([u,p,d,c])),v=[i&&p>1?h-1:h,i&&d>1?m-1:m],b=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=0,w=v[0]/b[0],x=v[1]/b[1];for(let e=0;e<u;e++)for(let t=0;t<p;t++){let a,n=Math.max(0,Math.floor(a=s?w*(t+.5)-.5:w*t)),r=a-n,i=Math.min(h-1,Math.ceil(a)),l=e*o[0]+n*o[1],p=e*o[0]+i*o[1];for(let e=0;e<d;e++){let t,a=Math.max(0,Math.floor(t=s?x*(e+.5)-.5:x*e)),n=t-a,i=Math.min(m-1,Math.ceil(t)),d=l+a*o[2],u=p+a*o[2],h=l+i*o[2],v=p+i*o[2];for(let e=0;e<c;e++){let t=f[d+e],a=f[u+e],i=f[h+e],s=f[v+e],l=t+(i-t)*n,o=l+(a+(s-a)*n-l)*r;g[y++]=o}}}return a.makeTensorInfo([u,p,d,c],"float32",g)}},{kernelName:t5,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:i}=t,{alignCorners:s}=n;gr([i,r],"resizeBilinearGrad");let l=en(r.shape),[o,p,d,u]=r.shape,[,h,m]=i.shape,c=new Float32Array(o*p*d*u),f=[s&&h>1?p-1:p,s&&m>1?d-1:d],g=[s&&h>1?h-1:h,s&&m>1?m-1:m],v=f[0]/g[0],b=f[1]/g[1],y=a.data.get(i.dataId).values,w=0;for(let e=0;e<o;e++){let t=e*l[0];for(let e=0;e<h;e++){let a=e*v,n=Math.floor(a),r=Math.min(Math.ceil(a),p-1),i=t+n*l[1],s=t+r*l[1],o=a-n,h=1-o;for(let e=0;e<m;e++){let t=e*b,a=Math.floor(t),n=Math.min(Math.ceil(t),d-1),r=t-a,p=1-r,m=i+a*l[2],f=i+n*l[2],g=s+a*l[2],v=s+n*l[2],x=h*p,k=h*r,N=o*p,I=o*r;for(let e=0;e<u;e++){let t=y[w++];c[m+e]+=t*x,c[f+e]+=t*k,c[g+e]+=t*N,c[v+e]+=t*I}}}}return a.makeTensorInfo([o,d,p,u],"float32",c)}},{kernelName:t6,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:l}=n;gr(r,"resizeNearestNeighbor");let o=en(r.shape),[p,d]=l,[u,h,m,c]=r.shape,f=a.data.get(r.dataId).values,g=new Float32Array(u*p*d*c),v=[i&&p>1?h-1:h,i&&d>1?m-1:m],b=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=v[0]/b[0],w=v[1]/b[1],x=0;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<p;e++){let a=s?y*(e+.5):y*e,n=Math.min(h-1,i?Math.round(a):Math.floor(a));s&&(n=Math.max(0,n));let r=t+n*o[1];for(let e=0;e<d;e++){let t=s?w*(e+.5):w*e,a=Math.min(m-1,i?Math.round(t):Math.floor(t));s&&(a=Math.max(0,a));let n=r+a*o[2];for(let e=0;e<c;e++){let t=f[n+e];g[x++]=t}}}}return a.makeTensorInfo([u,p,d,c],r.dtype,g)}},{kernelName:t3,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:i}=t,{alignCorners:s}=n;gr([i,r],"resizeNearestNeighborGrad");let l=en(r.shape),o=en(i.shape),[p,d,u,h]=r.shape,[,m,c]=i.shape,f=new Float32Array(p*d*u*h),g=a.data.get(i.dataId).values,v=[s&&m>1?d-1:d,s&&c>1?u-1:u],b=[s&&m>1?m-1:m,s&&c>1?c-1:c],y=v[0]/b[0],w=v[1]/b[1],x=1/y,k=1/w,N=2*Math.ceil(x)+2,I=2*Math.ceil(k)+2;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<d;e++){let a=t+e*l[1],n=Math.floor(Math.floor(e*x)-N/2);for(let r=0;r<u;r++){let i=a+r*l[2],p=Math.floor(Math.floor(r*k)-I/2);for(let a=0;a<h;a++){let l=0;for(let i=0;i<N;i++){let h=i+n;if(h<0||h>=m)continue;let f=t+h*o[1],v=h*y;if(e===Math.min(d-1,s?Math.round(v):Math.floor(v)))for(let e=0;e<I;e++){let t=e+p;if(t<0||t>=c)continue;let n=f+t*o[2],i=t*w;r===Math.min(u-1,s?Math.round(i):Math.floor(i))&&(l+=g[n+a])}}f[i+a]=l}}}}return a.makeTensorInfo(r.shape,r.dtype,f)}},{kernelName:t7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:i}=n;gr(r,"reverse");let s=r.shape.length,l=q(i,r.shape);if(0===s)return gd({inputs:{x:r},backend:a});let o=new nh(r.shape,r.dtype),p=a.bufferSync(r);for(let e=0;e<o.size;e++){let t=o.indexToLoc(e),a=t.slice();l.forEach(e=>a[e]=r.shape[e]-1-a[e]),o.set(p.get(...a),...t)}return a.makeTensorInfo(o.shape,o.dtype,o.values)}},{kernelName:aB,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:i,center:s}=t,l=X(n.dtype,P(n.shape)),[o,p,d,u]=n.shape,[h,m]=oe(s,p,d),c=Math.sin(r),f=Math.cos(r),g=a.data.get(n.dataId).values;for(let e=0;e<o;e++){let t=e*d*p*u;for(let e=0;e<p;e++){let a=d*u*e;for(let n=0;n<d;n++){let r=n*u;for(let s=0;s<u;s++){let v=[o,e,n,s],b=v[2],y=v[1],w=(b-h)*f-(y-m)*c,x=(b-h)*c+(y-m)*f;w=Math.round(w+h),x=Math.round(x+m);let k=i;"number"!=typeof i&&(k=3===s?255:i[s]),w>=0&&w<d&&x>=0&&x<p&&(k=g[t+d*u*x+w*u+s]),l[t+a+r+s]=k}}}}return{dataId:a.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},{kernelName:ae,backendName:"cpu",kernelFunc:v8},{kernelName:at,backendName:"cpu",kernelFunc:be},{kernelName:aa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r,updates:i}=t,{shape:s}=n,{sliceRank:l,numUpdates:o,sliceSize:p,strides:d,outputSize:u}=op(i,r,s),h=bt(a.bufferSync(r),a.bufferSync(i),s,u,p,o,l,d,0,!0);return a.makeTensorInfo(s,h.dtype,h.values)}},{kernelName:ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:i}=t,{side:s}=n,l=function(e,t,a,n,r,i){let s=X("int32",a*r);for(let l=0;l<a;++l){let a=e.slice(l*n,(l+1)*n),o=l*r;for(let e=0;e<r;++e)s[o+e]="left"===i?function(e,t){let a=0,n=e.length,r=0;for(;a<n;)e[r=Math.floor((a+n)/2)]<t?a=r+1:n=r;return n}(a,t[e+o]):function(e,t){let a=0,n=e.length,r=0;for(;a<n;)e[r=Math.floor((a+n)/2)]<=t?a=r+1:n=r;return n}(a,t[e+o])}return s}(a.data.get(r.dataId).values,a.data.get(i.dataId).values,r.shape[0],r.shape[1],i.shape[1],s);return a.makeTensorInfo(i.shape,"int32",l)}},{kernelName:ai,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:i}=t;gr([n,r,i],"select");let s=n.shape.length,l=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,p=a.data.get(i.dataId).values,d=ny(r.dtype,i.dtype),u=es(P(r.shape),d),h=0,m=0===s||s>1||1===r.shape.length?1:P(r.shape.slice(1));for(let e=0;e<l.length;e++)for(let t=0;t<m;t++)1===l[e]?u[h++]=o[e]:u[h++]=p[e];return a.makeTensorInfo(r.shape,d,u)}},{kernelName:as,backendName:"cpu",kernelFunc:ba},{kernelName:ad,backendName:"cpu",kernelFunc:gb},{kernelName:ap,backendName:"cpu",kernelFunc:bn},{kernelName:"Sin",backendName:"cpu",kernelFunc:br},{kernelName:ao,backendName:"cpu",kernelFunc:bi},{kernelName:al,backendName:"cpu",kernelFunc:gH},{kernelName:af,backendName:"cpu",kernelFunc:vW},{kernelName:au,backendName:"cpu",kernelFunc:bl},{kernelName:am,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:i,paddings:s}=n;gr([r],"spaceToBatchND");let l=P(i),o=[[0,0]];o.push(...s);for(let e=1+i.length;e<r.shape.length;++e)o.push([0,0]);let p=vX.kernelFunc({inputs:{x:r},backend:a,attrs:{paddings:o,constantValue:0}}),d=ot(p.shape,i,l,!1),u=oa(d.length,i.length,!1),h=on(p.shape,i,l,!1),m=gE({inputs:{x:p},backend:a,attrs:{shape:d}}),c=gO({inputs:{x:m},backend:a,attrs:{perm:u}}),f=gE({inputs:{x:c},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(c),f}},{kernelName:ag,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{indices:n,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(2!==n.shape.length)throw Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(1!==r.shape.length)throw Error(`Values must be a vector, saw:
        ${r.shape}`);if(0!==s.shape.length)throw Error(`Default value must be a scalar, saw:
        ${s.shape}`);let l=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,p=a.data.get(i.dataId).values,d=a.data.get(s.dataId).values[0],[u,h,m,c,f]=bo(l,n.shape,n.dtype,o,r.dtype,p,d);return[a.makeTensorInfo(h,n.dtype,u),a.makeTensorInfo([h[0]],r.dtype,m),a.makeTensorInfo([c.length],"bool",new Uint8Array(c.map(e=>Number(e)))),a.makeTensorInfo([f.length],n.dtype,new Int32Array(f))]}},{kernelName:av,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{inputIndices:n,inputShape:r,newShape:i}=t;if(2!==n.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(1!==r.shape.length)throw Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(1!==i.shape.length)throw Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(a.data.get(r.dataId).values),l=a.data.get(n.dataId).values,o=Array.from(a.data.get(i.dataId).values),[p,d,u]=bp(l,n.shape,n.dtype,s,o);return[a.makeTensorInfo(d,n.dtype,p),a.makeTensorInfo([u.length],i.dtype,new Int32Array(u))]}},{kernelName:ab,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:i}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
          ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw Error("segmentIds and indices should have same size.");let s=a.data.get(n.dataId).values,l=a.data.get(r.dataId).values,o=a.data.get(i.dataId).values,[p,d]=bd(s,n.shape,n.dtype,l,o,!0);return a.makeTensorInfo(d,n.dtype,p)}},{kernelName:ay,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:i}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
         ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw Error("segmentIds and indices should have same size.");let s=a.data.get(n.dataId).values,l=a.data.get(r.dataId).values,o=a.data.get(i.dataId).values,[p,d]=bd(s,n.shape,n.dtype,l,o);return a.makeTensorInfo(d,n.dtype,p)}},{kernelName:aw,backendName:"cpu",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{sparseIndices:i,sparseValues:s,defaultValue:l}=a,{outputShape:o}=r,{sliceRank:p,numUpdates:d,sliceSize:u,strides:h,outputSize:m}=op(s,i,o),c=n.bufferSync(i);switch(s.dtype){case"bool":t=bt(c,n.bufferSync(s),o,m,u,d,p,h,!!n.data.get(l.dataId).values[0],!1);break;case"float32":case"int32":t=bt(c,n.bufferSync(s),o,m,u,d,p,h,n.data.get(l.dataId).values[0],!1);break;case"string":t=bt(c,n.bufferSync(s),o,m,u,d,p,h,nr(n.data.get(l.dataId).values[0]),!1);break;default:throw Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,t.dtype,t.values)}},{kernelName:ac,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=n,l=q(s,r.shape)[0],o=oA(r,i,l),p=Array(r.shape.length).fill(0),d=r.shape.slice();return o.map(e=>{let t=[...d];t[l]=e;let n=gH({inputs:{x:r},backend:a,attrs:{begin:p,size:t}});return p[l]+=e,n})}},{kernelName:ah,backendName:"cpu",kernelFunc:bh},{kernelName:ak,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e;gr(a,"square");let n=t.data.get(a.dataId).values,r=new Float32Array(n.length);for(let e=0;e<n.length;++e){let t=n[e];r[e]=t*t}return{dataId:t.write(r,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:ax,backendName:"cpu",kernelFunc:bm},{kernelName:aN,backendName:"cpu",kernelFunc:bf},{kernelName:aM,backendName:"cpu",kernelFunc:bg},{kernelName:aI,backendName:"cpu",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{begin:s,end:l,strides:o,beginMask:p,endMask:d,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:m}=r;gr(i,"stridedSlice");let{finalShapeSparse:c,finalShape:f,isIdentity:g,sliceDim0:v,isSimpleSlice:b,begin:y,end:w,strides:x}=iv(i.shape,s,l,o,p,d,u,h,m);if(g)t=gE({inputs:{x:i},backend:n,attrs:{shape:f}});else if(v||b){V(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=ia(y,w,x),a=gH({inputs:{x:i},backend:n,attrs:{begin:y,size:e}});t=gE({inputs:{x:a},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(a)}else{let e=bv(c,n.bufferSync(i),x,y);t=n.makeTensorInfo(f,e.dtype,e.values)}return t}},{kernelName:aS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:l,padWidth:o,preserveShortSequences:p}=n,{data:d,dataSplits:u}=t,[h,m]=by(a.data.get(d.dataId).values,a.data.get(u.dataId).values,r,i,s,l,o,p);return[a.makeTensorInfo([h.length],"string",h),a.makeTensorInfo(u.shape,"int32",m)]}},{kernelName:aT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{skipEmpty:r}=n,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(1!==i.shape.length)throw Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let[l,o,p]=bw(a.data.get(i.dataId).values,a.data.get(s.dataId).values[0],r),d=o.length;return[a.makeTensorInfo([d,2],"int32",l),a.makeTensorInfo([d],"string",o),a.makeTensorInfo([2],"int32",new Int32Array(p))]}},{kernelName:aC,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{numBuckets:r}=n,{input:i}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(r<=0)throw Error("Number of buckets must be at least 1");let s=bx(a.data.get(i.dataId).values,r);return a.makeTensorInfo(i.shape,"int32",s)}},{kernelName:"Sub",backendName:"cpu",kernelFunc:vd},{kernelName:"Sum",backendName:"cpu",kernelFunc:g8},{kernelName:"Tan",backendName:"cpu",kernelFunc:bk},{kernelName:a$,backendName:"cpu",kernelFunc:bN},{kernelName:an,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a}=e,{tensor:n,indices:r,updates:i}=t,{sliceRank:s,numUpdates:l,sliceSize:o,strides:p,outputSize:d}=op(i,r,n.shape),u=a.bufferSync(r),h=a.bufferSync(i),m=a.bufferSync(n),c=bt(u,h,n.shape,d,o,l,s,p,m,!1);return a.makeTensorInfo(n.shape,c.dtype,c.values)}},{kernelName:aE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:i}=n;gr(r,"tile");let s=bI(a.bufferSync(r),i);return a.makeTensorInfo(s.shape,s.dtype,s.values)}},{kernelName:a_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:i,sorted:s}=n;gr(r,"topk");let[l,o]=bT(a.data.get(r.dataId).values,r.shape,r.dtype,i,s);return[a.makeTensorInfo(l.shape,l.dtype,l.values),a.makeTensorInfo(o.shape,o.dtype,o.values)]}},{kernelName:aR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:a,backend:n}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:l,fillValue:o,outputShape:p}=a,[d,u,h,m]=r.shape,[c,f]=null!=p?p:[u,h],g=[d,c,f,m],v=en(r.shape),b=v[0],y=v[1],w=v[2],x=en(g),k=x[0],N=x[1],I=x[2],S=X(r.dtype,P(g));S.fill(o);let T=n.data.get(r.dataId).values,C=n.data.get(i.dataId).values;for(let e=0;e<d;++e){let t=1===i.shape[0]?C:C.subarray(8*e,8*e+8);for(let a=0;a<c;++a)for(let n=0;n<f;++n)for(let r=0;r<m;++r){let i,p=t[6]*n+t[7]*a+1;if(0===p)continue;let d=(t[0]*n+t[1]*a+t[2])/p,m=(t[3]*n+t[4]*a+t[5])/p,c=bC(d,h,l),f=bC(m,u,l);switch(s){case"nearest":i=b$(T,u,h,b,y,w,e,Math.round(f),Math.round(c),r,o);break;case"bilinear":i=function(e,t,a,n,r,i,s,l,o,p,d){let u=Math.floor(l),h=Math.floor(o),m=u+1,c=h+1,f=(c-o)*b$(e,t,a,n,r,i,s,u,h,p,d)+(o-h)*b$(e,t,a,n,r,i,s,u,c,p,d),g=(c-o)*b$(e,t,a,n,r,i,s,m,h,p,d)+(o-h)*b$(e,t,a,n,r,i,s,m,c,p,d);return(m-l)*f+(l-u)*g}(T,u,h,b,y,w,e,f,c,r,o);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}S[e*k+a*N+n*I+r]=i}return n.makeTensorInfo(g,r.dtype,S)}return{dataId:n.write(S,g,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:aA,backendName:"cpu",kernelFunc:gO},{kernelName:aD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:a,backend:n}=e,{axis:r}=a,{x:i}=t;gr(i,"unique");let{outputValues:s,outputShape:l,indices:o}=bE(n.data.get(i.dataId).values,r,i.shape,i.dtype);return[n.makeTensorInfo(l,i.dtype,s),n.makeTensorInfo([o.length],"int32",o)]}},{kernelName:aF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:i}=n;i<0&&(i+=r.shape.length);let s=r.shape.length,l=r.shape[i],o=Array(s-1),p=0;for(let e=0;e<s;e++)e!==i&&(o[p++]=r.shape[e]);let d=Array(s).fill(0),u=r.shape.slice();u[i]=1;let h=Array(l);for(let e=0;e<h.length;e++){d[i]=e;let t=gH({inputs:{x:r},backend:a,attrs:{begin:d,size:u}});h[e]=gE({inputs:{x:t},backend:a,attrs:{shape:o}}),a.disposeIntermediateTensorInfo(t)}return h}},{kernelName:aO,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,segmentIds:i}=t,{numSegments:s}=n;gr(r,"unsortedSegmentSum");let l=r.shape.length,o=i.shape.length,p=[],d=[],u=l-o,h=i;for(let e=0;e<u;++e){let t=vr({inputs:{input:h},backend:a,attrs:{dim:e+1}});h=t,d.push(t)}for(let e=0;e<s;++e){let t=ne(e,"int32"),n=a.makeTensorInfo([],"int32",t),i=ve({inputs:{a:n,b:h},backend:a}),s=gI({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),l=g5({inputs:{a:s,b:r},backend:a}),o=g8({inputs:{x:l},backend:a,attrs:{axis:0,keepDims:!1}});p.push(o),d.push(n),d.push(i),d.push(s),d.push(l),d.push(o)}let m=vK({inputs:p,backend:a,attrs:{axis:0}});return d.forEach(e=>a.disposeIntermediateTensorInfo(e)),m}},{kernelName:aL,backendName:"cpu",kernelFunc:vq}])aX(e);let b_={},bR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function bA(e,t){if(!(e in b_)||null!=t){let a=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let a=null==t?function(e){if(!ef.getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return(a.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete b_[e]},!1),ef.getBool("SOFTWARE_WEBGL_ENABLED")&&(bR.failIfMajorPerformanceCaveat=!1),1===e)?a.getContext("webgl",bR)||a.getContext("experimental-webgl",bR):a.getContext("webgl2",bR)}(e,t);if(null===a)return console.log("Could not get context for WebGL version",e),null;b_[e]=a}let a=b_[e];return null==a||a.isContextLost()?(delete b_[e],bA(e)):(a.disable(a.DEPTH_TEST),a.disable(a.STENCIL_TEST),a.disable(a.BLEND),a.disable(a.DITHER),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SAMPLE_COVERAGE),a.enable(a.SCISSOR_TEST),a.enable(a.CULL_FACE),a.cullFace(a.BACK),b_[e])}function bD(e){return W(Math.ceil(P(e)/4))}function bF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function bO(e,t){let a,n,r,i,s,l,o,p,d,u;return 2===ef.getNumber("WEBGL_VERSION")?(a=e.R32F,n=e.R16F,r=e.RGBA16F,i=e.RGBA32F,s=e.RED,o=4,p=1,d=e.HALF_FLOAT,u=e.FLOAT,l=e.RGBA8):(a=e.RGBA,n=e.RGBA,r=e.RGBA,i=e.RGBA,s=e.RGBA,o=4,p=4,d=null!=t?t.HALF_FLOAT_OES:null,u=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:l,downloadUnpackNumChannels:o,defaultNumChannels:p,textureTypeHalfFloat:d,textureTypeFloat:u}}function bL(e,t){let a=t();return ef.getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),a}function bM(e,t){return bH(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(k||(k={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(N||(N={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(I||(I={}));let bV=/ERROR: [0-9]+:([0-9]+):/g;function bB(e,t){let a=bV.exec(t);if(null==a){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+a[1],r=e.split("\n"),i=r.length.toString().length+2,s=r.map((e,t)=>G((t+1).toString(),i)+e),l=0;for(let e=0;e<s.length;e++)l=Math.max(s[e].length,l);let o=s.slice(0,n-1),p=s.slice(n-1,n),d=s.slice(n);console.log(o.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${G(p[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function bz(e,t){if(bL(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function bP(e,t,a,n,r,i,s){let l=e.getAttribLocation(t,a);return -1!==l&&(bL(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),bL(e,()=>e.vertexAttribPointer(l,r,e.FLOAT,!1,i,s)),bL(e,()=>e.enableVertexAttribArray(l)),!0)}function bU(e,t,a){bL(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,a)),bL(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function bW(e,t){bL(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),bL(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function bG(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function bH(e,t,a){let n=bL(e,()=>t());if(null==n)throw Error(a);return n}function bj(e,t=2){return P(e.slice(0,e.length-t))}function bq(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function bK(e){let t=[1,1,1];return 0!==e.length&&(1!==e.length||1!==e[0])&&(t=[bj(e),...bq(e)]),t}function bX(e,t){if(U(e=e.slice(-2),t=t.slice(-2))||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let a=e[e.length-1],n=t[t.length-1];if(a===n||a%2==0&&n%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function bY(e,t){return null!=e.getExtension(t)}function bJ(e){try{let t=bA(e);if(null!=t)return!0}catch(e){console.log("Error when getting WebGL context: ",e)}return!1}function bZ(e){let t=bO(e),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(n),r}function bQ(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&V("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}let b1=ef;function b0(){let e,t,a,n,r,i,s,l,o,p;return 2===ef.getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",a="out",n="in",r="texture",i="outputColor",s="out vec4 outputColor;",l=ef.getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",o="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",a="varying",n="varying",r="texture2D",i="gl_FragColor",s="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,o=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:a,varyingFs:n,texture2D:r,output:i,defineOutput:s,defineSpecialNaN:l,defineSpecialInf:o,defineRound:p}}function b2(e,t,a="index"){let n=en(t);return n.map((t,r)=>{let i=`int ${e[r]} = ${a} / ${t}`,s=r===n.length-1?`int ${e[r+1]} = ${a} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`;return`${i}; ${s};`}).join("")}function b4(e,t,a="index"){let n=en(t);return n.map((t,r)=>{let i=`int ${e[r]} = ${a} / outShapeStrides[${r}]`,s=r===n.length-1?`int ${e[r+1]} = ${a} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`;return`${i}; ${s};`}).join("")}b1.registerFlag("HAS_WEBGL",()=>b1.getNumber("WEBGL_VERSION")>0),b1.registerFlag("WEBGL_VERSION",()=>bJ(2)?2:+!!bJ(1)),b1.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),b1.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===b1.get("WEBGL_VERSION")),b1.registerFlag("WEBGL_CPU_FORWARD",()=>!0),b1.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),b1.registerFlag("WEBGL_PACK",()=>b1.getBool("HAS_WEBGL")),b1.registerFlag("WEBGL_PACK_NORMALIZATION",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_CLIP",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_REDUCE",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_LAZILY_UNPACK",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_CONV_IM2COL",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>b1.getBool("WEBGL_PACK")),b1.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(function(e){if(null==o){let t=bA(e);o=t.getParameter(t.MAX_TEXTURE_SIZE)}return o})(b1.getNumber("WEBGL_VERSION"))),b1.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(function(e){if(null==p){let t=bA(e);p=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,p)})(b1.getNumber("WEBGL_VERSION"))),b1.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=b1.getNumber("WEBGL_VERSION");return 0===e?0:function(e){let t;if(0===e)return 0;let a=bA(e);return bY(a,"EXT_disjoint_timer_query_webgl2")&&2===e?2:+!!bY(a,"EXT_disjoint_timer_query")}(e)}),b1.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>b1.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!nA()),b1.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(function(e){if(0===e)return!1;let t=bA(e);if(1===e){if(!bY(t,"OES_texture_float"))return!1}else if(!bY(t,"EXT_color_buffer_float"))return!1;return bZ(t)})(b1.getNumber("WEBGL_VERSION"))),b1.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!b1.getBool("WEBGL_FORCE_F16_TEXTURES")&&b1.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),b1.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(function(e){if(0===e)return!1;let t=bA(e);if(1===e){if(!bY(t,"OES_texture_float")||!bY(t,"WEBGL_color_buffer_float"))return!1}else{if(bY(t,"EXT_color_buffer_float"))return bZ(t);let e="EXT_color_buffer_half_float";if(bY(t,e)){let r=t.getExtension(e);var a=t,n=r;let i=bO(a,n),s=a.createTexture();a.bindTexture(a.TEXTURE_2D,s),a.texImage2D(a.TEXTURE_2D,0,i.internalFormatHalfFloat,1,1,0,i.textureFormatFloat,i.textureTypeHalfFloat,null);let l=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,l),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,s,0);let o=a.checkFramebufferStatus(a.FRAMEBUFFER)===a.FRAMEBUFFER_COMPLETE;return a.bindTexture(a.TEXTURE_2D,null),a.bindFramebuffer(a.FRAMEBUFFER,null),a.deleteTexture(s),a.deleteFramebuffer(l),o}return!1}return bZ(t)})(b1.getNumber("WEBGL_VERSION"))),b1.registerFlag("WEBGL_FENCE_API_ENABLED",()=>(function(e){return 2===e&&null!=bA(e).fenceSync})(b1.getNumber("WEBGL_VERSION"))),b1.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>4*!!b1.getBool("WEBGL_RENDER_FLOAT32_ENABLED")),b1.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),b1.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>nA()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),b1.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),b1.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),b1.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),b1.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),b1.registerFlag("WEBGL_EXP_CONV",()=>!1),b1.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>b1.getBool("IS_TEST")),b1.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),b1.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),b1.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),b1.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function b6(e){let t=en(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function b3(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}let b9=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:b5}=E,b8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,b7=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ye=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,yt=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function ya(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function yn(e){return`offset${e}`}function yr(e){let t=e.name,a=P(e.shapeInfo.logicalShape);return a<2?`return ${t};`:`
    for (int i = 0; i < ${a}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function yi(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";else if(6===e)return"ivec6";else throw Error(`GPU for rank ${e} is not yet supported`)}function ys(e,t,a){let{newShape:n,keptDims:r}=K(t),i=t.length,s=e&&3===i&&1===t[0],l=s?t.slice(1):n,o=!e&&i>1&&!U(t,a)&&n.length<i||s,p=o?l:t;return{useSqueezeShape:o,uniformShape:p,keptDims:r}}function yl(e,t){let a=JSON.parse(JSON.stringify(e));return a.shapeInfo.logicalShape=t,a}function yo(e,t){return t.map(t=>e[t]).join(", ")}function yp(e,t,a){let n,r,i,s=[],l=[],o=null,p=null;for(let n of(p=e.getUniformLocation(a,"NAN",!1),1===ef.getNumber("WEBGL_VERSION")&&(o=e.getUniformLocation(a,"INFINITY",!1)),t.variableNames)){let r={name:n,uniform:e.getUniformLocation(a,n,!1),offset:e.getUniformLocation(a,`offset${n}`,!1)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(a,`${n}Shape`,!1),r.texShape=e.getUniformLocation(a,`${n}TexShape`,!1)),s.push(r)}if(t.enableShapeUniforms&&(n=e.getUniformLocation(a,"outShape",!1),i=e.getUniformLocation(a,"outShapeStrides",!1),r=e.getUniformLocation(a,"outTexShape",!1)),t.customUniforms)for(let n of t.customUniforms)l.push(e.getUniformLocation(a,n.name,!1));return{variablesLocations:s,customUniformLocations:l,infLoc:o,nanLoc:p,outShapeLocation:n,outShapeStridesLocation:i,outTexShapeLocation:r}}function yd(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,a)=>{let n=e.logicalShape,r=t[a],i=r.shape;if(!U(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(e.isUniform&&r.isUniform)return;let s=e.texShape,l=r.isUniform?null:r.texData.texShape;if(!U(s,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${l} must match`)})}function yu(e){return ef.getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class yh{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=k.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=b0();this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?b4(["r","c","d"],e):b2(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}class ym{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=k.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=b0();this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?b4(["r","c","d"],e):b2(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}class yc{constructor(e){this.variableNames=["A"],this.outTexUsage=N.DOWNLOAD;let t=b0();this.outputShape=e,this.userCode=`
      ${b9}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}class yf{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=N.DOWNLOAD;let t=b0();this.outputShape=e,this.userCode=`
      ${b9}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}let yg={R:0,G:1,B:2,A:3};class yv{constructor(e,t=!1,a="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=b0();this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let e=0;e<a.length;e++){let t=a[e];i+=`
          if(offset == ${e}) {
            result = values[${yg[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?b3():b6(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${a.length});

        flatIndex = idiv(flatIndex, ${a.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${i}
        }
        ${n.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}class yb{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=b0();this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length);let n="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){let i=2*t+r;n+=`
          localCoords = coords;
          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${r};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${a.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?b3():b6(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${a.output} = ${r};
        }
    `}}function yy(e,t,a,n,r,i){let s=ef.getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||a<=0)throw Error(`Requested texture size [${t}x${a}] is invalid.`);if(t>s||a>s)throw Error(`Requested texture size [${t}x${a}] greater than WebGL maximum on this browser / GPU [${s}x${s}].`);let l=bH(e,()=>e.createTexture(),"Unable to create WebGLTexture."),o=e.TEXTURE_2D;return bL(e,()=>e.bindTexture(o,l)),bL(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),bL(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),bL(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),bL(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===ef.getNumber("WEBGL_VERSION")?bL(e,()=>e.texImage2D(o,0,n,t,a,0,r,i,null)):bL(e,()=>e.texStorage2D(o,1,n,t,a)),bL(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:l,texShape:[a,t]}}function yw(e){return e.internalFormatFloat}function yx(e){return e.internalFormatHalfFloat}function yk(e){return e.downloadTextureFormat}function yN(e){return e.internalFormatPackedFloat}function yI(e){return e.internalFormatPackedHalfFloat}class yS{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=ef.getNumber("WEBGL_VERSION");if(null!=e){var a;this.gl=e,a=e,b_[t]=a}else this.gl=bA(t);if(e=this.gl,2===ef.getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>bL(t,()=>t.createVertexArray()),this.bindVertexArray=e=>bL(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>bL(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>bL(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>bL(e,()=>t.createVertexArrayOES()),this.bindVertexArray=a=>bL(e,()=>t.bindVertexArrayOES(a)),this.deleteVertexArray=a=>bL(e,()=>t.deleteVertexArrayOES(a)),this.getVertexArray=()=>bL(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ef.getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=bM(this.gl,"OES_texture_float"),bY(this.gl,e))this.textureHalfFloatExtension=bM(this.gl,e);else if(ef.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),bY(this.gl,r))this.colorBufferHalfFloatExtension=bM(this.gl,r);else if(ef.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",bY(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(bY(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=function(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]),a=bH(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return bL(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),bL(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),a}(this.gl),this.indexBuffer=function(e){let t=new Uint16Array([0,1,2,2,1,3]),a=bH(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return bL(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a)),bL(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),a}(this.gl),this.framebuffer=function(e){return bH(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=bO(this.gl,this.textureHalfFloatExtension)}get debug(){return ef.getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;bL(e,()=>e.finish()),bL(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),bL(e,()=>e.deleteFramebuffer(this.framebuffer)),bL(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),bL(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),bL(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,a,n){let[r,i]=[a,t];return yy(e,r,i,yw(n),n.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,a,n){let[r,i]=[a,t];return yy(e,r,i,yx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,a,n){let[r,i]=[a,t];return yy(e,r,i,yk(n),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){var a;this.throwIfDisposed(),a=this.gl,bL(a,()=>a.bindTexture(a.TEXTURE_2D,e)),t.data instanceof Uint8Array?2===ef.getNumber("WEBGL_VERSION")?bL(a,()=>a.texSubImage2D(a.TEXTURE_2D,0,0,0,t.width,t.height,a.RGBA,a.UNSIGNED_BYTE,t.data)):bL(a,()=>a.texImage2D(a.TEXTURE_2D,0,a.RGBA,t.width,t.height,0,a.RGBA,a.UNSIGNED_BYTE,t.data)):2===ef.getNumber("WEBGL_VERSION")?bL(a,()=>a.texSubImage2D(a.TEXTURE_2D,0,0,0,a.RGBA,a.UNSIGNED_BYTE,t)):bL(a,()=>a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,t)),bL(a,()=>a.bindTexture(a.TEXTURE_2D,null))}uploadDenseMatrixToTexture(e,t,a,n){var r,i;let s,l,o;this.throwIfDisposed(),r=this.gl,i=this.textureConfig,bL(r,()=>r.bindTexture(r.TEXTURE_2D,e)),n instanceof Uint8Array?(s=new Uint8Array(t*a*4),l=r.UNSIGNED_BYTE,o=r.RGBA):(s=new Float32Array(t*a*4),l=r.FLOAT,o=i.internalFormatPackedFloat),s.set(n),2===ef.getNumber("WEBGL_VERSION")?bL(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t,a,r.RGBA,l,s)):bL(r,()=>r.texImage2D(r.TEXTURE_2D,0,o,t,a,0,r.RGBA,l,s)),bL(r,()=>r.bindTexture(r.TEXTURE_2D,null))}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,a,n){let[r,i]=bF(t,a);return yy(e,r,i,yI(n),e.RGBA,n.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,a,n){let[r,i]=bF(t,a);return yy(e,r,i,yN(n),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(bW(this.gl,this.framebuffer),this.outputTexture=null),bL(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,a){return this.downloadMatrixDriver(e,()=>(function(e,t,a,n){let[r,i]=[a,t],s=new Uint8Array(t*a*4);return bL(e,()=>e.readPixels(0,0,r,i,n.downloadTextureFormat,e.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)})(this.gl,t,a,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,a,n,r,i){return function(e,t,a,n,r,i,s,l){let o=new Float32Array(function(e,t){let[a,n]=bF(e,t);return a*n*4}(i,s));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,o),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),o}(this.gl,e,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){var a=this.gl;let n=new Float32Array(t);return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,n),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),n}createBufferFromTexture(e,t,a){this.bindTextureToFrameBuffer(e);let n=function(e,t,a,n){let r=e.createBuffer();bL(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=16*t*a;return bL(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),bL(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,0)),bL(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}(this.gl,t,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,a;if(ef.getBool("WEBGL_FENCE_API_ENABLED")){let n=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),a=()=>{let t=e.clientWaitSync(n,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=n}else ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(t,ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:t,isFencePassed:a}}downloadMatrixFromPackedTexture(e,t,a){return this.downloadMatrixDriver(e,()=>(function(e,t,a){let n=new Float32Array(t*a*4);return bL(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,n)),n})(this.gl,t,a))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){let t=b0(),a=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`,n=bH(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(bL(e,()=>e.shaderSource(n,a)),bL(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),Error("Failed to compile vertex shader.");return n}(t));let a=bH(t,()=>t.createProgram(),"Unable to create WebGLProgram.");if(bL(t,()=>t.attachShader(a,this.vertexShader)),bL(t,()=>t.attachShader(a,e)),bL(t,()=>t.linkProgram(a)),!ef.get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(a,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(a)),Error("Failed to link vertex and fragment shaders.");let n=Object.assign(a,{vao:this.createVertexArray()});return this.debug&&bz(t,n),n}buildVao(e){var t;this.setProgram(e),this.bindVertexArray(e.vao);let a=this.gl;bL(a,()=>a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),t=this.vertexBuffer,bL(a,()=>a.bindBuffer(a.ARRAY_BUFFER,t)),bP(a,e,"clipSpacePos",t,3,20,0)&&bP(a,e,"uv",t,2,20,12)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(bL(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&bz(this.gl,this.program),bL(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,a=!0){var n,r,i;return(this.throwIfDisposed(),a)?(n=this.gl,bH(n,()=>n.getUniformLocation(e,r),'uniform "'+(r=t)+'" not present in program.')):(i=this.gl,i.getUniformLocation(e,t))}getAttributeLocation(e,t){return this.throwIfDisposed(),bL(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,a){var n;this.throwIfDisposed(),this.throwIfNoProgram(),n=this.gl,bL(n,()=>{(function(e,t){let a=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>a){let e=`[gl.TEXTURE0, gl.TEXTURE${a}]`;throw Error(`textureUnit must be in ${e}.`)}})(n,a),bL(n,()=>n.activeTexture(n.TEXTURE0+a)),bL(n,()=>n.bindTexture(n.TEXTURE_2D,e))}),bL(n,()=>n.uniform1i(t,a))}setOutputMatrixTexture(e,t,a){this.setOutputMatrixTextureDriver(e,a,t)}setOutputPackedMatrixTexture(e,t,a){this.throwIfDisposed();let[n,r]=bF(t,a);this.setOutputMatrixTextureDriver(e,n,r)}setOutputMatrixWriteRegion(e,t,a,n){this.setOutputMatrixWriteRegionDriver(a,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,a,n){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&bz(this.gl,this.program),bG(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),bL(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),bL(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=bM(this.gl,2===ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),a=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await H(()=>this.disposed||this.isQueryAvailable(e,ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,a=this.getQueryTimerExtensionWebGL2(),n=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),n&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),a=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let a;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in ef.platform&&(a=ef.platform.setTimeoutCustom.bind(ef.platform)),H(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,a))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bU(this.gl,e,this.framebuffer),this.debug&&bG(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(bU(this.gl,this.outputTexture,this.framebuffer),this.debug&&bG(this.gl)):bW(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let a=t();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(e,t,a){this.throwIfDisposed();let n=this.gl;bU(n,e,this.framebuffer),this.debug&&bG(n),this.outputTexture=e,bL(n,()=>n.viewport(0,0,t,a)),bL(n,()=>n.scissor(0,0,t,a))}setOutputMatrixWriteRegionDriver(e,t,a,n){this.throwIfDisposed(),bL(this.gl,()=>this.gl.scissor(e,t,a,n))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}}let{mx:yT,XI:yC,Nk:y$,f6:yE,ct:y_,YG:yR,hH:yA,z3:yD,sG:yF,uM:yO,vS:yL,qB:yM,GG:yV,rq:yB,lg:yz,WR:yP,cu:yU,GE:yW,px:yG,jC:yH,He:yj,hE:yq,BF:yK,Dk:yX,cl:yY,_B:yJ,ub:yZ,_f:yQ,Ku:y1,qy:y0,Zy:y2,bu:y4,zv:y6,dH:y3,HS:y9,yH:y5,l3:y8,z9:y7,x6:we,_m:wt,eW:wa,GK:wn,SP:wr,yr:wi,dl:ws,Dw:wl,xT:wo,_X:wp,wz:wd}=R;function wu(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function wh(e,t){return 1===t?[e]:wu(e,t)}class wm{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=yu(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=wh("rc",this.rank),t=yi(this.rank),a=this.getOutOfBoundsCondition(e),n=this.getSetup(e),r=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${n}

            setOutput(vec4(${r}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let a=0;a<=1;a++)for(let n=0;n<=1;n++){let r=`${0===a?"r":"rp1"}, ${0===n?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let a=this.rank-2;a<this.rank;a++)t+=`${e[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),a=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${a};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);if(1===this.rank){let e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}class wc{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length);let a="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),a+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${function(e,t){let a=t?function(e,t,a="index"){let n=function(e,t){let a=e.length,n=e.map(e=>`${t}[${e}]`),r=Array(a-1);r[a-2]=n[a-1];for(let e=a-3;e>=0;--e)r[e]=`(${r[e+1]} * ${n[e+1]})`;return r}(e.map((e,t)=>t),t);return n.map((t,r)=>{let i=`int ${e[r]} = ${a} / ${n[r]}`,s=r===n.length-1?`int ${e[r+1]} = ${a} - ${e[r]} * ${n[r]}`:`index -= ${e[r]} * ${n[r]}`;return`${i}; ${s};`}).join("")}(["r","c","d"],"inputShape"):b2(["r","c","d"],e);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${a}
      return ivec3(r, c, d);
    }
  `}(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?b3():b6(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${a}

        setOutput(result);
      }
    `}}class wf{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,a){let n,r=wv(t,a),i=wb(e,r,a);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let s=wg(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let e=this.freeTextures[i].pop();return this.usedTextures[i].push(e),e}return r===I.PACKED_2X2_FLOAT32?n=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===I.PACKED_2X2_FLOAT16?n=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===I.UNPACKED_FLOAT32?n=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===I.UNPACKED_FLOAT16?n=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===I.PACKED_4X1_UNSIGNED_BYTE&&(n=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(n),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),n}releaseTexture(e,t,a,n){if(null==this.freeTextures)return;let r=wv(a,n),i=wb(t,r,n);i in this.freeTextures||(this.freeTextures[i]=[]);let s=wg(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=ef.getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;let o=this.usedTextures[i],p=o&&o.indexOf(e);if(null==p||p<0)throw Error("Cannot release a texture that was never provided by this texture manager");o[p]=o[o.length-1],o.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function wg(e,t,a,n,r){let i,s=function(e,t){switch(e){case I.PACKED_2X2_FLOAT32:return yN(t);case I.PACKED_2X2_FLOAT16:return yI(t);case I.UNPACKED_FLOAT32:return yw(t);case I.UNPACKED_FLOAT16:return yx(t);case I.PACKED_4X1_UNSIGNED_BYTE:return yk(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,n);if(r){let[t,a]=bF(e[0],e[1]);i=t*a}else{var l;let[t,a]=(l=e[0],[e[1],l]);i=t*a}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;else if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(a,s)}function wv(e,t){if(e===N.UPLOAD)return I.PACKED_2X2_FLOAT32;if(e===N.RENDER||null==e)return ef.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?I.PACKED_2X2_FLOAT32:I.UNPACKED_FLOAT32:t?I.PACKED_2X2_FLOAT16:I.UNPACKED_FLOAT16;if(e===N.DOWNLOAD||e===N.PIXELS)return I.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function wb(e,t,a){return`${e[0]}_${e[1]}_${t}_${a}`}class wy{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let ww="if (isnan(x)) return x;",wx="return abs(x);",wk=ww+`
  return (x < 0.0) ? 0.0 : x;
`,wN=ww+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,wI="return x;",wS=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,wT=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wC=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class w${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}class wE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length);let t=e.length,a=wh("rc",t),n=yi(t),r=function(e,t){if(1===e)return"rc";let a="";for(let n=0;n<e;n++)a+=t[n],n<e-1&&(a+=",");return a}(t,a),i=a.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${s}));
      }
    `}}let w_={},wR=ef.getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class wA extends D{nextDataId(){return wA.nextDataId++}constructor(e){let t;if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ef.getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");null!=e?(t=e instanceof yS?e:new yS(bA(ef.getNumber("WEBGL_VERSION"),e)),this.binaryCache={},this.gpgpuCreatedLocally=!1):(t=new yS(bA(ef.getNumber("WEBGL_VERSION"))),this.binaryCache=function(e){return e in w_||(w_[e]={}),w_[e]}(ef.getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0),this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new wf(this.gpgpu),this.numMBBeforeWarning=null==ef.global.screen?1024:ef.global.screen.height*ef.global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new A(this,n_)}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,a,n,r,i){let s=this.makeTensorInfo(t,a),l=this.texData.get(s.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[n,r]},l.texShape=[n,r];let o=new yv(bK(t),!1,i),p=this.runWebGLProgram(o,[s],a,[[n,r]]);return p.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(s),p.dataId}write(e,t,a){if((ef.getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ef.getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===a&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:t,dtype:a,values:e,usage:N.UPLOAD,refCount:1}),n}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,a,n,r){if(ef.getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===n)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:a,dtype:n,values:t,usage:N.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,a,{values:n,dtype:r,complexTensorInfos:i,slice:s,shape:l,isPacked:o}=this.texData.get(e);if(null!=s){let t;t=o?new w$(l,wI):new wy(l,wI);let a=this.runWebGLProgram(t,[{dataId:e,shape:l,dtype:r}],r),n=this.readSync(a.dataId);return this.disposeIntermediateTensorInfo(a),n}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let p=null!=this.activeTimers;return p&&(t=na()),a="complex64"===r?ob(this.readSync(i.real.dataId),this.readSync(i.imag.dataId)):this.getValuesFromTexture(e),p&&(this.downloadWaitMs+=na()-t),this.convertAndCacheOnCPU(e,a)}async read(e){let t,a;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let{values:n,shape:r,slice:i,dtype:s,complexTensorInfos:l,isPacked:o}=this.texData.get(e);if(null!=i){let t;t=o?new w$(r,wI):new wy(r,wI);let a=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),n=this.read(a.dataId);return this.disposeIntermediateTensorInfo(a),n}if(null!=n)return this.convertAndCacheOnCPU(e);if(ef.getBool("DEBUG")&&!ef.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ef.getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let p=null;if("complex64"!==s&&ef.get("WEBGL_BUFFER_SUPPORTED")){t=this.decode(e);let a=this.texData.get(t.dataId);p=this.gpgpu.createBufferFromTexture(a.texture.texture,...bD(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]);a=ob(e[0],e[1])}else if(null==p)a=this.getValuesFromTexture(e);else{let e=P(r);a=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=t&&this.disposeIntermediateTensorInfo(t),null!=p){let e=this.gpgpu.gl;bL(e,()=>e.deleteBuffer(p))}let d=this.convertAndCacheOnCPU(e,a),u=this.pendingRead.get(e);return this.pendingRead.delete(e),u.forEach(e=>e(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&n_.removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let{values:a,shape:n,slice:r,dtype:i,isPacked:s,texture:l}=this.texData.get(e);if("complex64"===i)throw Error("Does not support reading texture for complex64 dtype.");if(null!=r){let a;a=s?new w$(n,wI):new wy(n,wI);let r=this.runWebGLProgram(a,[{dataId:e,shape:n,dtype:i}],i),l=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),l}if(null==l)if(null!=a)throw Error("Data is not on GPU but on CPU.");else throw Error("There is no data on GPU or CPU.");let o=this.decode(e,t.customTexShape);return Object.assign({tensorRef:n_.makeTensorFromTensorInfo(o)},this.texData.get(o.dataId).texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let a=t.map(e=>nr(e));return rv(e.shape,e.dtype,a)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return rv(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let a=e[t];if(!(ef.getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===a||596e-10<Math.abs(a)&&65504>Math.abs(a))&&1){if(ef.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${a} cannot be represented on this device.`)}}}getValuesFromTexture(e){let{shape:t,dtype:a,isPacked:n}=this.texData.get(e),r=P(t);if(ef.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let a=this.decode(e),n=this.texData.get(a.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(n.texture.texture,...bD(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(a),i}let i=ef.getBool("WEBGL_PACK")&&!0===n,s=i?bK(t):t,l=i?new yf(s):new yc(s),o=this.runWebGLProgram(l,[{shape:s,dtype:a,dataId:e}],"float32"),p=this.texData.get(o.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(o),d}timerAvailable(){return ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,a=[],n=!1;null==this.programTimersStack?(this.programTimersStack=a,n=!0):this.activeTimers.push(a),this.activeTimers=a,e();let r=ns(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=ns(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,n&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(r);s.kernelMs=function(e){let t=0;for(let a=0;a<e.length;a++)t+=e[a];return t}(e),s.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:na(),endMs:null}}endTimer(e){return ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=na(),e}async getQueryTime(e){return ef.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:a}=this.texData.get(e);return null!=a&&(this.disposeData(a.real.dataId,t),this.disposeData(a.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:a,texShape:n,usage:r,isPacked:i,slice:s}=this.texData.get(e),l=s&&s.origDataId||e,o=this.dataRefCount.get(l);o>1?this.dataRefCount.set(l,o-1):(this.dataRefCount.delete(l),null!=t&&(this.numBytesInGPU-=this.computeBytes(n,a),this.textureManager.releaseTexture(t,n,r,i)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=wR){return ef.getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&P(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){aW("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return oY(e.shape,t)}packedUnaryOp(e,t,a){let n=new w$(e.shape,t),r=this.compileAndRun(n,[e],a);return n_.makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=y3(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ef.getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,wx,e.dtype);let t=new wy(e.shape,wx),a=this.compileAndRun(t,[e]);return n_.makeTensorFromTensorInfo(a)}makeTensorInfo(e,t,a){let n;if("string"===t&&null!=a&&a.length>0&&Z(a[0])){let r=a.map(e=>nn(e));n=this.write(r,e,t)}else n=this.write(a,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}}makeOutput(e,t,a){return n_.makeTensorFromTensorInfo(this.makeTensorInfo(e,t,a),this)}unpackTensor(e){let t=new wE(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new wm(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let a=[bj(e.shape),...bq(e.shape)],n={dtype:e.dtype,shape:a,dataId:e.dataId},r=new wc([bj(t),...bq(t)],a),i=this.runWebGLProgram(r,[n],e.dtype,[a],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){let a,{isPacked:n,shape:r,dtype:i}=this.texData.get(e);null!=t&&V(P(r)<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");let s=bK(r);a=n?new ym(s):new yh(s);let l=[null!=t?t:bD(s)],o=this.runWebGLProgram(a,[{shape:s,dtype:i,dataId:e}],i,l,!0,t);return{dtype:i,shape:r,dataId:o.dataId}}runWebGLProgram(e,t,a,n,r=!1,i){let s,l=this.makeTensorInfo(e.outputShape,a),o=this.texData.get(l.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===k.DENSE&&(o.texShape=(null!=i?i:bD(e.outputShape)).map(e=>2*e)),null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===P(l.shape)){var p;return p=l.dtype,o.values=X(p,0),l}let d=[],u=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let a=this.texData.get(t.dataId);if(null==a.texture){if(!e.packedInputs&&P(t.shape)<=ef.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:a.values};e.packedInputs&&(a.isPacked=!0,a.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!a.isPacked!=!!e.packedInputs)t=a.isPacked?this.unpackTensor(t):this.packTensor(t),d.push(t),a=this.texData.get(t.dataId);else if(a.isPacked&&!bX(a.shape,t.shape)){let e=t,n=t.shape;t.shape=a.shape,t=this.packedReshape(t,n),d.push(t),a=this.texData.get(t.dataId),e.shape=n}return{shape:t.shape,texData:a,isUniform:!1}});this.uploadToGPU(l.dataId);let h={shape:l.shape,texData:o,isUniform:!1},m=function(e,t,a){let n="";t.concat(a).forEach(t=>{let r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let i=t.texData.texShape,{useSqueezeShape:s,uniformShape:l,keptDims:o}=ys(e.packedInputs,t.shape,i),p="",d="",u="";if(1===l.length&&e.packedInputs){let e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];p=`${e[0]>1}_${e[1]>1}`}else if(2!==l.length||e.packedInputs){if(l.length>2&&!e.packedInputs){let e=en(l);u=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${l[0]>1}_${l[1]>1}`;let h=t.shape.length,m=2===l.length&&U(t.shape,i),c=1===P(t.shape),f=rU(t.shape,a.shape),g=!e.packedInputs&&h===a.shape.length&&U(i,a.texData.texShape),v=e.packedInputs||l.length>2?"":`${i[0]>1}_${i[1]>1}`;n+=`${h}_${g}_${s?o:""}_${l.length}_${c}_${f}_${m}_${p}_${d}_${u}_${v}_${r}`}else{let e=t.isUniform?"uniform":t.texData.texShape;n+=`${t.shape}_${e}_${r}`}});let r=e.userCode,i=e.constructor.name;return i+("_"+n+"_"+r+`${ef.getNumber("WEBGL_VERSION")}`)}(e,u,h),c=this.getAndSaveBinary(m,()=>(function(e,t,a,n){let r=a.map((e,a)=>{let n={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(n.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[a],shapeInfo:n}}),i=r.map(e=>e.shapeInfo),s={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},l=function(e,t,a){var n,r,i,s;let l,o,p=[];if(e.forEach(e=>{let t=P(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?p.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(p.push(`uniform sampler2D ${e.name};`),p.push(`uniform int offset${e.name};`)),a.enableShapeUniforms){let{uniformShape:t}=ys(a.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:p.push(`uniform int ${e.name}Shape;`);break;case 2:p.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:p.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:p.push(`uniform ivec4 ${e.name}Shape;`)}p.push(`uniform ivec2 ${e.name}TexShape;`)}}),a.enableShapeUniforms){switch(t.logicalShape.length){case 1:p.push("uniform int outShape;");break;case 2:p.push("uniform ivec2 outShape;"),p.push("uniform int outShapeStrides;");break;case 3:p.push("uniform ivec3 outShape;"),p.push("uniform ivec2 outShapeStrides;");break;case 4:p.push("uniform ivec4 outShape;"),p.push("uniform ivec3 outShapeStrides;")}p.push("uniform ivec2 outTexShape;")}a.customUniforms&&a.customUniforms.forEach(e=>{p.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let d=p.join("\n"),u=e.map(e=>(function(e,t,a=!1,n){let r="";a?r+=function e(t,a){switch(t.shapeInfo.logicalShape.length){case 0:var n=t;let r=n.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=b0();return`
    vec4 ${i}() {
      return ${s.texture2D}(${r}, halfCR);
    }
  `;case 1:return function(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,i=b0();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${a}, uv);
    }
  `;let s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${s[0]}, ${s[1]}, index);
      return ${i.texture2D}(${a}, uv);
    }
  `}(t,a);case 2:return function(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape,s=i[0],l=i[1],o=b0();if(null!=i&&U(a,i))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${o.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${s}.0);

        return ${o.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `;let p=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(a[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${p[0]}, ${p[1]}, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}(t,a);case 3:return function(t,a){let n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=yl(t,n.slice(1));return`
        ${e(r,a)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${yo(["b","row","col"],[1,2])});
        }
      `}let o=b0();if(a)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let p=l[0],d=l[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${p}, ${d}, ${h}, ${u}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}(t,a);default:return function(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=b0();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${a}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${a}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${a}, uv);
    }
  `;let i=e.shapeInfo.logicalShape,s=i.length,l=e.shapeInfo.texShape,o=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],p=o[0],d=o[1],u=Math.ceil(i[s-1]/2),h=u*Math.ceil(i[s-2]/2),m="int b, int row, int col",c=`b * ${h} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<s-1;e++)m=`int b${e}, `+m,h*=i[s-e-1],c=`b${e} * ${h} + `+c;return`
    vec4 ${n}(${m}) {
      int index = ${c};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${p});
      return ${r.texture2D}(${a}, uv);
    }
  `}(t,a)}}(e,n):r+=function e(t,a=!1){let n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${a};}`;let[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`
      float ${n}() {
        return sampleTexture(${a}, halfCR);
      }
    `;let s=yn(a);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${s});
      return sampleTexture(${a}, uv);
    }
  `;let[l,o]=e.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${l}, ${o}, ${s});
      return sampleTexture(${a}, uv);
    }
  `}(t,a);case 1:return function(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${yr(e)}
      }
    `;let r=e.shapeInfo.texShape,i=r[0],s=r[1];if(1===s&&1===i)return`
      float ${n}(int index) {
        return sampleTexture(${a}, halfCR);
      }
    `;let l=yn(a);return 1===s?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${i}.0);
        return sampleTexture(${a}, uv);
      }
    `:1===i?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${a}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${l});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${i}, ${s}, index + ${l});
      return sampleTexture(${a}, uv);
    }
  `}(t,a);case 2:return function(t,a){let n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape;if(null!=s&&U(n,s)){if(a)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let e=s[0],t=s[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:l,keptDims:o}=K(n);if(l.length<n.length){let n=yl(t,l);return`
      ${e(n,a)}
      float ${i}(int row, int col) {
        return ${i}(${yo(["row","col"],o)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${yr(t)}
      }
    `;let p=s[0],d=s[1],u=yn(r);return 1===d?a?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${u}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `:1===p?a?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${u}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:a?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${u};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${u};
    vec2 uv = uvFromFlat(${p}, ${d}, index);
    return sampleTexture(${r}, uv);
  }
`}(t,a);case 3:return function(t,a){let n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],l=n[2],{newShape:o,keptDims:p}=K(n);if(o.length<n.length){let n=yl(t,o);return`
        ${e(n,a)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${yo(["row","col","depth"],p)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${l}, 1)));
        ${yr(t)}
      }
    `;let d=t.shapeInfo.texShape,u=d[0],h=d[1],m=t.shapeInfo.flatOffset;if(h===s&&null==m)return a?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${l}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${u}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(h===l&&null==m)return a?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `;let c=yn(r);return a?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${c};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${l} + depth + ${c};
        vec2 uv = uvFromFlat(${u}, ${h}, index);
        return sampleTexture(${r}, uv);
      }
  `}(t,a);case 4:return function(t,a){let n=t.shapeInfo.logicalShape,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],l=n[2]*s,o=n[1]*l,{newShape:p,keptDims:d}=K(n);if(p.length<n.length){let n=yl(t,p);return`
      ${e(n,a)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${yo(["row","col","depth","depth2"],d)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${l}, ${s}, 1)));
        ${yr(t)}
      }
    `;let u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,m=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,v=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==u)return a?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${l}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${m}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&null==u)return a?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${m}.0);
        return sampleTexture(${r}, uv);
      }
    `;let b=yn(r);return a?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${v}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${l} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${c}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}(t,a);case 5:return function(t){let a=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=a[4],s=a[3]*i,l=a[2]*s,o=a[1]*l,{newShape:p,keptDims:d}=K(a);if(p.length<a.length){let a=yl(t,p);return`
      ${e(a)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${yo(["row","col","depth","depth2","depth3"],d)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${l}, ${s}, ${i})) +
          depth3;
        ${yr(t)}
      }
    `;let u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,m=h[0],c=h[1];if(c===o&&null==u)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${l}, ${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===i&&null==u)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${a[1]*a[2]*a[3]},
               ${a[2]*a[3]}, ${a[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=yn(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${l} + depth * ${s} +
          depth2 * ${i} + depth3 + ${f};
      vec2 uv = uvFromFlat(${m}, ${c}, index);
      return sampleTexture(${n}, uv);
    }
  `}(t);case 6:return function(t){let a=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:s}=K(a);if(i.length<a.length){let a=yl(t,i);return`
      ${e(a)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${yo(["row","col","depth","depth2","depth3","depth4"],s)});
      }
    `}let l=a[5],o=a[4]*l,p=a[3]*o,d=a[2]*p,u=a[1]*d;if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${d}, ${p}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${l}, 1)));
        ${yr(t)}
      }
    `;let h=t.shapeInfo.flatOffset,m=t.shapeInfo.texShape,c=m[0],f=m[1];if(f===u&&null==h)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${p}, ${o}, ${l})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===l&&null==h)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${a[1]*a[2]*a[3]*a[4]},
               ${a[2]*a[3]*a[4]},
               ${a[3]*a[4]},
               ${a[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let g=yn(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${d} + depth * ${p} +
          depth2 * ${o} + depth3 * ${l} + depth4 + ${g};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}(t);default:throw Error(`${n.length}-D input sampling is not yet supported`)}}(e,n);let i=e.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(a?r+=function(e,t){let a,n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,l=b5(e.shapeInfo.logicalShape,t.logicalShape),o=yi(s),p=s-i,d=["x","y","z","w","u","v"];a=0===i?"":s<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${d[e+p]} = 0;`).join("\n");let u="";u=s<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+p]}`).join(", ");let h="return outputValue;",m=1===P(e.shapeInfo.logicalShape),c=1===P(t.logicalShape);if(1!==i||m||c){if(m&&!c)h=1===s?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?h="return vec4(outputValue.x);":l.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+r+"AtOutCoords"}() {
      ${o} coords = getOutputCoords();
      ${a}
      vec4 outputValue = get${r}(${u});
      ${h}
    }
  `}(e,t):r+=function(e,t){let a,n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",s=t.texShape,l=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,p=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===p&&null==e.shapeInfo.flatOffset&&U(l,s))return`
      float ${i}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let d=yi(p),u=b5(e.shapeInfo.logicalShape,t.logicalShape),h=p-o,m=["x","y","z","w","u","v"];a=0===o?"":p<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${m[e+h]} = 0;`).join("\n");let c="";return c=p<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${m[t+h]}`).join(", "),`
    float ${i}() {
      ${d} coords = getOutputCoords();
      ${a}
      return get${r}(${c});
    }
  `}(e,t)),r})(e,t,a.packedInputs,a.enableShapeUniforms)).join("\n"),h=t.texShape,m=b0(),c=(n=m,`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `),f=(r=m,`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${b8}
    ${b7}
    ${ye}
  `);return t.isPacked?(l=function(e,t,a){switch(e.length){case 0:return ya();case 1:var n=0,r=t,i=a;let s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return 1===s[0]?i?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:1===s[1]?i?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:i?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `;case 2:var l=e,o=t,p=a;let d=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(U(l,o))return p?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${d[0]}, ${d[1]}));
      }
    `;let u=Math.ceil(l[1]/2);return p?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${d[0]}, ${d[1]}));

      int index = resTexRC.x * ${d[1]} + resTexRC.y;
      int r = 2 * (index / ${u});
      int c = imod(index, ${u}) * 2;

      return ivec2(r, c);
    }
  `;case 3:var h=e,m=t,c=a;if(c)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let f=[Math.ceil(m[0]/2),Math.ceil(m[1]/2)],g=Math.ceil(h[2]/2),v=g*Math.ceil(h[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${f[0]}, ${f[1]}));
      int index = resTexRC.x * ${f[1]} + resTexRC.y;

      int b = index / ${v};
      index -= b * ${v};

      int r = 2 * (index / ${g});
      int c = imod(index, ${g}) * 2;

      return ivec3(b, r, c);
    }
  `;default:return function(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2),s=i,l="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],l=`
      int b${t} = index / ${s};
      index -= b${t} * ${s};
    `+l,o=`b${t}, `+o;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${l}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${o});
    }
  `}(e,t,a)}}(t.logicalShape,h,a.enableShapeUniforms),i=m,o=`
    void setOutput(vec4 val) {
      ${i.output} = val;
    }
  `):(l=function(e,t,a){switch(e.length){case 0:return ya();case 1:return n=0,r=t,i=a,1===r[0]?i?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${r[1]}.0);
      }
    `:1===r[1]?i?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${r[0]}.0);
      }
    `:i?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return resTexRC.x * ${r[1]} + resTexRC.y;
    }
  `;case 2:return s=e,l=t,o=a,U(s,l)?o?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${l[0]}, ${l[1]}));
      }
    `:1===s[1]?o?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${l[0]}, ${l[1]}));
        int index = resTexRC.x * ${l[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===s[0]?o?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${l[0]}, ${l[1]}));
        int index = resTexRC.x * ${l[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:o?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${l[0]}, ${l[1]}));
      int index = resTexRC.x * ${l[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `;case 3:var n,r,i,s,l,o,p=e,d=t,u=a;if(u){let e=b4(["r","c","d"],p);return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${e}
    return ivec3(r, c, d);
  }
`}let h=b2(["r","c","d"],p);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${d[0]}, ${d[1]}));
      int index = resTexRC.x * ${d[1]} + resTexRC.y;
      ${h}
      return ivec3(r, c, d);
    }
  `;case 4:var m=e,c=t,f=a;if(f){let e=b4(["r","c","d","d2"],m);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${e}
      return ivec4(r, c, d, d2);
    }
  `}let g=b2(["r","c","d","d2"],m);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${c[0]}, ${c[1]}));
      int index = resTexRC.x * ${c[1]} + resTexRC.y;
      ${g}
      return ivec4(r, c, d, d2);
    }
  `;case 5:var v=e,b=t;let y=b2(["r","c","d","d2","d3"],v);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${b[0]},
                             ${b[1]}));

      int index = resTexRC.x * ${b[1]} + resTexRC.y;

      ${y}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `;case 6:var w=e,x=t;let k=b2(["r","c","d","d2","d3","d4"],w);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${x[0]}, ${x[1]}));
      int index = resTexRC.x * ${x[1]} + resTexRC.y;

      ${k}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `;default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,h,a.enableShapeUniforms),s=m,o=`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `),a.packedInputs&&(f+=yt),[f,c,o,d,l,u,a.userCode].join("\n")}(r,s,t),o=function(e,t){let a=bH(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(bL(e,()=>e.shaderSource(a,t)),bL(e,()=>e.compileShader(a)),ef.get("ENGINE_COMPILE_ONLY"))return a;if(!1===e.getShaderParameter(a,e.COMPILE_STATUS))throw bB(t,e.getShaderInfoLog(a)),Error("Failed to compile fragment shader.");return a}(e.gl,l),p=e.createProgram(o);return ef.get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:o,source:l,webGLProgram:p,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(p),Object.assign({program:t,fragmentShader:o,source:l,webGLProgram:p,inShapeInfos:i,outShapeInfo:s},yp(e,t,p)))})(this.gpgpu,e,u,h)),f=null!=this.activeTimers;f&&(s=this.startTimer()),ef.get("ENGINE_COMPILE_ONLY")||function(e,t,a,n,r){t.program.enableShapeUniforms||(yd(t.inShapeInfos,a),yd([t.outShapeInfo],[n]));let i=n.texData.texture,s=n.texData.texShape;n.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ef.getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let n=0;n<a.length;++n){let r=a[n],{uniform:i,offset:s,shape:l,texShape:o}=t.variablesLocations[n];if(l){let{uniformShape:a}=ys(t.program.packedInputs,r.shape,r.texData.texShape);switch(a.length){case 1:e.gl.uniform1iv(l,new Int32Array(a));break;case 2:e.gl.uniform2iv(l,new Int32Array(a));break;case 3:e.gl.uniform3iv(l,new Int32Array(a));break;case 4:e.gl.uniform4iv(l,new Int32Array(a))}}if(o&&e.gl.uniform2i(o,r.texData.texShape[0],r.texData.texShape[1]),null!=i){if(r.isUniform){if(2>P(r.shape))e.gl.uniform1f(i,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}continue}null!=r.texData.slice&&null!=s&&e.gl.uniform1i(s,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,i,n)}}let l=t.outShapeLocation;if(l)switch(n.shape.length){case 1:e.gl.uniform1iv(l,new Int32Array(n.shape));break;case 2:e.gl.uniform2iv(l,new Int32Array(n.shape));break;case 3:e.gl.uniform3iv(l,new Int32Array(n.shape));break;case 4:e.gl.uniform4iv(l,new Int32Array(n.shape))}if(t.outShapeStridesLocation){let a=en(n.shape);switch(n.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(a));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(a));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(a))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&r)for(let a=0;a<t.program.customUniforms.length;++a){let n=t.program.customUniforms[a],i=t.customUniformLocations[a],s=r[a];if("float"===n.type)e.gl.uniform1fv(i,s);else if("vec2"===n.type)e.gl.uniform2fv(i,s);else if("vec3"===n.type)e.gl.uniform3fv(i,s);else if("vec4"===n.type)e.gl.uniform4fv(i,s);else if("int"===n.type)e.gl.uniform1iv(i,s);else if("ivec2"===n.type)e.gl.uniform2iv(i,s);else if("ivec3"===n.type)e.gl.uniform3iv(i,s);else if("ivec4"===n.type)e.gl.uniform4iv(i,s);else throw Error(`uniform type ${n.type} is not supported yet.`)}e.executeProgram()}(this.gpgpu,c,u,h,n),d.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(s=this.endTimer(s),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(s)}));let g=ef.getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){let e=na();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ef.getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){let e=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),e}return l}compileAndRun(e,t,a,n,r=!1){return a=a||t[0].dtype,this.runWebGLProgram(e,t,a,n,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ef.getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=nj(()=>{if(!ef.get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=ef.getBool("DEBUG");ef.set("DEBUG",!1);let t=this.abs(r$(1e-8)).dataSync()[0];if(ef.set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t,a=this.texData.get(e),{shape:n,dtype:r,values:i,texture:s,usage:l,isPacked:o}=a;if(null!=s)return;let p=null!=this.activeTimers;p&&(t=na());let d=a.texShape;if(null==d&&(a.texShape=d=function(e,t=!1){let a=ef.getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=ef.getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&ef.getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=a/2),t&&(a*=2,n*=2,1===(e=e.map((t,a)=>a>=e.length-2?L(e[a]):e[a])).length&&(e=[2,e[0]])),2!==e.length&&(e=K(e).newShape);let r=P(e),i=null;e.length<=1&&r<=a?i=[1,r]:2===e.length&&e[0]<=a&&e[1]<=a?i=e:3===e.length&&e[0]*e[1]<=a&&e[2]<=a?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=a&&e[1]*e[2]<=a?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=a&&e[3]<=a?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=a&&e[1]*e[2]*e[3]<=a&&(i=[e[0],e[1]*e[2]*e[3]]);let s=null!=i&&Math.max(...i)>n&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s)if(t){let t=bj(e),a=2,n=2;e.length&&([a,n]=bq(e)),i=W(r=a/2*t*(n/2)).map(e=>2*e)}else i=W(r);return i}(n,o)),null!=i){let e,s=bK(n),l=d[1],u=d[0],h=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(o||!h)&&([l,u]=bF(d[0],d[1])),e=o?new yb(s,h):new yv(s,h);let m=h?[u,l]:d,c=this.makeTensorInfo(m,r),f=this.texData.get(c.dataId);h?f.usage=N.PIXELS:f.usage=N.UPLOAD,f.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(c.dataId),l,u,i);let g=[[u,l]],v=this.runWebGLProgram(e,[c],r,g,!0),b=this.texData.get(v.dataId);a.texShape=b.texShape,a.isPacked=b.isPacked,a.usage=b.usage,ef.get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(a.texture=b.texture,a.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(c),p&&(this.uploadWaitMs+=na()-t)}else a.texture=this.acquireTexture(d,l,r,o)}convertAndCacheOnCPU(e,t){let a=this.texData.get(e),{dtype:n}=a;return null!=t&&(a.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let a="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<a.length;++t)a[t]=Math.round(e[t]);return a}throw Error(`Unknown dtype ${t}`)}(t,n)),a.values}acquireTexture(e,t,a,n){if(this.numBytesInGPU+=this.computeBytes(e,a),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,n)}computeBytes(e,t){return e[0]*e[1]*J(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let a=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(a)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await l0(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw bB(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.");throw Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:a,infLoc:n,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:l}=yp(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=a,e.infLoc=n,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,a){e.channels=e.channels||"RGBA";let{texture:n,height:r,width:i,channels:s}=e,l=n_.backend;if(!l.gpgpu.gl.isTexture(n))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let o=l.writeTexture(n,t,a,r,i,s);return n_.makeTensorFromDataId(o,t,a,l)}}wA.nextDataId=0,nD()&&nX("webgl",()=>new wA,2);let wD=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class wF{constructor(e,t,a){this.variableNames=["A","B"],this.outputShape=rG(t,a),this.enableShapeUniforms=yu(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}let wO=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class wL{constructor(e,t,a,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=rG(t,a);let r=this.outputShape.length;this.enableShapeUniforms=yu(r);let i="";if(n)if(0===r||1===P(this.outputShape))i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else{let e=yi(r);if(i=`
          ${e} coords = getOutputCoords();
        `,1===r)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=wh("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${e[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${e[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}function wM(e){let{inputs:t,backend:a}=e,{x:n}=t;return a.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function wV(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,i=a.makeTensorInfo(n.shape,"complex64"),s=a.texData.get(i.dataId);return s.complexTensorInfos={real:wM({inputs:{x:n},backend:a}),imag:wM({inputs:{x:r},backend:a})},i}let wB="return (a < 0.) ? b * a : a;",wz=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,wP="return (a < 0.) ? b * a : a;",wU=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,wW="if (isnan(x)) return x;";function wG({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:a,dtype:n}){return({inputs:r,backend:i})=>{let s,{x:l}=r,o=n||l.dtype;if(i.shouldExecuteOnCPU([l])&&null!=a){let e=a(i.texData.get(l.dataId).values,o);return i.makeTensorInfo(l.shape,o,e)}return s=ef.getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new w$(l.shape,t):new wy(l.shape,e),i.runWebGLProgram(s,[l],o)}}function wH({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:a=!1,supportsComplex:n=!1,cpuKernelImpl:r,dtype:i}){return({inputs:s,backend:l})=>{let o,{a:p,b:d}=s;if(n&&"complex64"===p.dtype){let t=l.texData.get(p.dataId),a=l.texData.get(d.dataId),[n,r]=[[t.complexTensorInfos.real,a.complexTensorInfos.real],[t.complexTensorInfos.imag,a.complexTensorInfos.imag]].map(t=>{let[a,n]=t,r={dataId:a.dataId,dtype:a.dtype,shape:p.shape},i={dataId:n.dataId,dtype:n.dtype,shape:d.shape},s=new wF(e,p.shape,d.shape);return l.runWebGLProgram(s,[r,i],ny(a.dtype,n.dtype))}),i=wV({inputs:{real:n,imag:r},backend:l});return l.disposeIntermediateTensorInfo(n),l.disposeIntermediateTensorInfo(r),i}let u=i||ny(p.dtype,d.dtype);if(("string"===p.dtype||"string"===d.dtype||l.shouldExecuteOnCPU([p,d]))&&null!=r){let e=l.texData.get(p.dataId).values,t=l.texData.get(d.dataId).values,a="string"===p.dtype?oK(e):e,n="string"===p.dtype?oK(t):t,[i,s]=r(p.shape,d.shape,a,n,u),o=l.makeTensorInfo(s,u);return l.texData.get(o.dataId).values=i,o}return o=ef.getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new wL(t,p.shape,d.shape,a):new wF(e,p.shape,d.shape),l.runWebGLProgram(o,[p,d],u)}}function wj(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?wT:wk;if("elu"===e)return t?wS:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?wC:wN;if("prelu"===e)return t?wU:wP;else if("leakyrelu"===e)return t?wz:wB;else if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class wq{constructor(e,t,a,n=!1,r=!1,i=!1,s=null,l=!1,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=yu(this.outputShape.length);let p=Math.ceil((n?e[1]:e[2])/2),d=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],u=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],h="",m="";s&&(h=l?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);"),i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha");let c="rc.x",f="rc.x";e[0]<t[0]?c=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(f=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${h}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${c};
        int batchB = ${f};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${n?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${r?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${u[0]});
          result += (${d[1]} * ${u[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${i?"result += getBiasAtOutCoords();":""}

        ${m}

        setOutput(result);
      }
    `}}let wK={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class wX{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=rG(t,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}let wY="return a * b;";function wJ(e){let t,{inputs:a,backend:n}=e,{a:r,b:i}=a,s=ny(r.dtype,i.dtype);if("complex64"===r.dtype){let e=n.texData.get(r.dataId),t=n.texData.get(i.dataId),a=new wX(wK.REAL,r.shape,i.shape),s=new wX(wK.IMAG,r.shape,i.shape),l=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],o=n.runWebGLProgram(a,l,"float32"),p=n.runWebGLProgram(s,l,"float32"),d=wV({inputs:{real:o,imag:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),d}if(n.shouldExecuteOnCPU([r,i])){let e=n.texData.get(r.dataId),t=n.texData.get(i.dataId),[a,l]=yK(r.shape,i.shape,e.values,t.values,s),o=n.makeTensorInfo(l,s);return n.texData.get(o.dataId).values=a,o}return t=ef.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL(wY,r.shape,i.shape):new wF(wY,r.shape,i.shape),n.runWebGLProgram(t,[r,i],s)}function wZ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{shape:i}=n,s=P(r.shape),l=j(i,s),o=P(l);V(s===o,()=>`The new shape (${l}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`);let p=a.texData.get(r.dataId);return!p.isPacked||bX(r.shape,l)||null!==p.texture&&bX(p.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,a){let n=[bj(e.shape),...bq(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},i=new wc([bj(t),...bq(t)],n),s=a.runWebGLProgram(i,[r],e.dtype,[n],!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}(r,l,a)}class wQ{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:n,inSize:r,outSize:i}=e;this.outputShape=[n,i];let s=4*Math.floor(a/4),l=a%4,o="sumValue += dot(values, ones);";if(null!=t){let e=1/t;o=`sumValue += dot(values * ${e%1==0?e.toPrecision(2):e}, ones);`}let p="";r%a>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${s}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${o}
        }

        int inIdx = inOffset + ${s};
        if (${1===l}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${o}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${o}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${o}
        }
        setOutput(sumValue);
      }
    `}}class w1{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:n,inSize:r,outSize:i}=e;this.outputShape=[n,i];let s="0.0",l="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",l="min"):"max"===t&&(s="-1.0 / 1e-20",l="max");let o=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?o="sumValue":"prod"===t?o="prodValue":"all"===t?o="allValue":"any"===t&&(o="anyValue");let p=4*Math.floor(a/4),d=a%4,u=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";"all"===t?(s="1.0",u=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):"any"===t&&(s="0.0",u=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let m="";r%a>0&&(m=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${s};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${s});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${p};
        if (${1===d}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${u}
        } else if (${2===d}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${u}
        } else if (${3===d}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${u}
        }
        setOutput(${o});
      }
    `}}function w0(e,t,a,n){let r=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let a=t.length?t[t.length-1].outSize:e[1],n=l7(a);t.push({inSize:a,windowSize:n,outSize:Math.ceil(a/n)})}return t}(e.shape),i=e;for(let s=0;s<r.length;s++){let l,o,{inSize:p,windowSize:d,outSize:u}=r[s];l="mean"===a?0===s?new wQ({windowSize:d,inSize:p,batchSize:e.shape[0],outSize:u},p):new wQ({windowSize:d,inSize:p,batchSize:e.shape[0],outSize:u}):new w1({windowSize:d,inSize:p,batchSize:e.shape[0],outSize:u},a),o=i,i=n.runWebGLProgram(l,[i],t),o.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(o)}return i}class w2{constructor(e,t){this.variableNames=["A"];let a=Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];this.outputShape=a,this.rank=a.length;let n=yi(this.rank),r=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=Array(t);for(let t=0;t<e.length;t++)n[e[t]]=a[t];return n.join()}(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}class w4{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let a=Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=yi(this.rank),r=wu("rc",this.rank),i=Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=r[e];let s=`vec2(${i.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${a[this.rank-1]}`,o=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${o};
      if(${l}) {
        result[1] = ${o};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${a[this.rank-2]}) {
        result[2] = ${o};
        if(${l}) {
          result[3] = ${o};
        }
      }
      setOutput(result);
    }
    `}}function w6(e,t,a){let n=ef.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new w4(e.shape,t):new w2(e.shape,t);return a.runWebGLProgram(n,[e],e.dtype)}function w3(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,keepDims:s}=n;return function(e,t,a,n){let r=e.shape.length,i=q(t,e.shape),s=i,l=sb(s,r),o=null!=l,p=e;o&&(p=w6(e,l,n),s=sw(s.length,r)),sv("sum",s,r);let[d,u]=sf(p.shape,s),h=d;a&&(h=sg(d,i));let m=P(u),c=wZ({inputs:{x:p},attrs:{shape:[P(e.shape)/m,m]},backend:n}),f=w0(c,nw(e.dtype),"sum",n),g=wZ({inputs:{x:f},attrs:{shape:h},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),o&&n.disposeIntermediateTensorInfo(p),g}(r,i,s,a)}function w9(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{perm:s}=r,l=Array(i.shape.length);for(let e=0;e<l.length;e++)l[e]=i.shape[s[e]];if(n.shouldExecuteOnCPU([i])){let e=wp(n.texData.get(i.dataId).values,i.shape,i.dtype,s,l);t=n.makeTensorInfo(l,i.dtype),n.texData.get(t.dataId).values=e}else t=w6(i,s,n);return t}function w5({a:e,b:t,transposeA:a,transposeB:n,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:l=0,activation:o=null}){let p,d=e.shape.length,u=t.shape.length,h=a?e.shape[d-2]:e.shape[d-1],m=n?t.shape[u-1]:t.shape[u-2],c=a?e.shape[d-1]:e.shape[d-2],f=n?t.shape[u-2]:t.shape[u-1],g=e.shape.slice(0,-2),v=t.shape.slice(0,-2),b=P(g),y=P(v),w=rG(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);V(h===m,()=>`Error in matMul: inner shapes (${h}) and (${m}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${n} must match.`);let x=a?[b,h,c]:[b,c,h],k=n?[y,f,m]:[y,m,f],N=wZ({inputs:{x:e},backend:r,attrs:{shape:x}}),I=wZ({inputs:{x:t},backend:r,attrs:{shape:k}}),S=[N,I],T=Math.max(b,y),C=a?N.shape[1]:N.shape[2],$=null!=i,E=null!=s,_="leakyrelu"===o,R=null!=o?wj(o,!0):null,A=$||E||_||null!=R;if((1===c||1===f)&&C>1e3&&!1===A){let e=N,t=I;a&&(e=w9({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),S.push(e)),n&&(t=w9({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),S.push(t));let i=1!==f,s=1===f,l=e;i&&(l=wZ({inputs:{x:e},backend:r,attrs:{shape:[T,C,1]}}),S.push(l));let o=t;s&&(o=wZ({inputs:{x:t},backend:r,attrs:{shape:[T,1,C]}}),S.push(o));let d=wJ({inputs:{a:l,b:o},backend:r});p=w3({inputs:{x:d},backend:r,attrs:{axis:1===f?2:1,keepDims:!0}}),S.push(d)}else{let o=ny(e.dtype,t.dtype),d=new wq(x,k,[T,c,f],a,n,$,R,E,_),u=[N,I];if(null!=i&&u.push(i),E&&u.push(s),_){let e=r.makeTensorInfo([],"float32",ne(l,"float32"));u.push(e),S.push(e)}p=r.runWebGLProgram(d,u,o)}let D=wZ({inputs:{x:p},backend:r,attrs:{shape:w}});for(let e of(S.push(p),S))r.disposeIntermediateTensorInfo(e);return D}let w8="return abs(x);",w7=wG({opSnippet:ww+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),xe=wG({opSnippet:ww+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),xt="return a + b;",xa=wH({opSnippet:xt,packedOpSnippet:xt,supportsComplex:!0,cpuKernelImpl:yT});class xn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let a=[];this.variableNames.forEach(e=>{a.push(`float v${e} = get${e}AtOutCoords();`)});let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${a.join("\n        ")}

        float result = ${n};
        setOutput(result);
      }
    `}}class xr{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let a=[];this.variableNames.forEach(e=>{a.push(`vec4 v${e} = get${e}AtOutCoords();`)});let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${a.join("\n        ")}

        vec4 result = ${n};
        setOutput(result);
      }
    `}}class xi{constructor(e,t,a){this.variableNames=["A"];let{windowSize:n,batchSize:r,outSize:i}=e;a||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}class xs{constructor(e,t,a,n){let r,i;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,V(e.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);let s=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let l=this.outputShape,o=l.length,p=yi(o),d=wh("coords",o);if(1===s){let e=yi(i=o+1);r=`
        ${e} sourceLocR = ${e}(${d.join()}, 0);
        ++${d[o-1]};
        ${e} sourceLocG = ${e}(${d.join()}, 0);
        ++${d[o-2]};
        ${e} sourceLocA = ${e}(${d.join()}, 0);
        --${d[o-1]};
        ${e} sourceLocB = ${e}(${d.join()}, 0);
        --${d[o-2]};`}else i=o,r=`
        ${p} sourceLocR = coords;
        ++${d[o-1]};
        ${p} sourceLocG = coords;
        ++${d[o-2]};
        ${p} sourceLocA = coords;
        --${d[o-1]};
        ${p} sourceLocB = coords;
        --${d[o-2]};`;let u=["x","y","z","w","u","v"].slice(0,i),h="."+u[i-1],m=u.map(e=>"int "+e),c=wh("sourceLocR",i-1).concat("inIdx.r"),f=wh("sourceLocG",i-1).concat("inIdx.g"),g=wh("sourceLocB",i-1).concat("inIdx.b"),v=wh("sourceLocA",i-1).concat("inIdx.a"),b="max"===a?"greaterThan":"lessThan",y=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${c.join()}),
                             getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${v.join()})));`,w=`vec4(
            getAChannel(${c.join()}),
            hasNextCol ? getAChannel(${f.join()}) : 0.,
            hasNextRow ? getAChannel(${g.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,x=n?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${u.join()}),
                                          vec2(${u.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${u.join()}),
                               vec2(${u.slice(-2).join()}));
      }
      ${x}
      void main() {
        ${p} coords = getOutputCoords();
        bool hasNextCol = ${d[o-1]} < ${l[o-1]-1};
        bool hasNextRow = ${d[o-2]} < ${l[o-2]-1};
        ${r}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${y}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function xl(e,t,a,n){let r=[a];if(sv("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.shape.length),!ef.getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],i=e.texData.get(t.dataId),s=null!==i&&i.isPacked,l=t;s&&a.push(l=e.unpackTensor(t));let[o,p]=sf(l.shape,r),d=wZ({inputs:{x:l},backend:e,attrs:{shape:[-1,P(p)]}});a.push(d);let u=function e(t,a,n,r=null){let i=a.shape[0],s=a.shape[1];null!=r&&(i=r.shape[0],s=r.shape[1]);let l=l7(s),o=new xi({windowSize:l,inSize:s,batchSize:i,outSize:Math.ceil(s/l)},n,null==r),p=[a];null!=r&&p.push(r);let d=t.runWebGLProgram(o,p,"int32");if(1===d.shape[1])return d;let u=e(t,a,n,d);return t.disposeIntermediateTensorInfo(d),u}(e,d,n);a.push(u);let h=wZ({inputs:{x:u},backend:e,attrs:{shape:o}});return a.forEach(t=>e.disposeIntermediateTensorInfo(t)),h}return function e(t,a,n,r=null){let i=null!=r?r.shape:a.shape,s=l7(i[i.length-1]),l=new xs(i,s,n,null==r),o=null==r?[a]:[a,r],p=t.runWebGLProgram(l,o,"int32");if(p.shape.length===a.shape.length){let r=e(t,a,n,p);return t.disposeIntermediateTensorInfo(p),r}return p}(e,t,n)}let xo=wG({opSnippet:ww+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),xp=wG({opSnippet:ww+"return log(x + sqrt(x * x + 1.0));"}),xd=wG({opSnippet:ww+`
  return atan(x);
`}),xu=wH({opSnippet:wD+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+wO+`
  return result;
`}),xh=wG({opSnippet:ww+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`});class xm{constructor(e,t,a,n=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&a)throw Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideHeight,l=e.strideWidth,o=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;let c="avg"===t,f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,v="0.0";if(c||(v="-1.0 / 1e-20"),a){this.userCode=`
        const ivec2 strides = ivec2(${s}, ${l});
        const ivec2 pads = ivec2(${h}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${o}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${u};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?r?f:g:`wR * ${u} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let y=4*Math.floor(i/4),w=i%4,x=`
      if (${c}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${l});
      const ivec2 pads = ivec2(${h}, ${m});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${o}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${y}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${x}
          }

          int xC = xCCorner + ${y};
          if (${1===w}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${x}
          } else if (${2===w}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${x}
          } else if (${3===w}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${x}
          }
        }
        setOutput(${b});
      }
    `}}class xc{constructor(e,t,a,n=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&a)throw Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideDepth,l=e.strideHeight,o=e.strideWidth,p=e.dilationDepth,d=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,m=e.effectiveFilterHeight,c=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,y="0.0";if(b||(y="-1.0 / 1e-20"),a){this.userCode=`
        const ivec3 strides =
            ivec3(${s}, ${l}, ${o});
        const ivec3 pads = ivec3(${f}, ${g}, ${v});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${c};
                  wC += ${u}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${c} +
                      wR * ${c} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");let x=4*Math.floor(i/4),k=i%4,N=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${s}, ${l}, ${o});
      const ivec3 pads = ivec3(${f}, ${g}, ${v});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${x}; wC += 4) {
              int xC = xCCorner + wC * ${u};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${u}, ch),
                getValue(batch, xD, xR, xC + 2 * ${u}, ch),
                getValue(batch, xD, xR, xC + 3 * ${u}, ch)
              );

              ${N}
            }

            int xC = xCCorner + ${x};
            if (${1===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${2===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${u}, ch),
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${3===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${u}, ch),
                getValue(batch, xD, xR, xC + 2 * ${u}, ch),
                initializationValue
              );

              ${N}
            }
          }
        }
        setOutput(${w});
      }
    `}}class xf{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,l=e.effectiveFilterHeight,o=e.effectiveFilterWidth,p=l-1-e.padInfo.top,d=o-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${p}, ${d});
      const float avgMultiplier = float(${1/(t*a)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o};
            wC+= ${s}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class xg{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,n=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,l=e.dilationDepth,o=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,m=d-1-e.padInfo.front,c=u-1-e.padInfo.top,f=h-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${f});
      const float avgMultiplier = float(${1/(t*a*n)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xv{constructor(e,t,a,n,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],rG(e,t),rG(e,a);let s="0.0";null!=n&&(rG(e,n),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let l="1.0";null!=r&&(rG(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${s};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class xb{constructor(e,t,a,n,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],rG(e,t),rG(e,a);let s="vec4(0.0)";null!=n&&(rG(e,n),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=r&&(rG(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${s};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}class xy{constructor(e){let t;this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let a=yi(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=function(e){if(1===e)return"sourceLoc";if(e<=6)return xw.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),r=e.map((e,t)=>`sourceLoc.${xw[t]} = start[${t}] + coords.${xw[t]};`);t=`
        ${a} sourceLoc;
        ${a} coords = getOutputCoords();
        ${r.join("\n")}
      `,this.userCode=`
      void main() {
        ${t}
        setOutput(getSource(${n}));
      }
    `}}let xw=["x","y","z","w","u","v"];class xx{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=yi(this.rank),a=wh("coords",this.rank),n=wh("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${n.slice(-2).join()})`,i=`getChannel(getSource(${n.join()}), ${r})`,s=`
      result.x = ${i};
      if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${i};
        --${n[this.rank-1]};
      }
    `,l=1===this.rank?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${i};
        if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${i};
        }
      }
    `,o=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${n[t]} = ${a[t]} + start[${t}];`).join("\n");this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${o}
        vec4 result = vec4(0.);
        ${s}
        ${l}
        setOutput(result);
      }
    `}}function xk(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:i,size:s}=n,[l,o]=ig(r,i,s);if(ie(r,l,o),0===P(o))return a.makeTensorInfo(o,r.dtype,[]);if(a.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=y9(a.texData.get(r.dataId).values,l,o,r.shape,r.dtype);return a.makeTensorInfo(o,r.dtype,e)}let{isPacked:p}=a.texData.get(r.dataId),d=im(r.shape,l,o);if(p||!d){let e=ef.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xx(o):new xy(o),t=[l];return a.runWebGLProgram(e,[r],r.dtype,t)}return a.uploadToGPU(r.dataId),function(e,t,a,n){let r=n.texData.get(e.dataId),i=n.makeTensorInfo(a,e.dtype),s=n.texData.get(i.dataId);Object.assign(s,r),s.refCount=1,s.shape=a,s.dtype=e.dtype;let l=ic(t,en(e.shape));r.slice&&(l+=r.slice.flatOffset),s.slice={flatOffset:l,origDataId:r.slice&&r.slice.origDataId||e.dataId};let o=n.dataRefCount.get(s.slice.origDataId)||1;return n.dataRefCount.set(s.slice.origDataId,o+1),i}(r,l,o,a)}let xN=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,xI=`
  return float(int(a.r) & int(b.r));
`,xS=wH({opSnippet:"return float(a != b);",cpuKernelImpl:yY,dtype:"bool"});function xT(e){let{inputs:t,backend:a}=e,{input:n}=t;return wM({inputs:{x:a.texData.get(n.dataId).complexTensorInfos.real},backend:a})}let xC="return ceil(x);",x$=wG({opSnippet:xC,packedOpSnippet:xC,cpuKernelImpl:yR});class xE{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}class x_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}class xR{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function xA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}class xD{constructor(e){this.outputShape=[],this.outputShape=l4(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let a=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let n=t[e-1];a.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${n}));`)}let n=t.length,r=t[t.length-1];a.push(`else setOutput(getT${n}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${a.join("\n        ")}
      }
    `}}class xF{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=l4(e,t);let a=this.outputShape,n=a.length,r=yi(n),i=wh("coords",n),s=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((e,t)=>`T${t}`);let l=Array(e.length-1);l[0]=e[0][t];for(let a=1;a<l.length;a++)l[a]=l[a-1]+e[a][t];let o=s[t],p=s.slice(-2),d=s.join(),u=`if (${o} < ${l[0]}) {
        return getChannel(
            getT0(${d}), vec2(${p.join()}));
        }`;for(let e=1;e<l.length;e++){let t=l[e-1];u+=`
        if (${o} < ${l[e]}  && ${o} >= ${l[e-1]}) {
          return getChannel(
            getT${e}(${xO(s,o,t)}),
            vec2(${xO(p,o,t)}));
        }`}let h=l.length,m=l[l.length-1];u+=`
        return getChannel(
          getT${h}(${xO(s,o,m)}),
          vec2(${xO(p,o,m)}));`,this.userCode=`
      float getValue(${s.map(e=>"int "+e)}) {
        ${u}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[n-1]} = ${i[n-1]} + 1;
        if (${i[n-1]} < ${a[n-1]}) {
          result.g = getValue(${i});
        }

        ${i[n-2]} = ${i[n-2]} + 1;
        if (${i[n-2]} < ${a[n-2]}) {
          result.a = getValue(${i});
        }

        ${i[n-1]} = ${i[n-1]} - 1;
        if (${i[n-2]} < ${a[n-2]} &&
            ${i[n-1]} < ${a[n-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function xO(e,t,a){let n=e.indexOf(t);return e.map((e,t)=>t===n?`${e} - ${a}`:e).join()}function xL(e){let{inputs:t,backend:a}=e,{input:n}=t;return wM({inputs:{x:a.texData.get(n.dataId).complexTensorInfos.imag},backend:a})}function xM(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,i=q(r,t[0].shape)[0];l2(t.map(e=>e.shape),i);let s=l4(t.map(e=>e.shape),i);if(0===P(s))return a.makeTensorInfo(s,t[0].dtype,[]);let l=t.filter(e=>P(e.shape)>0);return 1===l.length?wM({inputs:{x:l[0]},backend:a}):function e(t,a,n){let r=t[0].dtype;if("complex64"===r){let r=t.map(e=>xT({inputs:{input:e},backend:n})),i=t.map(e=>xL({inputs:{input:e},backend:n})),s=e(r,a,n),l=e(i,a,n),o=wV({inputs:{real:s,imag:l},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),i.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),o}let i=n.shouldExecuteOnCPU(t);if("string"===r&&(i=!0),i){let e=t.map(e=>{let t=P(e.shape.slice(a));return wZ({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),i=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),s=yA(i,l4(e.map(e=>e.shape),1),r,1===e[0].shape[0]),l=l4(t.map(e=>e.shape),a),o=n.makeTensorInfo(l,r,s);return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),o}let s=t.filter(e=>P(e.shape)>0),l=ef.getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let e=l?new wy(t[0].shape,wI):new w$(t[0].shape,wI);return n.runWebGLProgram(e,t,r)}let o=ef.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let t=[];for(let r=0;r<s.length;r+=o){let i=s.slice(r,r+o);t.push(e(i,a,n))}let r=e(t,a,n);for(let e of t)n.disposeIntermediateTensorInfo(e);return r}if(l){let e=new xF(s.map(e=>e.shape),a);return n.runWebGLProgram(e,s,r)}let{tensors2D:p,outShape:d}=function(e,t,a){let n=l4(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>wZ({inputs:{x:e},attrs:{shape:[-1,P(e.shape.slice(t))]},backend:a})),outShape:n}}(s,a,n),u=new xD(p.map(e=>e.shape)),h=n.runWebGLProgram(u,p,r);p.forEach(e=>n.disposeIntermediateTensorInfo(e));let m=wZ({inputs:{x:h},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(h),m}(l,i,a)}class xV{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let i=e.padInfo.top,s=e.padInfo.left,l=e.strideHeight,o=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,m=4*Math.floor(e.inChannels/4),c=e.inChannels%4,f="channelsLast"===e.dataFormat,g="",v="";a&&(g=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:`
          float activation(float x) {
            ${a}
          }
        `,v="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${l}, ${o});
      const ivec2 pads = ivec2(${i}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${f?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${f?1:2}], coords[${f?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===c}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${2===c}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===c}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${v}
        setOutput(result);
      }
    `}}class xB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,a=e.padInfo.top,n=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,l=e.dilationDepth,o=e.dilationHeight,p=e.dilationWidth,d=e.filterDepth,u=e.filterHeight,h=e.filterWidth,m=4*Math.floor(e.inChannels/4),c=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${s});
      const ivec3 pads = ivec3(${t}, ${a}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${u}; wR++) {
            int xR = xRCorner + wR * ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===c}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${2===c}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===c}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xz{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yu(this.outputShape.length);let i=e.padInfo.left,s=e.strideWidth,l=e.dilationWidth,o=e.filterHeight,p=e.filterWidth,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<p;e++)d+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;d+=`
     for (int r = 0; r < ${o}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<p;e++)d+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(p+1)/2;t++){let a=2*t;if(d+=`
           xC = xCCorner + ${a*l};
           `,1===s){if(a<p&&(i%2==1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${a}Ready == 0) {
                   xTexelC${a} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${a}.zw = vec2(0.0);
                   }
                   xTexelC${a}Ready = 1;
                 }
               `,1===l&&a>0?d+=`
                 xC${a} = vec4(xTexelC${a-2}.zw, xTexelC${a}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${a} = vec4(previous.zw, xTexelC${a}.xy);
                   } else {
                     xC${a} = vec4(0.0, 0.0, xTexelC${a}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${a}Ready == 0) {
                   xTexelC${a} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${a}.zw = vec2(0.0);
                   }
                   xTexelC${a}Ready = 1;
                 }

                 xC${a} = xTexelC${a};
                 `,a+1<p)){let e=i%2==0?L(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${a+1}Ready == 0) {
                     xTexelC${a+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${a+1}.zw = vec2(0.0);
                     }
                     xTexelC${a+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${a+1} = vec4(previous.zw, xTexelC${a+1}.xy);
                     } else {
                      xC${a+1} = vec4(0.0, 0.0, xTexelC${a+1}.xy);
                     }
                     `:d+=`
                     xC${a+1} = vec4(xTexelC${a}.zw, xTexelC${a+1}.xy);
                     `):1===e?d+=`
                     xC${a+1} = xTexelC${a};
                     `:d+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${a+1}Ready == 0) {
                       xTexelC${a+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${a+1}.zw = vec2(0.0);
                       }
                       xTexelC${a+1}Ready = 1;
                     }

                     xC${a+1} = xTexelC${a+1};
                     `}}else a<p&&(i%2==1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${a}Ready == 0) {
                   xTexelC${a} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${a}.zw = vec2(0.0);
                   }
                   xTexelC${a}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${a+1}Ready == 0) {
                   xTexelC${a+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${a+1}.zw = vec2(0.0);
                   }
                   xTexelC${a+1}Ready = 1;
                 }

                 xC${a} = vec4(xTexelC${a}.zw, xTexelC${a+1}.zw);
               `,a+1<p&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${a+1} = vec4(xTexelC${a+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${a}Ready == 0) {
                   xTexelC${a} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${a}.zw = vec2(0.0);
                   }
                   xTexelC${a}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${a+1}Ready == 0) {
                   xTexelC${a+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${a+1}.zw = vec2(0.);
                   }
                   xTexelC${a+1}Ready = 1;
                 }

                 xC${a} = vec4(
                   xTexelC${a}.xy, xTexelC${a+1}.xy);
               `,a+1<p&&(d+=`
                   xC${a+1} = vec4(xTexelC${a}.zw, xTexelC${a+1}.zw);
                 `)));a<p&&(d+=`
             wTexel = getW(r, ${a}, d1, d2);
             dotProd += xC${a}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${a}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,a+1<p&&(d+=`
               wTexel = getW(r, ${a+1}, d1, d2);
               dotProd += xC${a+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${a+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   
     }
   
     }
   `;let u="",h="";a&&(u=n?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${a}
         }`:r?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${a}
         }`:`vec4 activation(vec4 x) {
           ${a}
         }`,h="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${u}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${h}
         setOutput(result);
       }
     `}}class xP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=yu(this.outputShape.length);let{dataFormat:a}=t,n=b0(),r="channelsLast"===a,i=r?1:2,s=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,o="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)o+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${s}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${o}

        ${n.output} = result;
      }
    `}}function xU(e,t){let a=e.length;return a>=3?t?[...e.slice(0,-3),e[a-3]*e[a-2],e[a-1]]:[...e.slice(0,-3),e[a-3],e[a-2]*e[a-1]]:!t&&1===a&&e[0]>1?[e[0],1]:null}function xW({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:l=null}){let o,p=e.shape,d=n.texData.get(e.dataId),u=a.inChannels,h=p[0]*p[1]*p[2],m=a.outChannels,c="channelsLast"===a.dataFormat,f=[];if(null!=i){let e=xU(i.shape,c);null!=e&&(i=wZ({inputs:{x:i},backend:n,attrs:{shape:e}}),f.push(i))}if(null!=r){let e=xU(r.shape,c);null!=e&&(r=wZ({inputs:{x:r},backend:n,attrs:{shape:e}}),f.push(r))}if(!((1===h||1===m)&&u>1e3)&&d.isPacked&&c&&null!=d.texture&&p[2]%2!=0&&U(d.shape.slice(-3),p.slice(-3))){let u=p[0]*p[1]*(p[2]+1),h={dataId:e.dataId,shape:[1,u,a.inChannels],dtype:e.dtype},m=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,V(bX(d.shape,h.shape),()=>`packed reshape ${d.shape} to ${h.shape} isn't free`);let c=wZ({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}});f.push(c);let g=w5({a:h,b:c,backend:n,transposeA:!1,transposeB:!1,bias:r,activation:l,preluActivationWeights:i,leakyreluAlpha:s}),v=n.texData.get(g.dataId);V(v.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=m,v.shape=a.outShape,(o=wM({inputs:{x:g},backend:n})).shape=a.outShape,f.push(g)}else{let p=a.outHeight*a.outWidth,d=wZ({inputs:{x:e},backend:n,attrs:{shape:c?[a.batchSize,p,a.inChannels]:[a.batchSize,a.inChannels,p]}}),u=wZ({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=w5({a:c?d:u,b:c?u:d,transposeA:!c,transposeB:!1,backend:n,bias:r,activation:l,preluActivationWeights:i,leakyreluAlpha:s});o=wZ({inputs:{x:h},backend:n,attrs:{shape:a.outShape}}),f.push(d),f.push(u),f.push(h)}for(let e of f)n.disposeIntermediateTensorInfo(e);return o}function xG({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:l=null}){let{filterWidth:o,filterHeight:p,inChannels:d,outWidth:u,outHeight:h,dataFormat:m}=a,c="channelsLast"===m,f=o*p*d,g=h*u,v=[a.batchSize,f,g],b=[];if(null!=i){let e=xU(i.shape,c);null!=e&&(i=wZ({inputs:{x:i},backend:n,attrs:{shape:e}}),b.push(i))}if(null!=r){let e=xU(r.shape,c);null!=e&&(r=wZ({inputs:{x:r},backend:n,attrs:{shape:e}}),b.push(r))}let y=wZ({inputs:{x:t},backend:n,attrs:{shape:[1,f,P(t.shape)/f]}});b.push(y);let w=new xP(v,a),x=[e.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],k=n.runWebGLProgram(w,[e],"float32",x),N=wZ({inputs:{x:k},backend:n,attrs:{shape:v}});b.push(k),b.push(N);let I=null!=r,S=null!=i,T="leakyrelu"===l,C=l?wj(l,!0):null,$=new wq(c?N.shape:y.shape,c?y.shape:N.shape,c?[a.batchSize,g,a.outChannels]:[a.batchSize,a.outChannels,g],!0,!1,I,C,S,T),E=c?[N,y]:[y,N];if(r&&E.push(r),S&&E.push(i),T){let e=n.makeTensorInfo([],"float32",ne(s,"float32"));E.push(e),b.push(e)}let _=n.runWebGLProgram($,E,"float32"),R=wZ({inputs:{x:_},backend:n,attrs:{shape:a.outShape}});for(let e of(b.push(_),b))n.disposeIntermediateTensorInfo(e);return R}class xH{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,n=e.padInfo.top,r=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${i?3:1}];

        ivec2 dyCorner = ivec2(coords[${i?1:2}], coords[${i?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,a=e.strideHeight,n=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${s};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xK{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,n=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,l=t-1-e.padInfo.front,o=a-1-e.padInfo.top,p=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${o}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xX{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=yu(this.outputShape.length);let t=e.filterHeight,a=e.filterWidth,n=t-1-e.padInfo.top,r=a-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            int wCPerm = ${a} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}let xY=wG({opSnippet:wW+`
  return cos(x);
`,packedOpSnippet:`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${wO}
  return result;
`}),xJ=wG({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`});class xZ{constructor(e,t,a,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,s,l,o]=e,[p]=t,[d,u]=a;this.outputShape=[p,d,u,o];let[h,m]=[`${s-1}.0`,`${l-1}.0`],[c,f,g]=d>1?[`${(s-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[v,b,y]=u>1?[`${(l-1)/(u-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${c});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${f};
        float width_scale = ${b};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${y};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${+("bilinear"===n)} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}!function(e){e.Prod="*",e.Sum="+"}(S||(S={}));class xQ{constructor(e,t,a,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,i=this.op===S.Prod?"1.0":"0.0",s=a?i:`getX(${x1(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],o="",p="";a?(o=n?`end != ${l-1}`:"end != 0",p=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${l}`:"end >= pow2",p=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${yi(r)} coords = getOutputCoords();
        int end = ${x0(r,"coords",this.op)};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${p};
          ${x0(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${x1(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function x1(e,t,a){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function x0(e,t,a){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function x2(e,t,a,n,r,i){let s=t.shape.length,l=sb([n],s),o=t;null!=l&&(o=w9({inputs:{x:t},backend:a,attrs:{perm:l}}));let p=sw(1,s)[0];if(p!==s-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let d=o.shape[p],u=wM({inputs:{x:o},backend:a});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){let n=new xQ(e,o.shape,!1,i),r=[[t]],s=u;u=a.runWebGLProgram(n,[u],u.dtype,r),a.disposeIntermediateTensorInfo(s)}if(r){let t=new xQ(e,o.shape,r,i),n=u;u=a.runWebGLProgram(t,[u],u.dtype),a.disposeIntermediateTensorInfo(n)}if(null!=l){let e=w9({inputs:{x:u},backend:a,attrs:{perm:sy(l)}});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(o),e}return u}class x4{constructor(e,t,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class x6{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yu(this.outputShape.length);let i=e.filterHeight,s=e.filterWidth,l=e.outChannels/e.inChannels,o="",p="";a&&(o=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:`
          float activation(float x) {
            ${a}
          }
        `,p="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${o}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${s}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${p}
        setOutput(result);
      }
    `}}class x3{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yu(this.outputShape.length);let i=e.outChannels/e.inChannels,s=e.padInfo.left,l=e.strideWidth,o=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,u=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<d;e++)u+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;u+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let e=0;e<d;e++)u+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;u+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(d+1)/2;e++){let t=2*e;if(u+=`
          xC = xCCorner + ${t*o};
          `,1===l){if(t<d&&(s%2==1?(u+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===o&&t>0?u+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:u+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):u+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<d)){let e=s%2==0?L(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(u+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,o>1?u+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:u+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?u+=`
                    xC${t+1} = xTexelC${t};
                    `:u+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<d&&(s%2==1?(u+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<d&&(u+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(u+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<d&&(u+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<d&&(u+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<d&&(u+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}u+=`
    }
  
      }
    `;let h="",m="";a&&(h=n?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:`vec4 activation(vec4 x) {
          ${a}
        }`,m="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${u}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${m}
        setOutput(result);
      }
    `}}class x9{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,n=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class x5{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,s=a-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class x8{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}class x7{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:a,padInfo:n,strideHeight:r,strideWidth:i,filterHeight:s,filterWidth:l,dilationHeight:o,dilationWidth:p}=e,{top:d,left:u}=n;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${d}, ${u});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${s}; h++) {
          int hIn = hBeg + h * ${o};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}let ke=wG({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),kt=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,ka=wH({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:yD}),kn=wG({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${oh};
  float a1 = ${om};
  float a2 = ${oc};
  float a3 = ${of};
  float a4 = ${og};
  float a5 = ${ov};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),kr=wG({opSnippet:wW+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:yF,dtype:"float32"});function ki(e){let{inputs:t,attrs:a,backend:n}=e,{dim:r}=a,{input:i}=t,s=i.shape.length,l=i.shape.slice(),o=r;return r<0&&(V(-(s+1)<=r,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),o=s+r+1),l.splice(o,0,1),wZ({inputs:{x:i},backend:n,attrs:{shape:l}})}let ks="return exp(x) - 1.0;",kl=wG({opSnippet:ks,packedOpSnippet:ks,cpuKernelImpl:yO});class ko{constructor(e,t,a){let n;this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let i=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=a?`${r}.0`:"1.0";if("real"===e)n="return real * expR - imag * expI;";else if("imag"===e)n="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${n}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function kp(e,t,a){let n=a.texData.get(e.dataId),r=P(e.shape),i=e.shape[e.shape.length-1],s=wZ({inputs:{x:e},backend:a,attrs:{shape:[r/i,i]}}),l=s.shape,o=new ko("real",l,t),p=new ko("imag",l,t),d=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],u=a.runWebGLProgram(o,d,"float32"),h=a.runWebGLProgram(p,d,"float32"),m=wV({inputs:{real:u,imag:h},backend:a});a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(h);let c=wZ({inputs:{x:m},backend:a,attrs:{shape:e.shape}});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(m),c}class kd{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function ku(e){let{backend:t,attrs:a}=e,{shape:n,value:r}=a,{dtype:i}=a;if("string"===(i=i||ee(r))){let e=X(i,P(n));return e.fill(r),t.makeTensorInfo(n,i,e)}{let e=new kd(n,r),a=[[r]];return t.runWebGLProgram(e,[],i,a)}}class kh{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let km="return floor(x);",kc=wG({opSnippet:km,packedOpSnippet:km,cpuKernelImpl:yL}),kf=wH({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"});class kg{constructor(e){this.variableNames=["A"];let t=b0(),[a,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${a}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class kv{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=b0(),[a,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${a}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}let kb=ef.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class ky{constructor(e,t,a,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=a;let r=yi(a.length),i=`
    int index;`;for(let e=0;e<this.sliceDim;e++)i+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}class kw{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let a=yi(this.rank),n=function(e,t){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let t=0;t<e.length;t++)2===t?n.push("index"):n.push(`${a[t]}`);return n.join()}(e,0);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}}function kx(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:i}=t,{axis:s,batchDims:l}=n,o=q(s,r.shape)[0];if(ef.get("DEBUG")){let e=a.readSync(i.dataId),t=r.shape[o];for(let a=0;a<e.length;++a){let n=e[a];V(n<=t-1&&n>=0,()=>`GatherV2: the index value ${n} is not in [0, ${t-1}]`)}}let p=oq(r,i,o,l),d=P(i.shape),u=[],h=wZ({inputs:{x:r},backend:a,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=wZ({inputs:{x:i},backend:a,attrs:{shape:[p.batchSize,d/p.batchSize]}});u.push(h),u.push(m);let c=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize];if(a.shouldExecuteOnCPU([r,i])||"string"===r.dtype){let e=a.bufferSync(m),t=yV(a.bufferSync(h),e,c);return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.makeTensorInfo(p.outputShape,t.dtype,t.values)}let f=new kw(h.shape,c),g=a.runWebGLProgram(f,[h,m],h.dtype);u.push(g);let v=wZ({inputs:{x:g},backend:a,attrs:{shape:p.outputShape}});return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),v}let kk=wH({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:yB,dtype:"bool"}),kN=wH({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:yz}),kI=wG({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),kS=wG({opSnippet:"return float(isinf(x));",dtype:"bool"}),kT=wG({opSnippet:"return float(isnan(x));",dtype:"bool"}),kC=wH({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:yP,dtype:"bool"}),k$=wH({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:yU,dtype:"bool"}),kE=wG({opSnippet:wW+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:yG}),k_=wG({opSnippet:wW+`
  return log(1.0 + x);
`}),kR=wH({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),kA=wG({opSnippet:"return float(!(x >= 1.0));"}),kD=wH({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"});class kF{constructor(e,t,a,n,r){let i;this.variableNames=["x"],this.outputShape=[];let s=e[3]-1;this.outputShape=e;let l=`float(${a}) + float(${n}) * sum`;i=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${s}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}}class kO{constructor(e,t,a,n,r){let i;this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e[3]-1;this.outputShape=e;let l=`float(${a}) + float(${n}) * sum`;i=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}}class kL{constructor(e,t,a,n,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=a,this.alpha=n,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}function kM(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{reductionIndices:s,keepDims:l}=r,o=i.shape.length,p=q(s,i.shape),d=p,u=sb(d,o),h=null!=u,m=n.shouldExecuteOnCPU([i]),c=i;if(h){if(m){let e=n.texData.get(c.dataId).values,t=Array(o);for(let e=0;e<t.length;e++)t[e]=i.shape[u[e]];let a=wp(e,i.shape,i.dtype,u,t);c=n.makeTensorInfo(t,i.dtype),n.texData.get(c.dataId).values=a}else c=w6(i,u,n);d=sw(d.length,o)}sv("max",d,o);let[f,g]=sf(c.shape,d),v=f;if(l&&(v=sg(f,p)),m){let e=yH(n.texData.get(c.dataId).values,P(g),v,i.dtype);t=n.makeTensorInfo(v,i.dtype),n.texData.get(t.dataId).values=e}else t=function(e,t,a,n){let r=P(t),i=P(e.shape),s=wZ({inputs:{x:e},attrs:{shape:[i/r,r]},backend:n}),l=w0(s,e.dtype,"max",n),o=wZ({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),o}(c,g,v,n);return h&&n.disposeIntermediateTensorInfo(c),t}let kV=wH({opSnippet:wD+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+wO+`
  return result;
`,cpuKernelImpl:yj});class kB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,a=e.strideWidth,n=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=r-1-e.padInfo.top,l=i-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${r*i-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class kz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,a=e.strideHeight,n=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,l=e.effectiveFilterDepth,o=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=l-1-e.padInfo.front,u=o-1-e.padInfo.top,h=p-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${u}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${o};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${s}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${l*o*p-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${o} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let kP=wH({opSnippet:wD+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+wO+`
  return result;
`,cpuKernelImpl:yq});class kU{constructor(e,t,a){this.variableNames=["x"],this.outputShape=t.map((t,a)=>t[0]+e[a]+t[1]);let n=e.length,r=yi(n),i=t.map(e=>e[0]).join(","),s=t.map((t,a)=>t[0]+e[a]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),o=+("reflect"!==a);if(1===n){this.userCode=`
        int start = ${i};
        int end = ${s};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${o};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${o};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${s});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${o};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${o};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}class kW{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,a)=>t[0]+e[a]+t[1]);let n=e.length,r=yi(n),i=t.map(e=>e[0]).join(","),s=t.map((t,a)=>t[0]+e[a]).join(","),l=wh("rc",n),o=wh("source",n),p=`${l[n-1]} < ${this.outputShape[n-1]}`,d=1===n?"source":`vec2(${o.slice(-2).join()})`,u=+("reflect"!==a),h="";if(1===n){let e=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${u};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${u};
        }
        source -= start;
      `;h=`
        ${r} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${o.join()}), ${d});
        ${l[n-1]} += 1;
        if(${p}) {
          ${e}
          result[1] = getChannel(getX(${o.join()}), ${d});
        }
      `}else{let e=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${u}) +
                gte * ((end - 1) * 2 - source + ${u});
        source -= start;
      `;h=`
        ${r} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${o.join()}), ${d});
        ${l[n-1]} += 1;
        if(${p}) {
          ${e}
          result[1] = getChannel(getX(${o.join()}), ${d});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${e}
          result[2] = getChannel(getX(${o.join()}), ${d});
          ${l[n-1]} += 1;
          if(${p}) {
            ${e}
            result[3] = getChannel(getX(${o.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${s});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}}let kG=wH({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+wO+`
  return result;
`});class kH{constructor(e,t,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,a],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}let kj=wH({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),kq="return a - b;",kK=wH({opSnippet:kq,packedOpSnippet:kq,supportsComplex:!0,cpuKernelImpl:ws});function kX(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:i}=n,s=q([i],r.shape),l=kM({inputs:{x:r},backend:a,attrs:{reductionIndices:s,keepDims:!1}}),o=sg(l.shape,s),p=wZ({inputs:{x:l},backend:a,attrs:{shape:o}}),d=kK({inputs:{a:r,b:p},backend:a}),u=kr({inputs:{x:d},backend:a}),h=w3({inputs:{x:u},backend:a,attrs:{axis:s,keepDims:!1}}),m=wZ({inputs:{x:h},backend:a,attrs:{shape:o}}),c=kj({inputs:{a:u,b:m},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(m),c}let kY=ww+`
  return -x;
`,kJ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class kZ{constructor(e,t,a,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${a}),
                      float(index == coords.y)));
      }
    `}}function kQ(e){let{inputs:t,backend:a}=e,{x:n}=t;if("complex64"!==n.dtype)return ku({attrs:{shape:n.shape,dtype:n.dtype,value:"string"===n.dtype?"":0},backend:a});{let e=xT({inputs:{input:n},backend:a}),t=kQ({inputs:{x:e},backend:a}),r=xL({inputs:{input:n},backend:a}),i=kQ({inputs:{x:r},backend:a}),s=wV({inputs:{real:t,imag:i},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(i),s}}class k1{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,a)=>t[0]+e[a]+t[1]);let n=e.length,r=yi(n),i=t.map(e=>e[0]).join(","),s=t.map((t,a)=>t[0]+e[a]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(1===n){this.userCode=`
        int start = ${i};
        int end = ${s};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${s});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}class k0{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,a)=>t[0]+e[a]+t[1]);let n=e.length,r=yi(n),i=t.map(e=>e[0]).join(","),s=t.map((t,a)=>t[0]+e[a]).join(","),l=wh("rc",n),o=wh("source",n),p=`${l[n-1]} < ${this.outputShape[n-1]}`,d=1===n?"source":`vec2(${o.slice(-2).join()})`,u=[`${r} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${p}) {
      `,1===n?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,1===n?"":`  ${l[n-1]} += 1;
         if(${p}) {`],h=1===n?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",m="";for(let e=0,t=1===n?2:4;e<t;e++)m+=`
        ${u[e]}
        if (${h}) {
          result[${e}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${e}] = getChannel(getX(${o.join()}), ${d});
        }
      `;m+=1===n?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${s});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}let k2=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:i,constantValue:s}=n;if(0===P(r.shape))return ku({backend:a,attrs:{shape:i.map((e,t)=>e[0]+r.shape[t]+e[1]),value:s,dtype:r.dtype}});let l=ef.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new k0(r.shape,i,s):new k1(r.shape,i,s),o=[[s]];return a.runWebGLProgram(l,[r],r.dtype,o)},k4=wH({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+wO+`
  return result;
`}),k6=e=>{let{backend:t,attrs:a}=e,{start:n,stop:r,step:i,dtype:s}=a,l=y0(n,r,i,s);return t.makeTensorInfo([l.length],s,l)},k3=wG({opSnippet:"return 1.0 / x;"}),k9=wG({opSnippet:ww+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),k5=wG({opSnippet:ww+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`});class k8{constructor(e,t,a,n,r){this.variableNames=["A"],this.outputShape=[];let[i,s,l,o]=e;this.outputShape=[i,t,a,o];let p=[n&&t>1?s-1:s,n&&a>1?l-1:l],d=[n&&t>1?t-1:t,n&&a>1?a-1:a];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/d[0]},
          ${p[1]/d[1]});
      const vec2 inputShapeRC = vec2(${s}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class k7{constructor(e,t,a,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,s,l,o]=e;this.outputShape=[i,t,a,o];let p=[n&&t>1?s-1:s,n&&a>1?l-1:l],d=[n&&t>1?t-1:t,n&&a>1?a-1:a];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/d[0]},
          ${p[1]/d[1]},
          ${p[1]/d[1]});
      const vec3 inputShapeRC = vec3(${s}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${o-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}class Ne{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,r]=t,[,i,s]=e,l=[a&&i>1?n-1:n,a&&s>1?r-1:r],o=[a&&i>1?i-1:i,a&&s>1?s-1:s],p=l[0]/o[0],d=l[1]/o[1],u=1/p,h=1/d,m=2*Math.ceil(u)+2,c=2*Math.ceil(h)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${d});

        const float invHeightScale = float(${u});
        const float invWidthScale = float(${h});

        const int winHeight = int(${m});
        const int winWidth = int(${c});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${s}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class Nt{constructor(e,t,a,n,r){this.variableNames=["A"],this.outputShape=[];let[i,s,l,o]=e;this.outputShape=[i,t,a,o];let p=[n&&t>1?s-1:s,n&&a>1?l-1:l],d=[n&&t>1?t-1:t,n&&a>1?a-1:a];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/d[0]},
          ${p[1]/d[1]});
      const vec2 inputShapeRC = vec2(${s}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class Na{constructor(e,t,a,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,s,l,o]=e;this.outputShape=[i,t,a,o];let p=[n&&t>1?s-1:s,n&&a>1?l-1:l],d=[n&&t>1?t-1:t,n&&a>1?a-1:a];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/d[0]},
          ${p[1]/d[1]},
          ${p[1]/d[1]});
      const vec3 inputShapeRC = vec3(${s}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${o-1};
        bool hasNextRow = coords.z < ${a-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}class Nn{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,r]=t,[,i,s]=e,l=[a&&i>1?n-1:n,a&&s>1?r-1:r],o=[a&&i>1?i-1:i,a&&s>1?s-1:s],p=l[0]/o[0],d=l[1]/o[1],u=1/p,h=1/d,m=2*Math.ceil(u)+2,c=2*Math.ceil(h)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${d});

        const float invHeightScale = float(${u});
        const float invWidthScale = float(${h});

        const int winHeight = int(${m});
        const int winWidth = int(${c});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${s}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${o[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${o[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class Nr{constructor(e,t){this.variableNames=["x"];let a=e.length;if(a>4)throw Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=e,1===a){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=a=>-1!==t.indexOf(a)&&1!==e[a]?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,r=e.map((e,t)=>n(t)).join(","),i=yi(a);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}class Ni{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let a=e.length;if(a>4)throw Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=e;let n=wh("rc",a),r=`${n[a-1]} + 1 < ${this.outputShape[a-1]}`,i=`${n[a-2]} + 1 < ${this.outputShape[a-2]}`,s=yi(a);function l(a){let n=e.map((n,r)=>{var i,s;return i=r,s=a,-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - ${s[i]} - 1`:`${s[i]}`}),r=n.join(","),i=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${i}))`}1===a?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${r}){
            result.g = ${function(e){return e[a-1]="("+e[a-1]+" + 1)",l(e)}(n.slice())};
          }
          if(${i}) {
            result.b = ${function(e){return e[a-2]="("+e[a-2]+" + 1)",l(e)}(n.slice())};
            if(${r}) {
              result.a = ${function(e){return e[a-1]="("+e[a-1]+" + 1)",e[a-2]="("+e[a-2]+" + 1)",l(e)}(n.slice())};
            }
          }
          setOutput(result);
        }
    `}}class Ns{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let a=e[1],n=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${a}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let Nl=wG({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),No=wG({opSnippet:"return inversesqrt(x);",cpuKernelImpl:y2});class Np{constructor(e,t,a,n,r,i,s=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let o=yi(r.length),p=yi(i.length),d="";1===a?d="i":2===a&&(d="i, j");let u=`getIndices(${d})`,h="";1===n?h="i":2===n&&(h="i, coords[1]");let m=`getUpdates(${h})`,c="";l&&(c="coords[0], coords[1]");let f=`getDefaultValue(${c})`;this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}}class Nd{constructor(e,t,a,n,r,i,s=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let o=yi(r.length),p=yi(i.length),d="";1===a?d="i":2===a&&(d="i, j");let u=`getIndices(${d})`,h="";1===n?h="i":2===n&&(h="i, coords[1]");let m=`getUpdates(${h})`,c="";l&&(c="coords[0], coords[1]");let f=`getDefaultValue(${c})`;this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${p} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${u});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${m};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}}class Nu{constructor(e,t,a,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,a];let r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===ef.getNumber("WEBGL_VERSION")?"while (left < right) {":r;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===n?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}class Nh{constructor(e,t,a){let n,r;if(this.variableNames=["c","a","b"],this.outputShape=t,a>4)throw Error(`Where for rank ${a} is not yet supported`);if(1===a)r="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let n=0;n<t.length;n++)s.push(`${a[n]}`),n<e&&i.push(`${a[n]}`);n=i.join(),r=s.join()}let i=yi(a);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}let Nm=wG({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${od};
  float scale = ${ou};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),Nc=wG({opSnippet:wW+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:y6}),Nf=wG({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),Ng=wG({opSnippet:wW+`
  return sin(x);
`,packedOpSnippet:`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${wO}
  return result;
`}),Nv=wG({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),Nb=wG({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),Ny="return sqrt(x);",Nw=wG({opSnippet:Ny,packedOpSnippet:Ny,cpuKernelImpl:we}),Nx=wG({opSnippet:"return x * x;"}),Nk="return (a - b) * (a - b);",NN=wH({opSnippet:Nk,packedOpSnippet:Nk});class NI{constructor(e,t,a){this.variableNames=["x"],this.outputShape=a;let n=a.length,r=yi(a.length),i=yi(a.length),s="";if(1===n)s="coords * strides + begin";else{let e=0;s=a.map((t,n)=>(e++,1===a.length?`coords * strides[${n}] + begin[${n}]`:`coords[${e-1}] * strides[${n}] + begin[${n}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}}let NS=wG({opSnippet:"return tan(x);"}),NT=wG({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`});class NC{constructor(e,t){this.variableNames=["A"];let a=Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[n]*t[n];this.outputShape=a,this.rank=a.length;let n=yi(this.rank),r=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let t=0;t<e.length;t++)n.push(`imod(${a[t]}, ${e[t]})`);return n.join()}(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function N$(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:i}=n;if("string"===r.dtype||r.shape.length>5){let e=a.readSync(r.dataId),t="string"===r.dtype?e.map(e=>nr(e)):e,n=wl(rv(r.shape,r.dtype,t),i);return a.makeTensorInfo(n.shape,n.dtype,n.values)}let s=new NC(r.shape,i);return a.runWebGLProgram(s,[r],r.dtype)}class NE{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class N_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function NR(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function NA(e){let t=1;for(;t<e;)t*=2;return t}class ND{constructor(e,t,a,n,r,i){let s;switch(this.variableNames=["Image","Transforms"],this.outputShape=i,n){case"constant":default:s=1;break;case"reflect":s=2;break;case"wrap":s=3;break;case"nearest":s=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${s} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${s} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${s} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===a?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}class NF{constructor(e,t){this.variableNames=["x","segmentIds"];let a=e.windowSize,n=e.batchSize,r=e.inSize,i=e.numSegments,s=i*Math.ceil(r/a);this.outputShape=[n,s];let l=4*Math.floor(a/4),o=a%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%a>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let u="";r%a>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${u}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${l};
        if (${1===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${2===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${3===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(sumValue);
      }
    `}}for(let e of[{kernelName:az,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:i,bias:s,preluActivationWeights:l}=t,{transposeA:o,transposeB:p,activation:d,leakyreluAlpha:u}=n;return w5({a:r,b:i,transposeA:o,transposeB:p,backend:a,bias:s,preluActivationWeights:l,leakyreluAlpha:u,activation:d})}},{kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n}=e,{x:r}=a;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){let e=y3(n.texData.get(r.dataId).values);return n.makeTensorInfo(r.shape,r.dtype,e)}return t=ef.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new w$(r.shape,w8):new wy(r.shape,w8),n.runWebGLProgram(t,[r],r.dtype)}},{kernelName:eb,backendName:"webgl",kernelFunc:w7},{kernelName:ey,backendName:"webgl",kernelFunc:xe},{kernelName:"Add",backendName:"webgl",kernelFunc:xa},{kernelName:ew,backendName:"webgl",kernelFunc:function e(t){let{inputs:a,backend:n}=t;if(1===a.length)return wM({inputs:{x:a[0]},backend:n});if(a.length>ef.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),r=e({inputs:a.slice(0,t),backend:n}),i=e({inputs:a.slice(t),backend:n});return e({inputs:[r,i],backend:n})}let r=a.map(e=>e.dtype).reduce((e,t)=>ny(e,t)),i=a.map(e=>e.shape),s=ef.getBool("WEBGL_PACK")?new xr(a[0].shape,i):new xn(a[0].shape,i);return n.runWebGLProgram(s,a,r)}},{kernelName:"All",backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{axis:s,keepDims:l}=r,o=i.shape.length,p=q(s,i.shape),d=p,u=sb(d,o),h=i;null!=u&&(h=w9({inputs:{x:i},backend:n,attrs:{perm:u}}),d=sw(d.length,o)),sv("all",d,o);let[m,c]=sf(h.shape,d),f=wZ({inputs:{x:h},backend:n,attrs:{shape:[-1,P(c)]}}),g=w0(f,f.dtype,"all",n);return t=l?wZ({inputs:{x:g},backend:n,attrs:{shape:sg(m,p)}}):wZ({inputs:{x:g},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=u&&n.disposeIntermediateTensorInfo(h),t}},{kernelName:"Any",backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{axis:s,keepDims:l}=r,o=i.shape.length,p=q(s,i.shape),d=p,u=sb(d,o),h=i;null!=u&&(h=w9({inputs:{x:i},backend:n,attrs:{perm:u}}),d=sw(d.length,o)),sv("any",d,o);let[m,c]=sf(h.shape,d),f=wZ({inputs:{x:h},backend:n,attrs:{shape:[-1,P(c)]}}),g=w0(f,f.dtype,"any",n);return t=l?wZ({inputs:{x:g},backend:n,attrs:{shape:sg(m,p)}}):wZ({inputs:{x:g},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=u&&n.disposeIntermediateTensorInfo(h),t}},{kernelName:ex,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i}=n,s=q(i,r.shape),l=sb(s,r.shape.length),o=r,p=[];null!=l&&(p.push(o=w9({inputs:{x:r},backend:a,attrs:{perm:l}})),s=sw(s.length,o.shape.length)),sv("argMax",[s[0]],o.shape.length);let d=xl(a,o,s[0],"max");return p.forEach(e=>a.disposeIntermediateTensorInfo(e)),d}},{kernelName:ek,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i}=n,s=q(i,r.shape),l=sb(s,r.shape.length),o=r,p=[];null!=l&&(p.push(o=w9({inputs:{x:r},backend:a,attrs:{perm:l}})),s=sw(s.length,o.shape.length)),sv("argMin",[s[0]],o.shape.length);let d=xl(a,o,s[0],"min");return p.forEach(e=>a.disposeIntermediateTensorInfo(e)),d}},{kernelName:eN,backendName:"webgl",kernelFunc:xo},{kernelName:eI,backendName:"webgl",kernelFunc:xp},{kernelName:eS,backendName:"webgl",kernelFunc:xd},{kernelName:eC,backendName:"webgl",kernelFunc:xu},{kernelName:eT,backendName:"webgl",kernelFunc:xh},{kernelName:e$,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;bQ(r,"avgPool");let{filterSize:i,strides:s,pad:l,dimRoundingMode:o}=n;V(iD(s,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let p=iN(r.shape,i,s,1,l,o);if(1===p.filterWidth&&1===p.filterHeight&&U(p.inShape,p.outShape))return wM({inputs:{x:r},backend:a});let d=new xm(p,"avg",!1);return a.runWebGLProgram(d,[r],"float32")}},{kernelName:e_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:i,strides:s,pad:l,dimRoundingMode:o,dataFormat:p}=n,d=new xc(iI(r.shape,i,s,[1,1,1],l,o,p),"avg",!1);return a.runWebGLProgram(d,[r],"float32")}},{kernelName:eR,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i}=t,{filterSize:s,strides:l,pad:o,dimRoundingMode:p}=n,d=new xg(iI(i.shape,s,l,[1,1,1],o,p));return a.runWebGLProgram(d,[r],i.dtype)}},{kernelName:eE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i}=t;bQ([r,i],"avgPoolGrad");let{filterSize:s,strides:l,pad:o}=n,p=new xf(iN(i.shape,s,l,1,o));return a.runWebGLProgram(p,[r],i.dtype)}},{kernelName:eA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:i}=t,{transposeA:s,transposeB:l}=n;return w5({a:r,b:i,transposeA:s,transposeB:l,backend:a})}},{kernelName:tp,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,mean:r,variance:i,offset:s,scale:l}=e;V(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),V(null==s||r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),V(null==l||r.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:o}=a;null==o&&(o=.001);let p=[n,r,i],d=null;null!=s&&(d=s.shape,p.push(s));let u=null;null!=l&&(u=l.shape,p.push(l));let h=ef.getBool("WEBGL_PACK_NORMALIZATION")?new xb(n.shape,r.shape,i.shape,d,u,o):new xv(n.shape,r.shape,i.shape,d,u,o);return t.runWebGLProgram(h,p,p[0].dtype)}},{kernelName:eD,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:i,crops:s}=n;V(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let l=i.reduce((e,t)=>e*t),o=ot(r.shape,i,l),p=oa(o.length,i.length),d=on(r.shape,i,l),u=or(s,i.length),h=oi(d,s,i.length),m=[],c=wZ({inputs:{x:r},backend:a,attrs:{shape:o}}),f=w9({inputs:{x:c},backend:a,attrs:{perm:p}}),g=wZ({inputs:{x:f},backend:a,attrs:{shape:d}}),v=xk({inputs:{x:g},backend:a,attrs:{begin:u,size:h}});return m.push(c),m.push(f),m.push(g),m.forEach(e=>a.disposeIntermediateTensorInfo(e)),v}},{kernelName:eF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:i}=t,{size:s}=n,l=yC(a.readSync(r.dataId),a.readSync(i.dataId),i.dtype,i.shape,s);return a.makeTensorInfo([s],i.dtype,l)}},{kernelName:eO,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n}=e,{a:r,b:i}=a,s=ef.getBool("WEBGL_PACK_BINARY_OPERATIONS"),l=ef.getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,i])||1===l){let e=n.texData.get(r.dataId).values,t=n.texData.get(i.dataId).values,[a,s]=yE(r.shape,i.shape,e,t,r.dtype),l=n.makeTensorInfo(s,r.dtype);return n.texData.get(l.dataId).values=a,l}return t=s?new wL(xN,r.shape,i.shape,!1):new wF(xI,r.shape,i.shape),n.runWebGLProgram(t,[r,i],r.dtype)}},{kernelName:eL,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t,i=a.readSync(n.dataId),s=a.readSync(r.dataId),l=rG(Array.from(i),Array.from(s));return a.makeTensorInfo([l.length],"int32",Int32Array.from(l))}},{kernelName:eM,backendName:"webgl",kernelFunc:function e(t){let{inputs:a,backend:n,attrs:r}=t,{x:i}=a,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return wM({inputs:{x:i},backend:n});let t=sD(i.shape),a=e({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),r=wV({inputs:{real:a,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(a),r}if("complex64"===i.dtype){let t=xT({inputs:{input:i},backend:n}),a=e({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),a}if(!Y(i.dtype,s)){let e=wM({inputs:{x:i},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(n.shouldExecuteOnCPU([i])){let[e,t,a]=y_(n.texData.get(i.dataId).values,i.shape,i.dtype,s);return n.makeTensorInfo(e,t,a)}if("int32"===s){let e=new wy(i.shape,"return float(int(x));"),t=n.runWebGLProgram(e,[i],"int32");return{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}if("bool"===s){let e=n.makeTensorInfo([],"bool",X("bool",1)),t=xS({inputs:{a:i,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},{kernelName:eV,backendName:"webgl",kernelFunc:x$},{kernelName:eB,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{clipValueMin:s,clipValueMax:l}=r;return t=ef.getBool("WEBGL_PACK_CLIP")?new x_(i.shape):new xE(i.shape),n.runWebGLProgram(t,[i],i.dtype,[[s],[l]])}},{kernelName:ez,backendName:"webgl",kernelFunc:wV},{kernelName:eP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{x:n}=t,r=a.texData.get(n.dataId),i=new xR(n.shape),s=[xA(n,r.complexTensorInfos.real),xA(n,r.complexTensorInfos.imag)];return a.runWebGLProgram(i,s,s[0].dtype)}},{kernelName:eU,backendName:"webgl",kernelFunc:xM},{kernelName:eW,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i,filter:s}=a,{strides:l,pad:o,dataFormat:p,dilations:d,dimRoundingMode:u}=r,h=iO(p),m=iS(i.shape,s.shape,l,d,o,u,!1,h);if(1===m.filterHeight&&1===m.filterWidth&&1===m.dilationHeight&&1===m.dilationWidth&&1===m.strideHeight&&1===m.strideWidth&&("SAME"===m.padInfo.type||"VALID"===m.padInfo.type))t=xW({x:i,filter:s,convInfo:m,backend:n});else if(m.strideWidth<=2&&"channelsLast"===h&&ef.getBool("WEBGL_EXP_CONV")){let e=new xz(m),a=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];t=n.runWebGLProgram(e,[i,s],"float32",a)}else if(ef.getBool("WEBGL_CONV_IM2COL"))t=xG({x:i,filter:s,convInfo:m,backend:n});else{let e=new xV(m);t=n.runWebGLProgram(e,[i,s],"float32")}let c=wZ({inputs:{x:t},backend:n,attrs:{shape:m.outShape}});return n.disposeIntermediateTensorInfo(t),c}},{kernelName:eG,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:i}=t,{strides:s,pad:l,dataFormat:o,dimRoundingMode:p,filterShape:d}=n,u=iO(o),h=new xH(iS(r.shape,d,s,1,l,p,!1,u));return a.runWebGLProgram(h,[r,i],"float32")}},{kernelName:eH,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:i}=t,{inputShape:s,strides:l,pad:o,dataFormat:p,dimRoundingMode:d}=n,u=iO(p),h=iS(s,i.shape,l,1,o,d,!1,u);if(ef.getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===u){let e=[[h.strideHeight,h.strideWidth]],t=new xX(h);return a.runWebGLProgram(t,[r,i],"float32",e)}{let e=new xj(h);return a.runWebGLProgram(e,[r,i],"float32")}}},{kernelName:ej,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:i}=t,{strides:s,pad:l,dilations:o}=n,p=new xB(iT(r.shape,i.shape,s,o,l));return a.runWebGLProgram(p,[r,i],"float32")}},{kernelName:eq,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:i}=t,{strides:s,pad:l,filterShape:o}=n,p=new xq(iT(r.shape,o,s,1,l));return a.runWebGLProgram(p,[r,i],"float32")}},{kernelName:eK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:i}=t,{pad:s,strides:l,inputShape:o}=n,p=new xK(iT(o,i.shape,l,1,s));return a.runWebGLProgram(p,[r,i],"float32")}},{kernelName:"Cos",backendName:"webgl",kernelFunc:xY},{kernelName:eX,backendName:"webgl",kernelFunc:xJ},{kernelName:eZ,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:l,method:o,extrapolationValue:p}=n,d=new xZ(r.shape,i.shape,l,o,p);return a.runWebGLProgram(d,[r,i,s],"float32")}},{kernelName:eY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,exclusive:s,reverse:l}=n;return x2(S.Prod,r,a,i,s,l)}},{kernelName:eJ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:i,exclusive:s,reverse:l}=n;return x2(S.Sum,r,a,i,s,l)}},{kernelName:eQ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:i}=t,{size:s,binaryOutput:l}=n;if(1===r.shape.length){let e=yC(a.readSync(r.dataId),a.readSync(i.dataId),i.dtype,i.shape,s);return a.makeTensorInfo([s],i.dtype,e)}if(2===r.shape.length){let e=y$(a.bufferSync(r),a.bufferSync(i),s,l);return a.makeTensorInfo(e.shape,i.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},{kernelName:e1,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:i,dataFormat:s}=n,l=r.shape[0],o="NHWC"===s?r.shape[1]:r.shape[2],p="NHWC"===s?r.shape[2]:r.shape[3],d="NHWC"===s?r.shape[3]:r.shape[1],u=o*i,h=p*i,m=d/(i*i),c=new x4("NHWC"===s?[l,u,h,m]:[l,m,u,h],i,s);return a.runWebGLProgram(c,[r],r.dtype)}},{kernelName:e0,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i,filter:s}=a,{strides:l,pad:o,dilations:p,dimRoundingMode:d}=r,u=p;null==u&&(u=[1,1]),V(iD(l,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${u}'`);let h=iS(i.shape,s.shape,l,u,o,d,!0);t=ef.getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new x3(h):new x6(h);let m=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(t,[i,s],"float32",m)}},{kernelName:e2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:i}=t,{strides:s,dilations:l,pad:o,dimRoundingMode:p,filterShape:d}=n,u=new x9(iS(r.shape,d,s,l,o,p,!0));return a.runWebGLProgram(u,[r,i],"float32")}},{kernelName:e4,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:i}=t,{strides:s,dilations:l,pad:o,dimRoundingMode:p,inputShape:d}=n,u=new x5(iS(d,i.shape,s,l,o,p,!0));return a.runWebGLProgram(u,[r,i],"float32")}},{kernelName:e6,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{x:n}=t,r=[...n.shape,...n.shape],i=P(n.shape),s=wZ({inputs:{x:n},backend:a,attrs:{shape:[i]}}),l=new x8(i),o=a.runWebGLProgram(l,[s],s.dtype),p=wZ({inputs:{x:o},backend:a,attrs:{shape:r}});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),p}},{kernelName:e3,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i,filter:s}=a,{strides:l,pad:o,dilations:p}=r,d=ik(i.shape,s.shape,l,o,"NHWC",p),u=new x7(d),h=wZ({inputs:{x:t=n.runWebGLProgram(u,[i,s],"float32")},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(t),h}},{kernelName:te,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,{allDims:i,summedDims:s,idDims:l}=oC(r,t.length);oE(i.length,l,t);let{path:o,steps:p}=o_(s,l),d=p.length,u=null,h=i.length,m=[];for(let e=0;e<d;++e){for(let n of p[e]){let e,{permutationIndices:r,expandDims:i}=o$(h,l[n]);oR(r)?e=t[n]:(e=w9({inputs:{x:t[n]},backend:a,attrs:{perm:r}}),m.push(e));let s=e.shape.slice();for(let e=0;e<i.length;++e)s.splice(i[e],0,1);U(e.shape,s)||(e=wZ({inputs:{x:e},backend:a,attrs:{shape:s}}),m.push(e)),null===u?u=e:(u=wJ({inputs:{a:e,b:u},backend:a}),m.push(u))}e<d-1&&(o[e]>=0&&(u=w3({inputs:{x:u},backend:a,attrs:{axis:o[e]-(i.length-h),keepDims:!1}}),m.push(u)),h--)}for(let e of m)e!==u&&a.disposeIntermediateTensorInfo(e);return u}},{kernelName:"Elu",backendName:"webgl",kernelFunc:ke},{kernelName:tt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:a}=e,{dy:n,y:r}=t,i=ef.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL(kt,n.shape,r.shape):new wF("return (b >= 0.0) ? a : a * (b + 1.0);",n.shape,r.shape);return a.runWebGLProgram(i,[n,r],n.dtype)}},{kernelName:ta,backendName:"webgl",kernelFunc:ka},{kernelName:"Erf",backendName:"webgl",kernelFunc:kn},{kernelName:"Exp",backendName:"webgl",kernelFunc:kr},{kernelName:tn,backendName:"webgl",kernelFunc:ki},{kernelName:tr,backendName:"webgl",kernelFunc:kl},{kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{input:n}=t;return kp(n,!1,a)}},{kernelName:ti,backendName:"webgl",kernelFunc:ku},{kernelName:ts,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,n=new kh(a.shape);return t.runWebGLProgram(n,[a],a.dtype)}},{kernelName:tl,backendName:"webgl",kernelFunc:kc},{kernelName:to,backendName:"webgl",kernelFunc:kf},{kernelName:aV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{pixels:r}=t,{numChannels:i}=n,s="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[o,p]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[p,o],h=[p,o,i];if(l||s){let e=ef.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==d||e!==kb)&&(kb=e,d=document.createElement("canvas").getContext("2d",{willReadFrequently:kb})),d.canvas.width=o,d.canvas.height=p,d.drawImage(r,0,0,o,p),r=d.canvas}let m=a.makeTensorInfo(u,"int32");a.texData.get(m.dataId).usage=N.PIXELS,a.gpgpu.uploadPixelDataToTexture(a.getTexture(m.dataId),r);let c=ef.getBool("WEBGL_PACK")?new kv(h):new kg(h),f=a.runWebGLProgram(c,[m],"int32");return a.disposeData(m.dataId),f}},{kernelName:aP,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i,filter:s,bias:l,preluActivationWeights:o}=a,{strides:p,pad:d,dataFormat:u,dilations:h,dimRoundingMode:m,activation:c,leakyreluAlpha:f}=r,g=iO(u),v=iS(i.shape,s.shape,p,h,d,m,!1,g),b=[],y=null!=l,w=null!=o,x="leakyrelu"===c,k=()=>{let e=[i,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=wZ({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(y&&e.push(t(l,u)),w&&e.push(t(o,u)),x){let t=n.makeTensorInfo([],"float32",ne(f,"float32"));e.push(t),b.push(t)}return e};if(1===v.filterHeight&&1===v.filterWidth&&1===v.dilationHeight&&1===v.dilationWidth&&1===v.strideHeight&&1===v.strideWidth&&("SAME"===v.padInfo.type||"VALID"===v.padInfo.type))t=xW({x:i,filter:s,convInfo:v,backend:n,bias:l,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else if(v.strideWidth<=2&&"channelsLast"===g&&ef.getBool("WEBGL_EXP_CONV")){let e=new xz(v,y,c?wj(c,!0):null,w,x),a=[[v.padInfo.top,v.padInfo.left],[v.strideHeight,v.strideWidth],[v.dilationHeight,v.dilationWidth],[v.inHeight,v.inWidth]],r=k();t=n.runWebGLProgram(e,r,"float32",a)}else if(ef.getBool("WEBGL_CONV_IM2COL"))t=xG({x:i,filter:s,convInfo:v,backend:n,bias:l,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else{let e=new xV(v,y,c?wj(c,!1):null,w,x),a=k();t=n.runWebGLProgram(e,a,"float32")}let N=wZ({inputs:{x:t},backend:n,attrs:{shape:v.outShape}});return b.push(t),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}},{kernelName:aU,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i,filter:s,bias:l,preluActivationWeights:o}=a,{strides:p,pad:d,dilations:u,dimRoundingMode:h,activation:m,leakyreluAlpha:c}=r,f=[],g=u;null==g&&(g=[1,1]),V(iD(p,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${g}'`);let v=iS(i.shape,s.shape,p,g,d,h,!0),b=ef.getBool("WEBGL_PACK_DEPTHWISECONV")&&v.strideWidth<=2&&v.outChannels/v.inChannels==1,y=m?wj(m,b):null,w=[i,s],x=null!=l,k=null!=o,N="leakyrelu"===m;if(x&&w.push(l),k&&w.push(o),N){let e=n.makeTensorInfo([],"float32",ne(c,"float32"));w.push(e),f.push(e)}t=b?new x3(v,x,y,k,N):new x6(v,x,y,k,N);let I=[[v.padInfo.top,v.padInfo.left],[v.strideHeight,v.strideWidth],[v.dilationHeight,v.dilationWidth],[v.inHeight,v.inWidth]],S=n.runWebGLProgram(t,w,"float32",I);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}},{kernelName:tu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,i=r.shape,s=i[i.length-1],l=P(n.shape),[o,p,d,u]=os(n,r),h=wZ({inputs:{x:r},backend:a,attrs:{shape:[p,s]}}),m=wZ({inputs:{x:n},backend:a,attrs:{shape:[P(n.shape)/d,d]}});if(a.shouldExecuteOnCPU([n,r])||"string"===n.dtype){let e=yM(a.readSync(r.dataId),a.bufferSync(n),n.dtype,p,s,d,u,n.shape,l);return a.makeTensorInfo(o,n.dtype,e.values)}let c=new ky(s,u,[p,d],n.shape),f=a.runWebGLProgram(c,[m,h],m.dtype),g=wZ({inputs:{x:f},backend:a,attrs:{shape:o}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(f),g}},{kernelName:td,backendName:"webgl",kernelFunc:kx},{kernelName:th,backendName:"webgl",kernelFunc:kk},{kernelName:tm,backendName:"webgl",kernelFunc:kN},{kernelName:tc,backendName:"webgl",kernelFunc:wM},{kernelName:tf,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{input:n}=t;return kp(n,!0,a)}},{kernelName:tg,backendName:"webgl",kernelFunc:xL},{kernelName:tv,backendName:"webgl",kernelFunc:kI},{kernelName:tb,backendName:"webgl",kernelFunc:kS},{kernelName:ty,backendName:"webgl",kernelFunc:kT},{kernelName:tw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:i}=n,s=a.makeTensorInfo([],"float32",ne(i,"float32")),l=ef.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL(wz,r.shape,s.shape):new wF(wB,r.shape,s.shape),o=a.runWebGLProgram(l,[r,s],"float32");return a.disposeIntermediateTensorInfo(s),o}},{kernelName:tx,backendName:"webgl",kernelFunc:kC},{kernelName:tk,backendName:"webgl",kernelFunc:k$},{kernelName:tN,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:a}=e,{start:n,stop:r,num:i}=a,s=yW(n,r,i);return t.makeTensorInfo([s.length],"float32",s)}},{kernelName:"Log",backendName:"webgl",kernelFunc:kE},{kernelName:tI,backendName:"webgl",kernelFunc:k_},{kernelName:tS,backendName:"webgl",kernelFunc:kR},{kernelName:tT,backendName:"webgl",kernelFunc:kA},{kernelName:tC,backendName:"webgl",kernelFunc:kD},{kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:l,beta:o}=n,p=ef.getBool("WEBGL_PACK_NORMALIZATION")?new kO(r.shape,i,s,l,o):new kF(r.shape,i,s,l,o);return a.runWebGLProgram(p,[r],r.dtype)}},{kernelName:t$,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r,y:i,dy:s}=t,{depthRadius:l,bias:o,alpha:p,beta:d}=n,u=new kL(r.shape,l,o,p,d);return a.runWebGLProgram(u,[r,i,s],r.dtype)}},{kernelName:"Max",backendName:"webgl",kernelFunc:kM},{kernelName:tE,backendName:"webgl",kernelFunc:kV},{kernelName:t_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;bQ(r,"maxPool");let{filterSize:i,strides:s,pad:l,dimRoundingMode:o}=n;V(iD(s,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let p=iN(r.shape,i,s,1,l,o);if(1===p.filterWidth&&1===p.filterHeight&&U(p.inShape,p.outShape))return wM({inputs:{x:r},backend:a});let d=new xm(p,"max",!1);return a.runWebGLProgram(d,[r],r.dtype)}},{kernelName:tA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:i,strides:s,pad:l,dataFormat:o,dimRoundingMode:p}=n,d=new xc(iI(r.shape,i,s,[1,1,1],l,p,o),"max",!1);return a.runWebGLProgram(d,[r],r.dtype)}},{kernelName:tD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i}=t,{filterSize:s,strides:l,pad:o,dimRoundingMode:p}=n,d=iI(i.shape,s,l,[1,1,1],o,p),u=new xc(d,"max",!0),h=a.runWebGLProgram(u,[i],i.dtype),m=new kz(d),c=a.runWebGLProgram(m,[r,h],i.dtype);return a.disposeIntermediateTensorInfo(h),c}},{kernelName:tR,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:i,output:s}=t;bQ([i,s],"maxPoolGrad");let{filterSize:l,strides:o,pad:p,dimRoundingMode:d}=n,u=iN(i.shape,l,o,1,p,d),h=new xm(u,"max",!0),m=a.runWebGLProgram(h,[i],i.dtype),c=new kB(u),f=a.runWebGLProgram(c,[r,m],i.dtype);return a.disposeIntermediateTensorInfo(m),f}},{kernelName:tF,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:l}=t;V(4===n.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let o=[1,1];V(iD(i,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${o}'`);let p=iN(n.shape,r,i,o,s),[d,u]=function(e,t,a,n){let r=new xm(a,"max",!1),i=n.runWebGLProgram(r,[e],"float32");return r=new xm(a,"max",!0,!0,t),[i,n.runWebGLProgram(r,[e],"float32")]}(n,l,p,a);return[d,u]}},{kernelName:tO,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{keepDims:r,axis:i}=t,s=n.shape.length,l=q(i,n.shape),o=l,p=sb(o,s),d=null!=p,u=a.shouldExecuteOnCPU([n]),h=[],m=n;if(d){if(u){let e=a.texData.get(m.dataId).values,t=Array(s);for(let e=0;e<t.length;e++)t[e]=n.shape[p[e]];let r=wp(e,n.shape,n.dtype,p,t);m=a.makeTensorInfo(t,n.dtype),a.texData.get(m.dataId).values=r}else m=w6(n,p,a);h.push(m),o=sw(o.length,s)}sv("sum",o,s);let[c,f]=sf(m.shape,o),g=c;r&&(g=sg(c,l));let v=function(e,t,a,n){let r=P(t),i=P(e.shape),s=wZ({inputs:{x:e},attrs:{shape:[i/r,r]},backend:n}),l=w0(s,"float32","mean",n),o=wZ({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),o}(m,f,g,a);for(let e of h)a.disposeIntermediateTensorInfo(e);return v}},{kernelName:"Min",backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{axis:s,keepDims:l}=r,o=i.shape.length,p=q(s,i.shape),d=p,u=sb(d,o),h=i;null!=u&&(h=w9({inputs:{x:i},backend:n,attrs:{perm:u}}),d=sw(d.length,i.shape.length)),sv("min",d,o);let[m,c]=sf(h.shape,d),f=wZ({inputs:{x:h},backend:n,attrs:{shape:[-1,P(c)]}}),g=w0(f,f.dtype,"min",n);return t=l?wZ({inputs:{x:g},backend:n,attrs:{shape:sg(m,p)}}):wZ({inputs:{x:g},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=u&&n.disposeIntermediateTensorInfo(h),t}},{kernelName:tL,backendName:"webgl",kernelFunc:kP},{kernelName:tM,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n}=e,{paddings:r,mode:i}=a,s=ef.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kW(n.shape,r,i):new kU(n.shape,r,i);return t.runWebGLProgram(s,[n],n.dtype)}},{kernelName:"Mod",backendName:"webgl",kernelFunc:kG},{kernelName:tV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:l}=n,o=l?r:kX({inputs:{logits:r},backend:a,attrs:{dim:r.shape.length-1}}),p=new kH(o.shape[0],o.shape[1],i),d=a.runWebGLProgram(p,[o],"int32",[[s]]);return l||a.disposeIntermediateTensorInfo(o),d}},{kernelName:tB,backendName:"webgl",kernelFunc:wJ},{kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n}=e,{x:r}=a;if(n.shouldExecuteOnCPU([r])){let[e,t]=yX(n.texData.get(r.dataId).values,r.shape,r.dtype);return n.makeTensorInfo(t,r.dtype,e)}return t=ef.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new w$(r.shape,kJ):new wy(r.shape,kY),n.runWebGLProgram(t,[r],r.dtype)}},{kernelName:tP,backendName:"webgl",kernelFunc:function(e){var t,a;aW("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:n,backend:r,attrs:i}=e,{boxes:s,scores:l}=n,{maxOutputSize:o,iouThreshold:p,scoreThreshold:d}=i,{selectedIndices:u}=(t=r.readSync(s.dataId),a=r.readSync(l.dataId),lA(t,a,o,p,d,0));return r.makeTensorInfo([u.length],"int32",new Int32Array(u))}},{kernelName:tU,backendName:"webgl",kernelFunc:function(e){aW("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:l,scoreThreshold:o,padToMaxOutputSize:p}=n,{selectedIndices:d,validOutputs:u}=l_(a.readSync(r.dataId),a.readSync(i.dataId),s,l,o,p);return[a.makeTensorInfo([d.length],"int32",new Int32Array(d)),a.makeTensorInfo([],"int32",new Int32Array([u]))]}},{kernelName:tW,backendName:"webgl",kernelFunc:function(e){aW("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:l,scoreThreshold:o,softNmsSigma:p}=n,d=a.readSync(r.dataId),{selectedIndices:u,selectedScores:h}=lA(d,a.readSync(i.dataId),s,l,o,p,!0);return[a.makeTensorInfo([u.length],"int32",new Int32Array(u)),a.makeTensorInfo([h.length],"float32",new Float32Array(h))]}},{kernelName:tz,backendName:"webgl",kernelFunc:xS},{kernelName:tH,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:i,depth:s,onValue:l,offValue:o}=n,p=P(r.shape),d=new kZ(p,s,l,o),u=wZ({inputs:{x:r},backend:a,attrs:{shape:[p]}}),h=a.runWebGLProgram(d,[u],i);a.disposeIntermediateTensorInfo(u);let m=wZ({inputs:{x:h},backend:a,attrs:{shape:[...r.shape,s]}});return a.disposeIntermediateTensorInfo(h),m}},{kernelName:tG,backendName:"webgl",kernelFunc:function e(t){let{inputs:a,backend:n}=t,{x:r}=a;if("string"===r.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==r.dtype)return ku({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n});{let t=xT({inputs:{input:r},backend:n}),a=e({inputs:{x:t},backend:n}),i=xL({inputs:{input:r},backend:n}),s=kQ({inputs:{x:i},backend:n}),l=wV({inputs:{real:a,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),l}}},{kernelName:tj,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(1===t.length)return ki({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{B(i,e.shape,"All tensors passed to stack must have matching shapes"),V(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let l=[],o=xM({inputs:t.map(e=>{let t=ki({inputs:{input:e},backend:a,attrs:{dim:r}});return l.push(t),t}),backend:a,attrs:{axis:r}});return l.forEach(e=>a.disposeIntermediateTensorInfo(e)),o}},{kernelName:tq,backendName:"webgl",kernelFunc:k2},{kernelName:"Pow",backendName:"webgl",kernelFunc:k4},{kernelName:tK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t,i=ef.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL(wU,n.shape,r.shape):new wF(wP,n.shape,r.shape);return a.runWebGLProgram(i,[n,r],"float32")}},{kernelName:tX,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{axis:s,keepDims:l}=r,o=i.shape.length,p=[],d=q(s,i.shape),u=d,h=sb(u,o),m=i;if(null!=h&&(m=w9({inputs:{x:i},backend:n,attrs:{perm:h}}),u=sw(u.length,o),p.push(m)),sv("prod",u,o),n.shouldExecuteOnCPU([m])){let e=n.texData.get(m.dataId).values,{outVals:a,outShape:r,outDtype:i}=yJ(m.shape,m.dtype,e,u);t=n.makeTensorInfo(r,i,a)}else{let[e,a]=sf(m.shape,u),r=wZ({inputs:{x:m},backend:n,attrs:{shape:[-1,P(a)]}}),s=w0(r,nw(i.dtype),"prod",n);t=wZ({inputs:{x:s},backend:n,attrs:{shape:e}}),p.push(r),p.push(s)}if(l){p.push(t);let e=sg(t.shape,d);t=wZ({inputs:{x:t},backend:n,attrs:{shape:e}})}return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),t}},{kernelName:tY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:l}=n,o=r.map(e=>a.readSync(e.dataId)),p=r.map(e=>e.shape),d=a.readSync(i.dataId),u=a.readSync(s.dataId),[h,m,c]=yZ(o,p,d,i.shape,i.dtype,u,s.shape,l),f=h.map(e=>a.makeTensorInfo([e.length],"int32",e)),g=a.makeTensorInfo(c,i.dtype,m);return f.concat([g])}},{kernelName:tJ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{starts:n,limits:r,deltas:i}=t,s=a.readSync(n.dataId),l=a.readSync(r.dataId),o=a.readSync(i.dataId),[p,d]=yQ(s,n.shape,n.dtype,l,r.shape,o,i.shape);return[a.makeTensorInfo([p.length],"int32",p),a.makeTensorInfo([d.length],n.dtype,d)]}},{kernelName:tZ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:l}=t,{rowPartitionTypes:o}=n,p=a.readSync(r.dataId),d=a.readSync(i.dataId),u=a.readSync(s.dataId),h=l.map(e=>a.readSync(e.dataId)),m=l.map(e=>e.shape),[c,f]=y1(p,r.shape,d,i.shape,i.dtype,u,s.shape,h,m,o);return a.makeTensorInfo(c,i.dtype,f)}},{kernelName:tQ,backendName:"webgl",kernelFunc:k6},{kernelName:t1,backendName:"webgl",kernelFunc:xT},{kernelName:e7,backendName:"webgl",kernelFunc:kj},{kernelName:t0,backendName:"webgl",kernelFunc:k3},{kernelName:t2,backendName:"webgl",kernelFunc:k9},{kernelName:t8,backendName:"webgl",kernelFunc:k5},{kernelName:t4,backendName:"webgl",kernelFunc:wZ},{kernelName:t9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:l}=n,[o,p]=l,d=ef.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new k7(r.shape,o,p,i,s):new k8(r.shape,o,p,i,s);return a.runWebGLProgram(d,[r],"float32")}},{kernelName:t5,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:i}=t,{alignCorners:s}=n,l=new Ne(i.shape,r.shape,s);return a.runWebGLProgram(l,[i],i.dtype)}},{kernelName:t6,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:l}=n,[o,p]=l,d=ef.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Na(r.shape,o,p,i,s):new Nt(r.shape,o,p,i,s);return a.runWebGLProgram(d,[r],r.dtype)}},{kernelName:t3,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:i}=t,{alignCorners:s}=n,l=new Nn(i.shape,r.shape,s);return a.runWebGLProgram(l,[i],i.dtype)}},{kernelName:t7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:i}=n,s=r.shape.length,l=q(i,r.shape);if(0===s)return wM({inputs:{x:r},backend:a});let o=ef.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ni(r.shape,l):new Nr(r.shape,l);return a.runWebGLProgram(o,[r],r.dtype)}},{kernelName:aB,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:i,center:s}=t,l=new Ns(n.shape,i),[o,p]=oe(s,n.shape[1],n.shape[2]),d=[[o,p,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[n],n.dtype,d)}},{kernelName:ae,backendName:"webgl",kernelFunc:Nl},{kernelName:at,backendName:"webgl",kernelFunc:No},{kernelName:aa,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{indices:i,updates:s}=a,{shape:l}=r,{sliceRank:o,numUpdates:p,sliceSize:d,strides:u,outputSize:h}=op(s,i,l),m=[h/d,d];if(0===h)return n.makeTensorInfo(l,i.dtype);let c=wZ({inputs:{x:i},backend:n,attrs:{shape:[p,o]}}),f=wZ({inputs:{x:s},backend:n,attrs:{shape:[p,d]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));t=ef.getBool("WEBGL_PACK")?new Nd(p,o,c.shape.length,f.shape.length,u,m):new Np(p,o,c.shape.length,f.shape.length,u,m);let v=n.runWebGLProgram(t,[f,c,g],f.dtype),b=wZ({inputs:{x:v},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(g),b}},{kernelName:ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:i}=t,{side:s}=n,l=new Nu(r.shape[0],r.shape[1],i.shape[1],s),o=[[r.shape[1]]];return a.runWebGLProgram(l,[r,i],"int32",o)}},{kernelName:ai,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:i}=t,s=new Nh(n.shape.length,r.shape,r.shape.length);return a.runWebGLProgram(s,[n,r,i],ny(r.dtype,i.dtype))}},{kernelName:as,backendName:"webgl",kernelFunc:Nm},{kernelName:ad,backendName:"webgl",kernelFunc:Nc},{kernelName:ap,backendName:"webgl",kernelFunc:Nf},{kernelName:"Sin",backendName:"webgl",kernelFunc:Ng},{kernelName:ao,backendName:"webgl",kernelFunc:Nv},{kernelName:al,backendName:"webgl",kernelFunc:xk},{kernelName:af,backendName:"webgl",kernelFunc:kX},{kernelName:au,backendName:"webgl",kernelFunc:Nb},{kernelName:am,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:i,paddings:s}=n;V(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let l=i.reduce((e,t)=>e*t),o=[[0,0]];o.push(...s);for(let e=1+i.length;e<r.shape.length;++e)o.push([0,0]);let p=[],d=k2({inputs:{x:r},backend:a,attrs:{paddings:o,constantValue:0}}),u=ot(d.shape,i,l,!1),h=oa(u.length,i.length,!1),m=on(d.shape,i,l,!1),c=wZ({inputs:{x:d},backend:a,attrs:{shape:u}}),f=w9({inputs:{x:c},backend:a,attrs:{perm:h}}),g=wZ({inputs:{x:f},backend:a,attrs:{shape:m}});return p.push(d),p.push(c),p.push(f),p.forEach(e=>a.disposeIntermediateTensorInfo(e)),g}},{kernelName:ag,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{indices:n,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(2!==n.shape.length)throw Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(1!==r.shape.length)throw Error(`Values must be a vector, saw:
         ${r.shape}`);if(0!==s.shape.length)throw Error(`Default value must be a scalar, saw:
        ${s.shape}`);let l=a.readSync(n.dataId),o=a.readSync(r.dataId),p=a.readSync(i.dataId),d=a.readSync(s.dataId)[0],[u,h,m,c,f]=y5(l,n.shape,n.dtype,o,r.dtype,p,d);return[a.makeTensorInfo(h,n.dtype,u),a.makeTensorInfo([h[0]],r.dtype,m),a.makeTensorInfo([c.length],"bool",new Uint8Array(c.map(e=>Number(e)))),a.makeTensorInfo([f.length],n.dtype,new Int32Array(f))]}},{kernelName:av,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{inputIndices:n,inputShape:r,newShape:i}=t;if(2!==n.shape.length)throw Error(`Input indices should be a matrix but received shape ${n.shape}`);if(1!==r.shape.length)throw Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(a.readSync(r.dataId)),l=a.readSync(n.dataId),o=Array.from(a.readSync(i.dataId)),[p,d,u]=y8(l,n.shape,n.dtype,s,o);return[a.makeTensorInfo(d,n.dtype,p),a.makeTensorInfo([u.length],i.dtype,new Int32Array(u))]}},{kernelName:ab,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:i}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
              ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${i.shape}`);let s=a.readSync(n.dataId),l=a.readSync(r.dataId),o=a.readSync(i.dataId),[p,d]=y7(s,n.shape,n.dtype,l,o,!0);return a.makeTensorInfo(d,n.dtype,p)}},{kernelName:ay,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:i}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw Error(`Indices should be a vector but received shape
             ${r.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${i.shape}`);let s=a.readSync(n.dataId),l=a.readSync(r.dataId),o=a.readSync(i.dataId),[p,d]=y7(s,n.shape,n.dtype,l,o);return a.makeTensorInfo(d,n.dtype,p)}},{kernelName:aw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=t,{outputShape:l}=n,{sliceRank:o,numUpdates:p,sliceSize:d,strides:u,outputSize:h}=op(i,r,l);if("string"===i.dtype){let e=a.bufferSync(r),t=y4(e,a.bufferSync(i),l,h,d,p,o,u,nr(a.readSync(s.dataId)[0]),!1);return a.makeTensorInfo(l,t.dtype,t.values)}let m=new Np(p,o,r.shape.length,i.shape.length,u,[h,1],!1),c=a.runWebGLProgram(m,[i,r,s],i.dtype),f=wZ({inputs:{x:c},backend:a,attrs:{shape:l}});return a.disposeIntermediateTensorInfo(c),f}},{kernelName:ac,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=n,l=q(s,r.shape)[0],o=oA(r,i,l),p=Array(r.shape.length).fill(0),d=r.shape.slice();return o.map(e=>{let t=[...d];t[l]=e;let n=xk({inputs:{x:r},backend:a,attrs:{begin:p,size:t}});return p[l]+=e,n})}},{kernelName:ah,backendName:"webgl",kernelFunc:Nw},{kernelName:ak,backendName:"webgl",kernelFunc:Nx},{kernelName:ax,backendName:"webgl",kernelFunc:NN},{kernelName:aN,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;if("string"!==r.dtype)throw Error("Input must be of datatype string");let i=wt(oK(a.readSync(r.dataId)),"string",n);return a.makeTensorInfo(r.shape,"string",i)}},{kernelName:aM,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:a}){let{x:n}=e,r=ww+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new wy(n.shape,r);return a.runWebGLProgram(i,[n],n.dtype)}},{kernelName:aI,backendName:"webgl",kernelFunc:function(e){let t,{inputs:a,backend:n,attrs:r}=e,{x:i}=a,{begin:s,end:l,strides:o,beginMask:p,endMask:d,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:m}=r,{finalShapeSparse:c,finalShape:f,isIdentity:g,sliceDim0:v,isSimpleSlice:b,begin:y,end:w,strides:x}=iv(i.shape,s,l,o,p,d,u,h,m);if(g)t=wZ({inputs:{x:i},backend:n,attrs:{shape:f}});else if(v||b){V(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=ia(y,w,x),a=xk({inputs:{x:i},backend:n,attrs:{begin:y,size:e}});t=wZ({inputs:{x:a},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(a)}else if(n.shouldExecuteOnCPU([i])){let e=n.readSync(i.dataId),a=wa(c,rv(i.shape,i.dtype,e),x,y);t=n.makeTensorInfo(f,i.dtype,a.values)}else{let e=new NI(y,x,c);t=n.runWebGLProgram(e,[i],i.dtype)}let k=wZ({inputs:{x:t},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(t),k}},{kernelName:aS,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:l,padWidth:o,preserveShortSequences:p}=n,{data:d,dataSplits:u}=t,[h,m]=wn(a.readSync(d.dataId),a.readSync(u.dataId),r,i,s,l,o,p);return[a.makeTensorInfo([h.length],"string",h),a.makeTensorInfo(u.shape,"int32",m)]}},{kernelName:aT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{skipEmpty:r}=n,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(1!==i.shape.length)throw Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let[l,o,p]=wr(a.readSync(i.dataId),a.readSync(s.dataId)[0],r),d=o.length;return[a.makeTensorInfo([d,2],"int32",l),a.makeTensorInfo([d],"string",o),a.makeTensorInfo([2],"int32",new Int32Array(p))]}},{kernelName:aC,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{numBuckets:r}=n,{input:i}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(r<=0)throw Error("Number of buckets must be at least 1");let s=wi(a.readSync(i.dataId),r);return a.makeTensorInfo(i.shape,"int32",s)}},{kernelName:"Sub",backendName:"webgl",kernelFunc:kK},{kernelName:"Sum",backendName:"webgl",kernelFunc:w3},{kernelName:"Tan",backendName:"webgl",kernelFunc:NS},{kernelName:a$,backendName:"webgl",kernelFunc:NT},{kernelName:an,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{tensor:r,indices:i,updates:s}=t,{}=n,{sliceRank:l,numUpdates:o,sliceSize:p,strides:d,outputSize:u}=op(s,i,r.shape),h=[u/p,p];if(0===u)return a.makeTensorInfo(r.shape,i.dtype);let m=wZ({inputs:{x:i},backend:a,attrs:{shape:[o,l]}}),c=wZ({inputs:{x:s},backend:a,attrs:{shape:[o,p]}}),f=wZ({inputs:{x:r},backend:a,attrs:{shape:h}}),g=new Np(o,l,m.shape.length,c.shape.length,d,h,!1,!0),v=a.runWebGLProgram(g,[c,m,f],f.dtype),b=wZ({inputs:{x:v},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(v),b}},{kernelName:aE,backendName:"webgl",kernelFunc:N$},{kernelName:a_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:i,sorted:s}=n,l=ef.getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),o=ef.getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=r.shape,d=p[p.length-1];if(a.shouldExecuteOnCPU([r])||d<l||i>o){let[e,t]=wo(a.readSync(r.dataId),p,r.dtype,i,s);return[a.makeTensorInfo(e.shape,e.dtype,e.values),a.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===i)return p[p.length-1]=0,[a.makeTensorInfo(p,r.dtype,[]),a.makeTensorInfo(p,"int32",[])];if(1===d)return[r,ku({attrs:{shape:p,dtype:"int32",value:0},backend:a})];let u=a.texData.get(r.dataId),h=null!==u&&u.isPacked,m=h?a.unpackTensor(r):r,c=P(p)/d,f=wZ({inputs:{x:m},attrs:{shape:[c,d]},backend:a});h&&NR(a,m);let g=NA(i),v=NA(d),b=null,y=()=>null===b?[f,f]:[f,b],w=(e,t,n)=>{let r=y(),i=new NE(n),s=[[d],[+(null===b)],[Number.NEGATIVE_INFINITY],[e],[t]],l=b;b=a.runWebGLProgram(i,r,"int32",s),NR(a,l)};for(let e=1;e<g;e*=2){let t=2*e;for(let a=e;a>=1;a/=2)w(t,a,[c,v])}for(let e=v;e>g;e/=2){let t=y(),n=new N_([c,e/2]),r=[[d],[+(null===b)],[g]],i=b;b=a.runWebGLProgram(n,t,"int32",r),NR(a,i);let s=g/2,l=2*s;for(let e=s;e>=1;e/=2)w(l,e,b.shape)}let x=b;b=xk({inputs:{x:b},backend:a,attrs:{begin:0,size:[c,i]}}),NR(a,x);let k=kx({inputs:{x:f,indices:b},backend:a,attrs:{axis:1,batchDims:1}});NR(a,f);let N=p.slice(0,-1);N.push(i),x=b,b=wZ({inputs:{x:b},attrs:{shape:N},backend:a}),NR(a,x);let I=k;return k=wZ({inputs:{x:k},attrs:{shape:N},backend:a}),NR(a,I),[k,b]}},{kernelName:aR,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:l,fillValue:o,outputShape:p}=n,[d,u,h,m]=r.shape,[c,f]=null!=p?p:[u,h],g=new ND(u,h,s,l,o,[d,c,f,m]);return a.runWebGLProgram(g,[r,i],"float32")}},{kernelName:aA,backendName:"webgl",kernelFunc:w9},{kernelName:aD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:a,backend:n}=e,{axis:r}=a,{x:i}=t;bQ(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let{outputValues:s,outputShape:l,indices:o}=wd(n.readSync(i.dataId),r,i.shape,i.dtype);return[n.makeTensorInfo(l,i.dtype,s),n.makeTensorInfo([o.length],"int32",o)]}},{kernelName:aF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:i}=n;i<0&&(i+=r.shape.length);let s=r.shape.length,l=r.shape[i],o=Array(s-1),p=0;for(let e=0;e<s;e++)e!==i&&(o[p++]=r.shape[e]);let d=[],u=Array(s).fill(0),h=r.shape.slice();h[i]=1;let m=Array(l);for(let e=0;e<m.length;e++){u[i]=e;let t=xk({inputs:{x:r},backend:a,attrs:{begin:u,size:h}}),n=wZ({inputs:{x:t},backend:a,attrs:{shape:o}});m[e]=n,d.push(t)}return d.forEach(e=>a.disposeIntermediateTensorInfo(e)),m}},{kernelName:aO,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,segmentIds:i}=t,{numSegments:s}=n,l=r.shape.length,o=[],p=0,d=sb([0],l),u=r;null!=d&&(u=w9({inputs:{x:r},backend:a,attrs:{perm:d}}),o.push(u),p=sw(1,l)[0]);let h=oj(u.shape,p,s),m=P([u.shape[p]]),c=wZ({inputs:{x:u},backend:a,attrs:{shape:[-1,m]}});o.push(c);let f=nw(r.dtype),g=(e,t,n,r,i)=>{let s=e.shape[0],l=e.shape[1],p=oH(l,i),d=new NF({windowSize:p,inSize:l,batchSize:s,numSegments:i},t),u=a.compileAndRun(d,[e,n],r);if(o.push(u),u.shape[1]===i)return u;let h=k6({backend:a,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),m=N$({inputs:{x:h},backend:a,attrs:{reps:[l/p]}});return o.push(h),o.push(m),g(u,t,m,r,i)},v=wZ({inputs:{x:g(c,"unsortedSegmentSum",i,f,s)},backend:a,attrs:{shape:h}}),b=v;return null!=d&&(o.push(v),b=w9({inputs:{x:b},backend:a,attrs:{perm:sy(d)}})),o.forEach(e=>a.disposeIntermediateTensorInfo(e)),b}},{kernelName:aL,backendName:"webgl",kernelFunc:kQ}])aX(e)},3512:function(e,t,a){var n;!function(e,r,i){function s(e){var t=this;t.next=function(){var e,a,n=t.x,r=t.i;return e=n[r],e^=e>>>7,a=e^e<<24^((e=n[r+1&7])^e>>>10)^((e=n[r+3&7])^e>>>3)^((e=n[r+4&7])^e<<7),e=n[r+7&7],e^=e<<13,a^=e^e<<9,n[r]=a,t.i=r+1&7,a};var a,n=e,r=[];if(n===(0|n))r[0]=n;else for(a=0,n=""+n;a<n.length;++a)r[7&a]=r[7&a]<<15^n.charCodeAt(a)+r[a+1&7]<<13;for(;r.length<8;)r.push(0);for(a=0;a<8&&0===r[a];++a);for(8==a?r[7]=-1:r[a],t.x=r,t.i=0,a=256;a>0;--a)t.next()}function l(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var a=new s(e),n=t&&t.state,r=function(){return(a.next()>>>0)/0x100000000};return r.double=function(){do var e=((a.next()>>>11)+(a.next()>>>0)/0x100000000)/2097152;while(0===e);return e},r.int32=a.next,r.quick=r,n&&(n.x&&l(n,a),r.state=function(){return l(a,{})}),r}r&&r.exports?r.exports=o:a.amdD&&a.amdO?void 0===(n=(function(){return o}).call(t,a,t,r))||(r.exports=n):this.xorshift7=o}(0,e=a.nmd(e),a.amdD)},4940:(e,t,a)=>{var n=a(1021),r=a(6556),i=a(6422),s=a(3512),l=a(7394),o=a(6696),p=a(6164);p.alea=n,p.xor128=r,p.xorwow=i,p.xorshift7=s,p.xor4096=l,p.tychei=o,e.exports=p},6164:function(e,t,a){var n;!function(r,i,s){var l,o=s.pow(256,6),p=s.pow(2,52),d=2*p;function u(e,t,a){var n=[],u=c(function e(t,a){var n,r=[],i=typeof t;if(a&&"object"==i)for(n in t)try{r.push(e(t[n],a-1))}catch(e){}return r.length?r:"string"==i?t:t+"\0"}((t=!0==t?{entropy:!0}:t||{}).entropy?[e,f(i)]:null==e?function(){try{var e;return l&&(e=l.randomBytes)?e=e(256):(e=new Uint8Array(256),(r.crypto||r.msCrypto).getRandomValues(e)),f(e)}catch(e){var t=r.navigator,a=t&&t.plugins;return[+new Date,r,a,r.screen,f(i)]}}():e,3),n),g=new h(n),v=function(){for(var e=g.g(6),t=o,a=0;e<p;)e=(e+a)*256,t*=256,a=g.g(1);for(;e>=d;)e/=2,t/=2,a>>>=1;return(e+a)/t};return v.int32=function(){return 0|g.g(4)},v.quick=function(){return g.g(4)/0x100000000},v.double=v,c(f(g.S),i),(t.pass||a||function(e,t,a,n){return(n&&(n.S&&m(n,g),e.state=function(){return m(g,{})}),a)?(s.random=e,t):e})(v,u,"global"in t?t.global:this==s,t.state)}function h(e){var t,a=e.length,n=this,r=0,i=n.i=n.j=0,s=n.S=[];for(a||(e=[a++]);r<256;)s[r]=r++;for(r=0;r<256;r++)s[r]=s[i=255&i+e[r%a]+(t=s[r])],s[i]=t;(n.g=function(e){for(var t,a=0,r=n.i,i=n.j,s=n.S;e--;)t=s[r=255&r+1],a=256*a+s[255&(s[r]=s[i=255&i+t])+(s[i]=t)];return n.i=r,n.j=i,a})(256)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function c(e,t){for(var a,n=e+"",r=0;r<n.length;)t[255&r]=255&(a^=19*t[255&r])+n.charCodeAt(r++);return f(t)}function f(e){return String.fromCharCode.apply(0,e)}if(c(s.random(),i),e.exports){e.exports=u;try{l=a(5511)}catch(e){}}else void 0===(n=(function(){return u}).call(t,a,t,e))||(e.exports=n)}("undefined"!=typeof self?self:this,[],Math)},6243:e=>{e.exports=a;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function a(e,t,a){this.low=0|e,this.high=0|t,this.unsigned=!!a}function n(e){return!0===(e&&e.__isLong__)}a.prototype.__isLong__,Object.defineProperty(a.prototype,"__isLong__",{value:!0}),a.isLong=n;var r={},i={};function s(e,t){var a,n,s;if(t)return(e>>>=0,(s=0<=e&&e<256)&&(n=i[e]))?n:(a=o(e,(0|e)<0?-1:0,!0),s&&(i[e]=a),a);return(e|=0,(s=-128<=e&&e<128)&&(n=r[e]))?n:(a=o(e,e<0?-1:0,!1),s&&(r[e]=a),a)}function l(e,t){if(isNaN(e))return t?v:g;if(t){if(e<0)return v;if(e>=m)return k}else{if(e<=-c)return N;if(e+1>=c)return x}return e<0?l(-e,t).neg():o(e%h|0,e/h|0,t)}function o(e,t,n){return new a(e,t,n)}a.fromInt=s,a.fromNumber=l,a.fromBits=o;var p=Math.pow;function d(e,t,a){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(a=t,t=!1):t=!!t,(a=a||10)<2||36<a)throw RangeError("radix");if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return d(e.substring(1),t,a).neg();for(var n,r=l(p(a,8)),i=g,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+o),a);if(o<8){var h=l(p(a,o));i=i.mul(h).add(l(u))}else i=(i=i.mul(r)).add(l(u))}return i.unsigned=t,i}function u(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?d(e,t):o(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}a.fromString=d,a.fromValue=u;var h=0x100000000,m=0xffffffffffffffff,c=0x8000000000000000,f=s(0x1000000),g=s(0);a.ZERO=g;var v=s(0,!0);a.UZERO=v;var b=s(1);a.ONE=b;var y=s(1,!0);a.UONE=y;var w=s(-1);a.NEG_ONE=w;var x=o(-1,0x7fffffff,!1);a.MAX_VALUE=x;var k=o(-1,-1,!0);a.MAX_UNSIGNED_VALUE=k;var N=o(0,-0x80000000,!1);a.MIN_VALUE=N;var I=a.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(!this.eq(N))return"-"+this.neg().toString(e);else{var t=l(e),a=this.div(t),n=a.mul(t).sub(this);return a.toString(e)+n.toInt().toString(e)}for(var r=l(p(e,6),this.unsigned),i=this,s="";;){var o=i.div(r),d=(i.sub(o.mul(r)).toInt()>>>0).toString(e);if((i=o).isZero())return d+s;for(;d.length<6;)d="0"+d;s=""+d+s}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return(1&this.low)==1},I.isEven=function(){return(1&this.low)==0},I.equals=function(e){return n(e)||(e=u(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return 0>this.comp(e)},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return 0>=this.comp(e)},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(n(e)||(e=u(e)),this.eq(e))return 0;var t=this.isNegative(),a=e.isNegative();return t&&!a?-1:!t&&a?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(b)},I.neg=I.negate,I.add=function(e){n(e)||(e=u(e));var t,a,r=this.high>>>16,i=65535&this.high,s=this.low>>>16,l=65535&this.low,p=e.high>>>16,d=65535&e.high,h=e.low>>>16,m=65535&e.low,c=0,f=0;return t=0+((a=0+(l+m))>>>16),a&=65535,t+=s+h,f+=t>>>16,t&=65535,f+=i+d,c+=f>>>16,f&=65535,c+=r+p,o(t<<16|a,(c&=65535)<<16|f,this.unsigned)},I.subtract=function(e){return n(e)||(e=u(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(n(e)||(e=u(e)),t)return o(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(N))return e.isOdd()?N:g;if(e.eq(N))return this.isOdd()?N:g;if(this.isNegative())if(e.isNegative())return this.neg().mul(e.neg());else return this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(f)&&e.lt(f))return l(this.toNumber()*e.toNumber(),this.unsigned);var a,r,i=this.high>>>16,s=65535&this.high,p=this.low>>>16,d=65535&this.low,h=e.high>>>16,m=65535&e.high,c=e.low>>>16,v=65535&e.low,b=0,y=0;return a=0+((r=0+d*v)>>>16),r&=65535,a+=p*v,y+=a>>>16,a&=65535,a+=d*c,y+=a>>>16,a&=65535,y+=s*v,b+=y>>>16,y&=65535,y+=p*c,b+=y>>>16,y&=65535,y+=d*m,b+=y>>>16,y&=65535,b+=i*v+s*c+p*m+d*h,o(a<<16|r,(b&=65535)<<16|y,this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(n(e)||(e=u(e)),e.isZero())throw Error("division by zero");if(t){var a,r,i;return this.unsigned||-0x80000000!==this.high||-1!==e.low||-1!==e.high?o((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?v:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return v;if(e.gt(this.shru(1)))return y;i=v}else{if(this.eq(N))if(e.eq(b)||e.eq(w))return N;else return e.eq(N)?b:(a=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(r=this.sub(e.mul(a)),i=a.add(r.div(e)));if(e.eq(N))return this.unsigned?v:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(r=this;r.gte(e);){for(var s=Math.ceil(Math.log(a=Math.max(1,Math.floor(r.toNumber()/e.toNumber())))/Math.LN2),d=s<=48?1:p(2,s-48),h=l(a),m=h.mul(e);m.isNegative()||m.gt(r);)a-=d,m=(h=l(a,this.unsigned)).mul(e);h.isZero()&&(h=b),i=i.add(h),r=r.sub(m)}return i},I.div=I.divide,I.modulo=function(e){return(n(e)||(e=u(e)),t)?o((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return o(~this.low,~this.high,this.unsigned)},I.and=function(e){return n(e)||(e=u(e)),o(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return n(e)||(e=u(e)),o(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return n(e)||(e=u(e)),o(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return(n(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?o(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):o(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return(n(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?o(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):o(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(n(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?o(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?o(t,0,this.unsigned):o(t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?o(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:o(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},a.fromBytes=function(e,t,n){return n?a.fromBytesLE(e,t):a.fromBytesBE(e,t)},a.fromBytesLE=function(e,t){return new a(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},a.fromBytesBE=function(e,t){return new a(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6422:function(e,t,a){var n;!function(e,r,i){function s(e){var t=this,a="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:a+=e;for(var n=0;n<a.length+64;n++)t.x^=a.charCodeAt(n),n==a.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function l(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var a=new s(e),n=t&&t.state,r=function(){return(a.next()>>>0)/0x100000000};return r.double=function(){do var e=((a.next()>>>11)+(a.next()>>>0)/0x100000000)/2097152;while(0===e);return e},r.int32=a.next,r.quick=r,n&&("object"==typeof n&&l(n,a),r.state=function(){return l(a,{})}),r}r&&r.exports?r.exports=o:a.amdD&&a.amdO?void 0===(n=(function(){return o}).call(t,a,t,r))||(r.exports=n):this.xorwow=o}(0,e=a.nmd(e),a.amdD)},6556:function(e,t,a){var n;!function(e,r,i){function s(e){var t=this,a="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:a+=e;for(var n=0;n<a.length+64;n++)t.x^=a.charCodeAt(n),t.next()}function l(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var a=new s(e),n=t&&t.state,r=function(){return(a.next()>>>0)/0x100000000};return r.double=function(){do var e=((a.next()>>>11)+(a.next()>>>0)/0x100000000)/2097152;while(0===e);return e},r.int32=a.next,r.quick=r,n&&("object"==typeof n&&l(n,a),r.state=function(){return l(a,{})}),r}r&&r.exports?r.exports=o:a.amdD&&a.amdO?void 0===(n=(function(){return o}).call(t,a,t,r))||(r.exports=n):this.xor128=o}(0,e=a.nmd(e),a.amdD)},6696:function(e,t,a){var n;!function(e,r,i){function s(e){var t=this,a="";t.next=function(){var e=t.b,a=t.c,n=t.d,r=t.a;return e=e<<25^e>>>7^a,a=a-n|0,n=n<<24^n>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^a,t.c=a=a-n|0,t.d=n<<16^a>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-0x61c88647,t.d=0x517cc1b7,e===Math.floor(e)?(t.a=e/0x100000000|0,t.b=0|e):a+=e;for(var n=0;n<a.length+20;n++)t.b^=a.charCodeAt(n),t.next()}function l(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var a=new s(e),n=t&&t.state,r=function(){return(a.next()>>>0)/0x100000000};return r.double=function(){do var e=((a.next()>>>11)+(a.next()>>>0)/0x100000000)/2097152;while(0===e);return e},r.int32=a.next,r.quick=r,n&&("object"==typeof n&&l(n,a),r.state=function(){return l(a,{})}),r}r&&r.exports?r.exports=o:a.amdD&&a.amdO?void 0===(n=(function(){return o}).call(t,a,t,r))||(r.exports=n):this.tychei=o}(0,e=a.nmd(e),a.amdD)},6976:(e,t,a)=>{"use strict";let n;a.r(t),a.d(t,{FetchError:()=>c,Headers:()=>_,Request:()=>H,Response:()=>M,default:()=>Z});var r=a(7910),i=a(1630),s=a(9551),l=a(7192),o=a(5591),p=a(4075);let d=r.Readable,u=Symbol("buffer"),h=Symbol("type");class m{constructor(){this[h]="";let e=arguments[0],t=arguments[1],a=[];if(e){let t=Number(e.length);for(let n=0;n<t;n++){let t,r=e[n];(t=r instanceof Buffer?r:ArrayBuffer.isView(r)?Buffer.from(r.buffer,r.byteOffset,r.byteLength):r instanceof ArrayBuffer?Buffer.from(r):r instanceof m?r[u]:Buffer.from("string"==typeof r?r:String(r))).length,a.push(t)}}this[u]=Buffer.concat(a);let n=t&&void 0!==t.type&&String(t.type).toLowerCase();n&&!/[^\u0020-\u007E]/.test(n)&&(this[h]=n)}get size(){return this[u].length}get type(){return this[h]}text(){return Promise.resolve(this[u].toString())}arrayBuffer(){let e=this[u];return Promise.resolve(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength))}stream(){let e=new d;return e._read=function(){},e.push(this[u]),e.push(null),e}toString(){return"[object Blob]"}slice(){let e,t,a=this.size,n=arguments[0],r=arguments[1];e=void 0===n?0:n<0?Math.max(a+n,0):Math.min(n,a);let i=Math.max((void 0===r?a:r<0?Math.max(a+r,0):Math.min(r,a))-e,0),s=this[u].slice(e,e+i),l=new m([],{type:arguments[2]});return l[u]=s,l}}function c(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(m.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(m.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),c.prototype=Object.create(Error.prototype),c.prototype.constructor=c,c.prototype.name="FetchError";try{n=require("encoding").convert}catch(e){}let f=Symbol("Body internals"),g=r.PassThrough;function v(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=a.size,i=a.timeout;null==e?e=null:y(e)?e=Buffer.from(e.toString()):w(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof r||(e=Buffer.from(String(e)))),this[f]={body:e,disturbed:!1,error:null},this.size=void 0===n?0:n,this.timeout=void 0===i?0:i,e instanceof r&&e.on("error",function(e){let a="AbortError"===e.name?e:new c(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[f].error=a})}function b(){var e=this;if(this[f].disturbed)return v.Promise.reject(TypeError(`body used already for: ${this.url}`));if(this[f].disturbed=!0,this[f].error)return v.Promise.reject(this[f].error);let t=this.body;if(null===t)return v.Promise.resolve(Buffer.alloc(0));if(w(t)&&(t=t.stream()),Buffer.isBuffer(t))return v.Promise.resolve(t);if(!(t instanceof r))return v.Promise.resolve(Buffer.alloc(0));let a=[],n=0,i=!1;return new v.Promise(function(r,s){let l;e.timeout&&(l=setTimeout(function(){i=!0,s(new c(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),t.on("error",function(t){"AbortError"===t.name?(i=!0,s(t)):s(new c(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}),t.on("data",function(t){if(!i&&null!==t){if(e.size&&n+t.length>e.size){i=!0,s(new c(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}n+=t.length,a.push(t)}}),t.on("end",function(){if(!i){clearTimeout(l);try{r(Buffer.concat(a,n))}catch(t){s(new c(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}})})}function y(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function w(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function x(e){let t,a,n=e.body;if(e.bodyUsed)throw Error("cannot clone body after it is used");return n instanceof r&&"function"!=typeof n.getBoundary&&(t=new g,a=new g,n.pipe(t),n.pipe(a),e[f].body=t,n=a),n}function k(e){if(null===e)return null;if("string"==typeof e)return"text/plain;charset=UTF-8";if(y(e))return"application/x-www-form-urlencoded;charset=UTF-8";if(w(e))return e.type||null;if(Buffer.isBuffer(e))return null;else if("[object ArrayBuffer]"===Object.prototype.toString.call(e))return null;else if(ArrayBuffer.isView(e))return null;else if("function"==typeof e.getBoundary)return`multipart/form-data;boundary=${e.getBoundary()}`;else if(e instanceof r)return null;else return"text/plain;charset=UTF-8"}function N(e){let t=e.body;return null===t?0:w(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync?t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength()?t.getLengthSync():null:null}v.prototype={get body(){return this[f].body},get bodyUsed(){return this[f].disturbed},arrayBuffer(){return b.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return b.call(this).then(function(t){return Object.assign(new m([],{type:e.toLowerCase()}),{[u]:t})})},json(){var e=this;return b.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(t){return v.Promise.reject(new c(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return b.call(this).then(function(e){return e.toString()})},buffer(){return b.call(this)},textConverted(){var e=this;return b.call(this).then(function(t){return function(e,t){let a,r;if("function"!=typeof n)throw Error("The package `encoding` must be installed to use the textConverted() function");let i=t.get("content-type"),s="utf-8";return i&&(a=/charset=([^;]*)/i.exec(i)),r=e.slice(0,1024).toString(),!a&&r&&(a=/<meta.+?charset=(['"])(.+?)\1/i.exec(r)),!a&&r&&(!(a=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(r))&&(a=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(r))&&a.pop(),a&&(a=/charset=(.*)/i.exec(a.pop()))),!a&&r&&(a=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(r)),a&&("gb2312"===(s=a.pop())||"gbk"===s)&&(s="gb18030"),n(e,"UTF-8",s).toString()}(t,e.headers)})}},Object.defineProperties(v.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),v.mixIn=function(e){for(let t of Object.getOwnPropertyNames(v.prototype))if(!(t in e)){let a=Object.getOwnPropertyDescriptor(v.prototype,t);Object.defineProperty(e,t,a)}},v.Promise=global.Promise;let I=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,S=/[^\t\x20-\x7e\x80-\xff]/;function T(e){if(e=`${e}`,I.test(e)||""===e)throw TypeError(`${e} is not a legal HTTP header name`)}function C(e){if(e=`${e}`,S.test(e))throw TypeError(`${e} is not a legal HTTP header value`)}function $(e,t){for(let a in t=t.toLowerCase(),e)if(a.toLowerCase()===t)return a}let E=Symbol("map");class _{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[E]=Object.create(null),e instanceof _){let t=e.raw();for(let e of Object.keys(t))for(let a of t[e])this.append(e,a);return}if(null==e);else if("object"==typeof e){let t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw TypeError("Header pairs must be iterable");let a=[];for(let t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw TypeError("Each header pair must be iterable");a.push(Array.from(t))}for(let e of a){if(2!==e.length)throw TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(let t of Object.keys(e)){let a=e[t];this.append(t,a)}}else throw TypeError("Provided initializer must be an object")}get(e){T(e=`${e}`);let t=$(this[E],e);return void 0===t?null:this[E][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,a=R(this),n=0;for(;n<a.length;){var r=a[n];let i=r[0],s=r[1];e.call(t,s,i,this),a=R(this),n++}}set(e,t){e=`${e}`,t=`${t}`,T(e),C(t);let a=$(this[E],e);this[E][void 0!==a?a:e]=[t]}append(e,t){e=`${e}`,t=`${t}`,T(e),C(t);let a=$(this[E],e);void 0!==a?this[E][a].push(t):this[E][e]=[t]}has(e){return T(e=`${e}`),void 0!==$(this[E],e)}delete(e){T(e=`${e}`);let t=$(this[E],e);void 0!==t&&delete this[E][t]}raw(){return this[E]}keys(){return D(this,"key")}values(){return D(this,"value")}[Symbol.iterator](){return D(this,"key+value")}}function R(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[E]).sort().map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[E][t].join(", ")}:function(t){return[t.toLowerCase(),e[E][t].join(", ")]})}_.prototype.entries=_.prototype[Symbol.iterator],Object.defineProperty(_.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(_.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});let A=Symbol("internal");function D(e,t){let a=Object.create(F);return a[A]={target:e,kind:t,index:0},a}let F=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==F)throw TypeError("Value of `this` is not a HeadersIterator");var e=this[A];let t=e.target,a=e.kind,n=e.index,r=R(t,a);return n>=r.length?{value:void 0,done:!0}:(this[A].index=n+1,{value:r[n],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(F,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});let O=Symbol("Response internals"),L=i.STATUS_CODES;class M{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};v.call(this,e,t);let a=t.status||200,n=new _(t.headers);if(null!=e&&!n.has("Content-Type")){let t=k(e);t&&n.append("Content-Type",t)}this[O]={url:t.url,status:a,statusText:t.statusText||L[a],headers:n,counter:t.counter}}get url(){return this[O].url||""}get status(){return this[O].status}get ok(){return this[O].status>=200&&this[O].status<300}get redirected(){return this[O].counter>0}get statusText(){return this[O].statusText}get headers(){return this[O].headers}clone(){return new M(x(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}v.mixIn(M.prototype),Object.defineProperties(M.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(M.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});let V=Symbol("Request internals"),B=s.URL||l.URL,z=s.parse,P=s.format;function U(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new B(e).toString()),z(e)}let W="destroy"in r.Readable.prototype;function G(e){return"object"==typeof e&&"object"==typeof e[V]}class H{constructor(e){let t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};G(e)?t=U(e.url):(t=e&&e.href?U(e.href):U(`${e}`),e={});let n=a.method||e.method||"GET";if(n=n.toUpperCase(),(null!=a.body||G(e)&&null!==e.body)&&("GET"===n||"HEAD"===n))throw TypeError("Request with GET/HEAD method cannot have body");let r=null!=a.body?a.body:G(e)&&null!==e.body?x(e):null;v.call(this,r,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});let i=new _(a.headers||e.headers||{});if(null!=r&&!i.has("Content-Type")){let e=k(r);e&&i.append("Content-Type",e)}let s=G(e)?e.signal:null;if("signal"in a&&(s=a.signal),null!=s&&!function(e){let t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!!(t&&"AbortSignal"===t.constructor.name)}(s))throw TypeError("Expected signal to be an instanceof AbortSignal");this[V]={method:n,redirect:a.redirect||e.redirect||"follow",headers:i,parsedURL:t,signal:s},this.follow=void 0!==a.follow?a.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==a.compress?a.compress:void 0===e.compress||e.compress,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[V].method}get url(){return P(this[V].parsedURL)}get headers(){return this[V].headers}get redirect(){return this[V].redirect}get signal(){return this[V].signal}clone(){return new H(this)}}function j(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}v.mixIn(H.prototype),Object.defineProperty(H.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(H.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),j.prototype=Object.create(Error.prototype),j.prototype.constructor=j,j.prototype.name="AbortError";let q=s.URL||l.URL,K=r.PassThrough,X=function(e,t){let a=new q(t).hostname,n=new q(e).hostname;return a===n||"."===a[a.length-n.length-1]&&a.endsWith(n)};function Y(e,t){if(!Y.Promise)throw Error("native promise missing, set fetch.Promise to your favorite alternative");return v.Promise=Y.Promise,new Y.Promise(function(a,n){var s,l;let d,u,h=new H(e,t),m=function(e){let t=e[V].parsedURL,a=new _(e[V].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof r.Readable&&!W)throw Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let n=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(n="0"),null!=e.body){let t=N(e);"number"==typeof t&&(n=String(t))}n&&a.set("Content-Length",n),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(t)),Object.assign({},t,{method:e.method,headers:function(e){let t=Object.assign({__proto__:null},e[E]),a=$(e[E],"Host");return void 0!==a&&(t[a]=t[a][0]),t}(a),agent:i})}(h),f=("https:"===m.protocol?o:i).request,g=h.signal,v=null,b=function(){let e=new j("The user aborted a request.");n(e),h.body&&h.body instanceof r.Readable&&J(h.body,e),v&&v.body&&v.body.emit("error",e)};if(g&&g.aborted)return void b();let y=function(){b(),k()},x=f(m);function k(){x.abort(),g&&g.removeEventListener("abort",y),clearTimeout(d)}g&&g.addEventListener("abort",y),h.timeout&&x.once("socket",function(e){d=setTimeout(function(){n(new c(`network timeout at: ${h.url}`,"request-timeout")),k()},h.timeout)}),x.on("error",function(e){n(new c(`request to ${h.url} failed, reason: ${e.message}`,"system",e)),v&&v.body&&J(v.body,e),k()}),s=x,l=function(e){(!g||!g.aborted)&&v&&v.body&&J(v.body,e)},s.on("socket",function(e){u=e}),s.on("response",function(e){let t=e.headers;"chunked"!==t["transfer-encoding"]||t["content-length"]||e.once("close",function(e){if(u&&u.listenerCount("data")>0&&!e){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",l(e)}})}),14>parseInt(process.version.substring(1))&&x.on("socket",function(e){e.addListener("close",function(t){let a=e.listenerCount("data")>0;if(v&&a&&!t&&!(g&&g.aborted)){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",v.body.emit("error",e)}})}),x.on("response",function(e){clearTimeout(d);let t=function(e){let t=new _;for(let a of Object.keys(e))if(!I.test(a))if(Array.isArray(e[a]))for(let n of e[a])S.test(n)||(void 0===t[E][a]?t[E][a]=[n]:t[E][a].push(n));else S.test(e[a])||(t[E][a]=[e[a]]);return t}(e.headers);if(Y.isRedirect(e.statusCode)){let i=t.get("Location"),s=null;try{s=null===i?null:new q(i,h.url).toString()}catch(e){if("manual"!==h.redirect){n(new c(`uri requested responds with an invalid redirect URL: ${i}`,"invalid-redirect")),k();return}}switch(h.redirect){case"error":n(new c(`uri requested responds with a redirect, redirect mode is set to error: ${h.url}`,"no-redirect")),k();return;case"manual":if(null!==s)try{t.set("Location",s)}catch(e){n(e)}break;case"follow":var r;if(null===s)break;if(h.counter>=h.follow){n(new c(`maximum redirect reached at: ${h.url}`,"max-redirect")),k();return}let l={headers:new _(h.headers),follow:h.follow,counter:h.counter+1,agent:h.agent,compress:h.compress,method:h.method,body:h.body,signal:h.signal,timeout:h.timeout,size:h.size};if(!X(h.url,s)||(r=h.url,new q(s).protocol!==new q(r).protocol))for(let e of["authorization","www-authenticate","cookie","cookie2"])l.headers.delete(e);if(303!==e.statusCode&&h.body&&null===N(h)){n(new c("Cannot follow redirect with body being a readable stream","unsupported-redirect")),k();return}(303===e.statusCode||(301===e.statusCode||302===e.statusCode)&&"POST"===h.method)&&(l.method="GET",l.body=void 0,l.headers.delete("content-length")),a(Y(new H(s,l))),k();return}}e.once("end",function(){g&&g.removeEventListener("abort",y)});let i=e.pipe(new K),s={url:h.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:h.size,timeout:h.timeout,counter:h.counter},l=t.get("Content-Encoding");if(!h.compress||"HEAD"===h.method||null===l||204===e.statusCode||304===e.statusCode)return void a(v=new M(i,s));let o={flush:p.Z_SYNC_FLUSH,finishFlush:p.Z_SYNC_FLUSH};if("gzip"==l||"x-gzip"==l)return void a(v=new M(i=i.pipe(p.createGunzip(o)),s));if("deflate"==l||"x-deflate"==l){let t=e.pipe(new K);t.once("data",function(e){a(v=new M(i=(15&e[0])==8?i.pipe(p.createInflate()):i.pipe(p.createInflateRaw()),s))}),t.on("end",function(){v||a(v=new M(i,s))});return}if("br"==l&&"function"==typeof p.createBrotliDecompress)return void a(v=new M(i=i.pipe(p.createBrotliDecompress()),s));a(v=new M(i,s))});let T=h.body;null===T?x.end():w(T)?T.stream().pipe(x):Buffer.isBuffer(T)?(x.write(T),x.end()):T.pipe(x)})}function J(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}Y.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},Y.Promise=global.Promise;let Z=Y},7143:e=>{"use strict";var t={};function a(e,t){!t.unsigned&&--e;let a=t.unsigned?0:-Math.pow(2,e),n=Math.pow(2,e)-1,r=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),i=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,s){s||(s={});let l=+e;if(s.enforceRange){if(!Number.isFinite(l))throw TypeError("Argument is not a finite number");if((l=(l<0?-1:1)*Math.floor(Math.abs(l)))<a||l>n)throw TypeError("Argument is not in byte range");return l}if(!isNaN(l)&&s.clamp){var o;return(l=(o=l)%1==.5&&(1&o)==0?Math.floor(o):Math.round(o))<a&&(l=a),l>n&&(l=n),l}if(!Number.isFinite(l)||0===l)return 0;if(l=(l<0?-1:1)*Math.floor(Math.abs(l))%r,!t.unsigned&&l>=i)return l-r;if(t.unsigned){if(l<0)l+=r;else if(-0===l)return 0}return l}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=a(8,{unsigned:!1}),t.octet=a(8,{unsigned:!0}),t.short=a(16,{unsigned:!1}),t["unsigned short"]=a(16,{unsigned:!0}),t.long=a(32,{unsigned:!1}),t["unsigned long"]=a(32,{unsigned:!0}),t["long long"]=a(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=a(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){let t=+e;if(!Number.isFinite(t))throw TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){let t=+e;if(isNaN(t))throw TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return(t||(t={}),t.treatNullAsEmptyString&&null===e)?"":String(e)},t.ByteString=function(e,t){let a,n=String(e);for(let e=0;void 0!==(a=n.codePointAt(e));++e)if(a>255)throw TypeError("Argument is not a valid bytestring");return n},t.USVString=function(e){let t=String(e),a=t.length,n=[];for(let e=0;e<a;++e){let r=t.charCodeAt(e);if(r<55296||r>57343)n.push(String.fromCodePoint(r));else if(56320<=r&&r<=57343)n.push(String.fromCodePoint(65533));else if(e===a-1)n.push(String.fromCodePoint(65533));else{let a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){let t=1023&r,i=1023&a;n.push(String.fromCodePoint(65536+1024*t+i)),++e}else n.push(String.fromCodePoint(65533))}}return n.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}},7192:(e,t,a)=>{"use strict";t.URL=a(9471).interface,a(7403).serializeURL,a(7403).serializeURLOrigin,a(7403).basicURLParse,a(7403).setTheUsername,a(7403).setThePassword,a(7403).serializeHost,a(7403).serializeInteger,a(7403).parseURL},7394:function(e,t,a){var n;!function(e,r,i){function s(e){var t=this;t.next=function(){var e,a,n=t.w,r=t.X,i=t.i;return t.w=n=n+0x61c88647|0,a=r[i+34&127],e=r[i=i+1&127],a^=a<<13,e^=e<<17,a^=a>>>15,e^=e>>>12,a=r[i]=a^e,t.i=i,a+(n^n>>>16)|0},!function(e,t){var a,n,r,i,s,l=[],o=128;for(t===(0|t)?(n=t,t=null):(t+="\0",n=0,o=Math.max(o,t.length)),r=0,i=-32;i<o;++i)t&&(n^=t.charCodeAt((i+32)%t.length)),0===i&&(s=n),n^=n<<10,n^=n>>>15,n^=n<<4,n^=n>>>13,i>=0&&(s=s+0x61c88647|0,r=0==(a=l[127&i]^=n+s)?r+1:0);for(r>=128&&(l[127&(t&&t.length||0)]=-1),r=127,i=512;i>0;--i)n=l[r+34&127],a=l[r=r+1&127],n^=n<<13,a^=a<<17,n^=n>>>15,a^=a>>>12,l[r]=n^a;e.w=s,e.X=l,e.i=r}(t,e)}function l(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var a=new s(e),n=t&&t.state,r=function(){return(a.next()>>>0)/0x100000000};return r.double=function(){do var e=((a.next()>>>11)+(a.next()>>>0)/0x100000000)/2097152;while(0===e);return e},r.int32=a.next,r.quick=r,n&&(n.X&&l(n,a),r.state=function(){return l(a,{})}),r}r&&r.exports?r.exports=o:a.amdD&&a.amdO?void 0===(n=(function(){return o}).call(t,a,t,r))||(r.exports=n):this.xor4096=o}(0,e=a.nmd(e),a.amdD)},7403:(e,t,a)=>{"use strict";let n=a(1997),r=a(302),i={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},s=Symbol("failure");function l(e){return n.ucs2.decode(e).length}function o(e,t){let a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function p(e){return e>=48&&e<=57}function d(e){return e>=65&&e<=90||e>=97&&e<=122}function u(e){return p(e)||e>=65&&e<=70||e>=97&&e<=102}function h(e){return"."===e||"%2e"===e.toLowerCase()}function m(e){return 2===e.length&&d(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function c(e){return void 0!==i[e]}function f(e){return c(e.scheme)}function g(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function v(e){return e<=31||e>126}let b=new Set([32,34,35,60,62,63,96,123,125]);function y(e){return v(e)||b.has(e)}let w=new Set([47,58,59,61,64,91,92,93,94,124]);function x(e){return y(e)||w.has(e)}function k(e,t){let a=String.fromCodePoint(e);if(t(e)){let e=new Buffer(a),t="";for(let a=0;a<e.length;++a)t+=g(e[a]);return t}return a}function N(e,t){if("["===e[0])return"]"!==e[e.length-1]?s:function(e){let t=[0,0,0,0,0,0,0,0],a=0,r=null,i=0;if(58===(e=n.ucs2.decode(e))[i]){if(58!==e[i+1])return s;i+=2,r=++a}for(;i<e.length;){if(8===a)return s;if(58===e[i]){if(null!==r)return s;++i,r=++a;continue}let n=0,l=0;for(;l<4&&u(e[i]);)n=16*n+parseInt(o(e,i),16),++i,++l;if(46===e[i]){if(0===l||(i-=l,a>6))return s;let n=0;for(;void 0!==e[i];){let r=null;if(n>0)if(46!==e[i]||!(n<4))return s;else++i;if(!p(e[i]))return s;for(;p(e[i]);){let t=parseInt(o(e,i));if(null===r)r=t;else{if(0===r)return s;r=10*r+t}if(r>255)return s;++i}t[a]=256*t[a]+r,(2==++n||4===n)&&++a}if(4!==n)return s;break}if(58===e[i]){if(void 0===e[++i])return s}else if(void 0!==e[i])return s;t[a]=n,++a}if(null!==r){let e=a-r;for(a=7;0!==a&&e>0;){let n=t[r+e-1];t[r+e-1]=t[a],t[a]=n,--a,--e}}else if(null===r&&8!==a)return s;return t}(e.substring(1,e.length-1));if(!t){var a=e;if(-1!==a.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return s;let t="",r=n.ucs2.decode(a);for(let e=0;e<r.length;++e)t+=k(r[e],v);return t}let i=function(e){let t=new Buffer(e),a=[];for(let e=0;e<t.length;++e)37!==t[e]?a.push(t[e]):37===t[e]&&u(t[e+1])&&u(t[e+2])?(a.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):a.push(t[e]);return new Buffer(a).toString()}(e),l=r.toASCII(i,!1,r.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===l||-1!==l.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return s;let d=function(e){let t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;let a=[];for(let n of t){if(""===n)return e;let t=function(e){let t=10;return(e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e)?0:(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?s:parseInt(e,t)}(n);if(t===s)return e;a.push(t)}for(let e=0;e<a.length-1;++e)if(a[e]>255)return s;if(a[a.length-1]>=Math.pow(256,5-a.length))return s;let n=a.pop(),r=0;for(let e of a)n+=e*Math.pow(256,3-r),++r;return n}(l);return"number"==typeof d||d===s?d:l}function I(e){if("number"==typeof e){let t="",a=e;for(let e=1;e<=4;++e)t=String(a%256)+t,4!==e&&(t="."+t),a=Math.floor(a/256);return t}return e instanceof Array?"["+function(e){let t="",a=function(e){let t=null,a=1,n=null,r=0;for(let i=0;i<e.length;++i)0!==e[i]?(r>a&&(t=n,a=r),n=null,r=0):(null===n&&(n=i),++r);return r>a&&(t=n,a=r),{idx:t,len:a}}(e).idx,n=!1;for(let r=0;r<=7;++r)if(!n||0!==e[r]){if(n&&(n=!1),a===r){t+=0===r?"::":":",n=!0;continue}t+=e[r].toString(16),7!==r&&(t+=":")}return t}(e)+"]":e}function S(e){let t=e.path;if(0!==t.length){var a;"file"===e.scheme&&1===t.length&&(a=t[0],/^[A-Za-z]:$/.test(a))||t.pop()}}function T(e){return""!==e.username||""!==e.password}function C(e,t,a,r,i){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=a||"utf-8",this.stateOverride=i,this.url=r,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let e=this.input.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"");e!==this.input&&(this.parseError=!0),this.input=e}let l=this.input.replace(/\u0009|\u000A|\u000D/g,"");for(l!==this.input&&(this.parseError=!0),this.input=l,this.state=i||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=n.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),a=this["parse "+this.state](e,t);if(a){if(a===s){this.failure=!0;break}}else break}}C.prototype["parse scheme start"]=function(e,t){if(d(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,s;this.state="no scheme",--this.pointer}return!0},C.prototype["parse scheme"]=function(e,t){if(d(e)||p(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride&&(f(this.url)&&!c(this.buffer)||!f(this.url)&&c(this.buffer)||(T(this.url)||null!==this.url.port)&&"file"===this.buffer||"file"===this.url.scheme&&(""===this.url.host||null===this.url.host))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;"file"===this.url.scheme?((47!==this.input[this.pointer+1]||47!==this.input[this.pointer+2])&&(this.parseError=!0),this.state="file"):f(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":f(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,s;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},C.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?s:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):("file"===this.base.scheme?this.state="file":this.state="relative",--this.pointer),!0)},C.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},C.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},C.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):f(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},C.prototype["parse relative slash"]=function(e){return f(this.url)&&(47===e||92===e)?(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"):47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0},C.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},C.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},C.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let e=l(this.buffer);for(let t=0;t<e;++t){let e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let a=k(e,x);this.passwordTokenSeenFlag?this.url.password+=a:this.url.username+=a}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,s;this.pointer-=l(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},C.prototype["parse hostname"]=C.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(--this.pointer,f(this.url)&&""===this.buffer)return this.parseError=!0,s;if(this.stateOverride&&""===this.buffer&&(T(this.url)||null!==this.url.port))return this.parseError=!0,!1;let e=N(this.buffer,f(this.url));if(e===s)return s;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,s;let e=N(this.buffer,f(this.url));if(e===s)return s;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},C.prototype["parse port"]=function(e,t){if(p(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e)&&!this.stateOverride)return this.parseError=!0,s;if(""!==this.buffer){let e=parseInt(this.buffer);if(e>65535)return this.parseError=!0,s;this.url.port=e===i[this.url.scheme]?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}return!0};let $=new Set([47,92,63,35]);C.prototype["parse file"]=function(e){if(this.url.scheme="file",47===e||92===e)92===e&&(this.parseError=!0),this.state="file slash";else if(null!==this.base&&"file"===this.base.scheme)if(isNaN(e))this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query;else if(63===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query";else if(35===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment";else{var t;this.input.length-this.pointer-1!=0&&(t=this.input[this.pointer+1],d(e)&&(58===t||124===t))&&(!(this.input.length-this.pointer-1>=2)||$.has(this.input[this.pointer+2]))?this.parseError=!0:(this.url.host=this.base.host,this.url.path=this.base.path.slice(),S(this.url)),this.state="path",--this.pointer}else this.state="path",--this.pointer;return!0},C.prototype["parse file slash"]=function(e){if(47===e||92===e)92===e&&(this.parseError=!0),this.state="file host";else{if(null!==this.base&&"file"===this.base.scheme){var t;2===(t=this.base.path[0]).length&&d(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host}this.state="path",--this.pointer}return!0},C.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&m(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=N(this.buffer,f(this.url));if(e===s)return s;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},C.prototype["parse path start"]=function(e){return f(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},C.prototype["parse path"]=function(e){if(isNaN(e)||47===e||f(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){var t;if((f(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t)?(S(this.url),47===e||f(this.url)&&92===e||this.url.path.push("")):h(this.buffer)&&47!==e&&!(f(this.url)&&92===e)?this.url.path.push(""):h(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&m(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=k(e,y);return!0},C.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+k(e,v))),!0},C.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){f(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");let t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=g(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},C.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=k(e,v))),!0},e.exports.serializeURL=function(e,t){let a=e.scheme+":";if(null!==e.host?(a+="//",(""!==e.username||""!==e.password)&&(a+=e.username,""!==e.password&&(a+=":"+e.password),a+="@"),a+=I(e.host),null!==e.port&&(a+=":"+e.port)):null===e.host&&"file"===e.scheme&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(let t of e.path)a+="/"+t;return null!==e.query&&(a+="?"+e.query),t||null===e.fragment||(a+="#"+e.fragment),a},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":var a;let n;return n=(a={scheme:t.scheme,host:t.host,port:t.port}).scheme+"://"+I(a.host),null!==a.port&&(n+=":"+a.port),n;case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});let a=new C(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url},e.exports.setTheUsername=function(e,t){e.username="";let a=n.ucs2.decode(t);for(let t=0;t<a.length;++t)e.username+=k(a[t],x)},e.exports.setThePassword=function(e,t){e.password="";let a=n.ucs2.decode(t);for(let t=0;t<a.length;++t)e.password+=k(a[t],x)},e.exports.serializeHost=I,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,a){return void 0===a&&(a={}),e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},7896:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')},9471:(e,t,a)=>{"use strict";let n=a(7143),r=a(1852),i=a(1042),s=r.implSymbol;function l(t){if(!this||this[s]||!(this instanceof l))throw TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let a=[];for(let e=0;e<arguments.length&&e<2;++e)a[e]=arguments[e];a[0]=n.USVString(a[0]),void 0!==a[1]&&(a[1]=n.USVString(a[1])),e.exports.setup(this,a)}l.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");let t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[s].toJSON.apply(this[s],t)},Object.defineProperty(l.prototype,"href",{get(){return this[s].href},set(e){e=n.USVString(e),this[s].href=e},enumerable:!0,configurable:!0}),l.prototype.toString=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");return this.href},Object.defineProperty(l.prototype,"origin",{get(){return this[s].origin},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"protocol",{get(){return this[s].protocol},set(e){e=n.USVString(e),this[s].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"username",{get(){return this[s].username},set(e){e=n.USVString(e),this[s].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"password",{get(){return this[s].password},set(e){e=n.USVString(e),this[s].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"host",{get(){return this[s].host},set(e){e=n.USVString(e),this[s].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"hostname",{get(){return this[s].hostname},set(e){e=n.USVString(e),this[s].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"port",{get(){return this[s].port},set(e){e=n.USVString(e),this[s].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"pathname",{get(){return this[s].pathname},set(e){e=n.USVString(e),this[s].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"search",{get(){return this[s].search},set(e){e=n.USVString(e),this[s].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"hash",{get(){return this[s].hash},set(e){e=n.USVString(e),this[s].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[s]instanceof i.implementation,create(e,t){let a=Object.create(l.prototype);return this.setup(a,e,t),a},setup(e,t,a){a||(a={}),a.wrapper=e,e[s]=new i.implementation(t,a),e[s][r.wrapperSymbol]=e},interface:l,expose:{Window:{URL:l},Worker:{URL:l}}}}};